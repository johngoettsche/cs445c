*** parse successful ***
simple type specifier8
type specifier1
decl specifier2
decl specifier seq1
identifier1
unqualified id1
id expression1
declarator id1
direct declarator1
parameter declaration clause4
direct declarator5
*addParamsToFunction*
*passTypeBelowPointer*
declarator1 
ctor initializer opt1
simple type specifier8
type specifier1
decl specifier2
decl specifier seq1
identifier1
unqualified id1
id expression1
declarator id1
direct declarator1
declarator1 
integer literal1
literal1
primary expression1
postfix expression1
unary expression1
cast_expression1
pm_expression1
multiplicative_expression1
additive_expression1
shift_expression1
relational_expression1
equality_expression1
and_expression1
exclusive_or_expression1
inclusive_or_expression1
logical and expression1
logical or expression1
conditional expression1
assignment expression1
initializer clause1
initializer1
initializer opt
init declarator1 
init declarator list1
simple declaration1
*passTypeBelowPointer*
block declaration1
declaration statement1
statement7
statement seq1
simple type specifier13
type specifier1
decl specifier2
decl specifier seq1
identifier1
unqualified id1
id expression1
declarator id1
direct declarator1
declarator1 
integer literal1
literal1
primary expression1
postfix expression1
unary expression1
cast_expression1
pm_expression1
multiplicative_expression1
additive_expression1
shift_expression1
relational_expression1
equality_expression1
and_expression1
exclusive_or_expression1
inclusive_or_expression1
logical and expression1
logical or expression1
conditional expression1
assignment expression1
initializer clause1
initializer1
initializer opt
init declarator1 
init declarator list1
simple declaration1
*passTypeBelowPointer*
block declaration1
declaration statement1
statement7
statement seq2
identifier1
unqualified id1
id expression1
primary expression4
postfix expression1
unary expression1
cast_expression1
pm_expression1
multiplicative_expression1
additive_expression1
shift_expression1
relational_expression1
identifier1
unqualified id1
id expression1
primary expression4
postfix expression1
unary expression1
cast_expression1
pm_expression1
multiplicative_expression1
additive_expression1
shift_expression1
relational_expression2
equality_expression1
and_expression1
exclusive_or_expression1
inclusive_or_expression1
logical and expression1
logical or expression1
conditional expression1
assignment expression1
expression1
condition1
identifier1
unqualified id1
id expression1
primary expression4
postfix expression1
unary expression1
cast_expression1
pm_expression1
multiplicative_expression1
additive_expression1
shift_expression1
relational_expression1
equality_expression1
and_expression1
exclusive_or_expression1
inclusive_or_expression1
logical and expression1
logical or expression1
identifier1
unqualified id1
id expression1
primary expression4
postfix expression1
unary expression1
cast_expression1
pm_expression1
multiplicative_expression1
additive_expression1
shift_expression1
relational_expression1
equality_expression1
and_expression1
exclusive_or_expression1
inclusive_or_expression1
logical and expression1
logical or expression1
conditional expression1
assignment expression1
assignment expression2
expression1
expression opt2
expression statement1
statement2
selection statement1
statement4
statement seq2
statement seq opt2
compound statement1
function body1
function definition2
*passTypeBelowPointer*
declaration2
declaration seq1
declaration seq opt2
translation unit1
*** build types successful ***
 program: 1 program  - program
  declaration_seq_opt: 1 main  - function
    declaration_seq: 1 main  - function
      declaration: 1 main  - function
        function_definition: 4 main  - function
          decl_specifier_seq: 1 - int
            decl_specifier: 1 - int
              type_specifier: 1 - int
                simple_type_specifier: 1 - int
         INT: int - int
          declarator: 1 main  - function
            direct_declarator: 2 main  - function
              direct_declarator: 1 main  - function
                declarator_id: 1 main  - function
                  id_expression: 1 main  - function
                    unqualified_id: 1 main  - function
                      identifier: 1 main  - function
            IDENTIFIER: main - function
              parameter_declaration_clause: 0 - NULL
          ctor_initializer_opt: 0 - NULL
          function_body: 1 - function
            compound_statement: 1 - touple
              statement_seq_opt: 1 - touple
                statement_seq: 2 - touple
                  statement_seq: 2 - touple
                    statement_seq: 1 a  - int
                      statement: 1 a  - int
                        declaration_statement: 1 a  - int
                          block_declaration: 1 a  - int
                            simple_declaration: 2 a  - int
                              decl_specifier_seq: 1 a  - int
                                decl_specifier: 1 a  - int
                                  type_specifier: 1 a  - int
                                    simple_type_specifier: 1 a  - int
                   INT: int - int
                              init_declarator_list: 1 a  - int
                                init_declarator: 2 a  - int
                                  declarator: 1 a  - int
                                    direct_declarator: 1 a  - int
                                      declarator_id: 1 a  - int
                                        id_expression: 1 a  - int
                                          unqualified_id: 1 a  - int
                                            identifier: 1 a  - int
                       IDENTIFIER: a - int
                                  initializer_opt: 1 - int
                                    initializer: 1 - int
                                      initializer_clause: 1 - int
                                        assignment_expression: 1 - int
                                          conditional_expression: 1 - int
                                            logical_or_expression: 1 - int
                                              logical_and_expression: 1 - int
                                                inclusive_or_expression: 1 - int
                                                  exclusive_or_expression: 1 - int
                                                    and_expression: 1 - int
                                                      equality_expression: 1 - int
                                                        relational_expression: 1 - int
                                                          shift_expression: 1 - int
                                                            additive_expression: 1 - int
                                                              multiplicative_expression: 1 - int
                                                                pm_expression: 1 - int
                                                                  cast_expression: 1 - int
                                                                    unary_expression: 1 - int
                                                                      postfix_expression: 1 - int
                                                                        primary_expression: 1 - int
                                                                          literal: 1 - int
                                                                            integer_literal: 1 - int
                                       INTEGER: 1 - int
                    statement: 1 b  - double
                      declaration_statement: 1 b  - double
                        block_declaration: 1 b  - double
                          simple_declaration: 2 b  - double
                            decl_specifier_seq: 1 b  - double
                              decl_specifier: 1 b  - double
                                type_specifier: 1 b  - double
                                  simple_type_specifier: 1 b  - double
                  DOUBLE: double - double
                            init_declarator_list: 1 b  - double
    