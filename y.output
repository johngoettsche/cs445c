State 0 conflicts: 1 shift/reduce
State 7 conflicts: 4 shift/reduce
State 32 conflicts: 1 shift/reduce
State 50 conflicts: 1 shift/reduce
State 59 conflicts: 1 shift/reduce
State 83 conflicts: 1 shift/reduce
State 100 conflicts: 4 shift/reduce
State 109 conflicts: 1 shift/reduce
State 110 conflicts: 1 shift/reduce
State 113 conflicts: 2 shift/reduce
State 136 conflicts: 1 shift/reduce
State 137 conflicts: 1 shift/reduce
State 155 conflicts: 4 shift/reduce
State 156 conflicts: 2 shift/reduce
State 174 conflicts: 3 shift/reduce
State 197 conflicts: 1 shift/reduce
State 210 conflicts: 1 shift/reduce
State 214 conflicts: 1 shift/reduce
State 216 conflicts: 1 shift/reduce
State 226 conflicts: 2 shift/reduce
State 229 conflicts: 1 shift/reduce
State 246 conflicts: 2 shift/reduce
State 253 conflicts: 1 shift/reduce
State 262 conflicts: 2 shift/reduce
State 288 conflicts: 1 shift/reduce
State 298 conflicts: 1 shift/reduce
State 324 conflicts: 1 shift/reduce
State 339 conflicts: 1 shift/reduce
State 340 conflicts: 1 shift/reduce
State 341 conflicts: 1 shift/reduce
State 344 conflicts: 1 shift/reduce
State 346 conflicts: 1 shift/reduce
State 379 conflicts: 1 shift/reduce
State 391 conflicts: 1 shift/reduce
State 453 conflicts: 1 shift/reduce
State 454 conflicts: 1 shift/reduce
State 504 conflicts: 1 shift/reduce
State 506 conflicts: 1 shift/reduce
State 525 conflicts: 1 shift/reduce
State 529 conflicts: 2 shift/reduce
State 534 conflicts: 2 shift/reduce
State 536 conflicts: 1 shift/reduce
State 571 conflicts: 2 shift/reduce
State 602 conflicts: 1 shift/reduce
State 603 conflicts: 1 shift/reduce
State 660 conflicts: 2 shift/reduce
State 661 conflicts: 2 shift/reduce
State 665 conflicts: 2 shift/reduce
State 666 conflicts: 2 shift/reduce
State 671 conflicts: 1 shift/reduce
State 694 conflicts: 2 shift/reduce
State 743 conflicts: 2 shift/reduce
State 748 conflicts: 2 shift/reduce
State 777 conflicts: 1 shift/reduce
State 815 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 typedef_name: TYPEDEF_NAME

    2 namespace_name: original_namespace_name

    3 original_namespace_name: NAMESPACE_NAME

    4 class_name: CLASS_NAME
    5           | template_id

    6 enum_name: ENUM_NAME

    7 template_name: TEMPLATE_NAME

    8 identifier: IDENTIFIER

    9 literal: integer_literal
   10        | character_literal
   11        | floating_literal
   12        | string_literal
   13        | boolean_literal

   14 integer_literal: INTEGER

   15 character_literal: CHARACTER

   16 floating_literal: FLOATING

   17 string_literal: STRING

   18 boolean_literal: TRUE
   19                | FALSE

   20 translation_unit: declaration_seq_opt

   21 primary_expression: literal
   22                   | THIS
   23                   | '(' expression ')'
   24                   | id_expression

   25 id_expression: unqualified_id
   26              | qualified_id

   27 unqualified_id: identifier
   28               | operator_function_id
   29               | conversion_function_id
   30               | '~' class_name

   31 qualified_id: nested_name_specifier unqualified_id
   32             | nested_name_specifier TEMPLATE unqualified_id

   33 nested_name_specifier: class_name COLONCOLON nested_name_specifier namespace_name COLONCOLON nested_name_specifier
   34                      | class_name COLONCOLON
   35                      | namespace_name COLONCOLON

   36 postfix_expression: primary_expression
   37                   | postfix_expression '[' expression ']'
   38                   | postfix_expression '(' expression_list_opt ')'
   39                   | postfix_expression '.' TEMPLATE COLONCOLON id_expression
   40                   | postfix_expression '.' TEMPLATE id_expression
   41                   | postfix_expression '.' COLONCOLON id_expression
   42                   | postfix_expression '.' id_expression
   43                   | postfix_expression ARROW TEMPLATE COLONCOLON id_expression
   44                   | postfix_expression ARROW TEMPLATE id_expression
   45                   | postfix_expression ARROW COLONCOLON id_expression
   46                   | postfix_expression ARROW id_expression
   47                   | postfix_expression PLUSPLUS
   48                   | postfix_expression MINUSMINUS
   49                   | DYNAMIC_CAST '<' type_id '>' '(' expression ')'
   50                   | STATIC_CAST '<' type_id '>' '(' expression ')'
   51                   | REINTERPRET_CAST '<' type_id '>' '(' expression ')'
   52                   | CONST_CAST '<' type_id '>' '(' expression ')'
   53                   | TYPEID '(' expression ')'
   54                   | TYPEID '(' type_id ')'

   55 expression_list: assignment_expression
   56                | expression_list ',' assignment_expression

   57 unary_expression: postfix_expression
   58                 | PLUSPLUS cast_expression
   59                 | MINUSMINUS cast_expression
   60                 | '*' cast_expression
   61                 | '&' cast_expression
   62                 | unary_operator cast_expression
   63                 | SIZEOF unary_expression
   64                 | SIZEOF '(' type_id ')'
   65                 | new_expression
   66                 | delete_expression

   67 unary_operator: '+'
   68               | '-'
   69               | '!'
   70               | '~'

   71 new_expression: NEW new_placement_opt new_type_id new_initializer_opt
   72               | COLONCOLON NEW new_placement_opt new_type_id new_initializer_opt
   73               | NEW new_placement_opt '(' type_id ')' new_initializer_opt
   74               | COLONCOLON NEW new_placement_opt '(' type_id ')' new_initializer_opt

   75 new_placement: '(' expression_list ')'

   76 new_type_id: type_specifier_seq new_declarator_opt

   77 new_declarator: ptr_operator new_declarator_opt
   78               | direct_new_declarator

   79 direct_new_declarator: '[' expression ']'
   80                      | direct_new_declarator '[' constant_expression ']'

   81 new_initializer: '(' expression_list_opt ')'

   82 delete_expression: DELETE cast_expression
   83                  | COLONCOLON DELETE cast_expression
   84                  | DELETE '[' ']' cast_expression
   85                  | COLONCOLON DELETE '[' ']' cast_expression

   86 cast_expression: unary_expression
   87                | '(' type_id ')' cast_expression

   88 pm_expression: cast_expression
   89              | pm_expression DOTSTAR cast_expression
   90              | pm_expression ARROWSTAR cast_expression

   91 multiplicative_expression: pm_expression
   92                          | multiplicative_expression '*' pm_expression
   93                          | multiplicative_expression '/' pm_expression
   94                          | multiplicative_expression '%' pm_expression

   95 additive_expression: multiplicative_expression
   96                    | additive_expression '+' multiplicative_expression
   97                    | additive_expression '-' multiplicative_expression

   98 shift_expression: additive_expression
   99                 | shift_expression SL additive_expression
  100                 | shift_expression SR additive_expression

  101 relational_expression: shift_expression
  102                      | relational_expression '<' shift_expression
  103                      | relational_expression '>' shift_expression
  104                      | relational_expression LTEQ shift_expression
  105                      | relational_expression GTEQ shift_expression

  106 equality_expression: relational_expression
  107                    | equality_expression EQ relational_expression
  108                    | equality_expression NOTEQ relational_expression

  109 and_expression: equality_expression
  110               | and_expression '&' equality_expression

  111 exclusive_or_expression: and_expression
  112                        | exclusive_or_expression '^' and_expression

  113 inclusive_or_expression: exclusive_or_expression
  114                        | inclusive_or_expression '|' exclusive_or_expression

  115 logical_and_expression: inclusive_or_expression
  116                       | logical_and_expression ANDAND inclusive_or_expression

  117 logical_or_expression: logical_and_expression
  118                      | logical_or_expression OROR logical_and_expression

  119 conditional_expression: logical_or_expression
  120                       | logical_or_expression '?' expression ':' assignment_expression

  121 assignment_expression: conditional_expression
  122                      | logical_or_expression assignment_operator assignment_expression
  123                      | throw_expression

  124 assignment_operator: '='
  125                    | MULEQ
  126                    | DIVEQ
  127                    | MODEQ
  128                    | ADDEQ
  129                    | SUBEQ
  130                    | SREQ
  131                    | SLEQ
  132                    | ANDEQ
  133                    | XOREQ
  134                    | OREQ

  135 expression: assignment_expression
  136           | expression ',' assignment_expression

  137 constant_expression: conditional_expression

  138 statement: labeled_statement
  139          | expression_statement
  140          | compound_statement
  141          | selection_statement
  142          | iteration_statement
  143          | jump_statement
  144          | declaration_statement
  145          | try_block

  146 labeled_statement: identifier ':' statement
  147                  | CASE constant_expression ':' statement
  148                  | DEFAULT ':' statement

  149 expression_statement: expression_opt ';'

  150 compound_statement: '{' statement_seq_opt '}'

  151 statement_seq: statement
  152              | statement_seq statement

  153 selection_statement: IF '(' condition ')' statement
  154                    | IF '(' condition ')' statement ELSE statement
  155                    | SWITCH '(' condition ')' statement

  156 condition: expression
  157          | type_specifier_seq declarator '=' assignment_expression

  158 iteration_statement: WHILE '(' condition ')' statement
  159                    | DO statement WHILE '(' expression ')' ';'
  160                    | FOR '(' for_init_statement condition_opt ';' expression_opt ')' statement

  161 for_init_statement: expression_statement
  162                   | simple_declaration

  163 jump_statement: BREAK ';'
  164               | CONTINUE ';'
  165               | RETURN expression_opt ';'
  166               | GOTO identifier ';'

  167 declaration_statement: block_declaration

  168 declaration_seq: declaration
  169                | declaration_seq declaration

  170 declaration: block_declaration
  171            | function_definition
  172            | template_declaration
  173            | explicit_instantiation
  174            | explicit_specialization
  175            | linkage_specification
  176            | namespace_definition

  177 block_declaration: simple_declaration
  178                  | asm_definition
  179                  | namespace_alias_definition
  180                  | using_declaration
  181                  | using_directive

  182 simple_declaration: decl_specifier_seq init_declarator_list ';'
  183                   | decl_specifier_seq ';'

  184 decl_specifier: storage_class_specifier
  185               | type_specifier
  186               | function_specifier
  187               | FRIEND
  188               | TYPEDEF

  189 decl_specifier_seq: decl_specifier
  190                   | decl_specifier_seq decl_specifier

  191 storage_class_specifier: AUTO
  192                        | REGISTER
  193                        | STATIC
  194                        | EXTERN
  195                        | MUTABLE

  196 function_specifier: INLINE
  197                   | VIRTUAL
  198                   | EXPLICIT

  199 type_specifier: simple_type_specifier
  200               | class_specifier
  201               | enum_specifier
  202               | elaborated_type_specifier
  203               | cv_qualifier

  204 simple_type_specifier: type_name
  205                      | nested_name_specifier type_name
  206                      | COLONCOLON nested_name_specifier_opt type_name
  207                      | CHAR
  208                      | WCHAR_T
  209                      | BOOL
  210                      | SHORT
  211                      | INT
  212                      | LONG
  213                      | SIGNED
  214                      | UNSIGNED
  215                      | FLOAT
  216                      | DOUBLE
  217                      | VOID
  218                      | STR_TYPE

  219 type_name: class_name
  220          | enum_name
  221          | typedef_name

  222 elaborated_type_specifier: class_key COLONCOLON nested_name_specifier identifier
  223                          | class_key COLONCOLON identifier
  224                          | ENUM COLONCOLON nested_name_specifier identifier
  225                          | ENUM COLONCOLON identifier
  226                          | ENUM nested_name_specifier identifier
  227                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier
  228                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'

  229 enum_specifier: ENUM identifier '{' enumerator_list_opt '}'

  230 enumerator_list: enumerator_definition
  231                | enumerator_list ',' enumerator_definition

  232 enumerator_definition: enumerator
  233                      | enumerator '=' constant_expression

  234 enumerator: identifier

  235 namespace_definition: named_namespace_definition
  236                     | unnamed_namespace_definition

  237 named_namespace_definition: original_namespace_definition
  238                           | extension_namespace_definition

  239 original_namespace_definition: NAMESPACE identifier '{' namespace_body '}'

  240 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body '}'

  241 unnamed_namespace_definition: NAMESPACE '{' namespace_body '}'

  242 namespace_body: declaration_seq_opt

  243 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier ';'

  244 qualified_namespace_specifier: COLONCOLON nested_name_specifier namespace_name
  245                              | COLONCOLON namespace_name
  246                              | nested_name_specifier namespace_name
  247                              | namespace_name

  248 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier unqualified_id ';'
  249                  | USING TYPENAME nested_name_specifier unqualified_id ';'
  250                  | USING COLONCOLON nested_name_specifier unqualified_id ';'
  251                  | USING nested_name_specifier unqualified_id ';'
  252                  | USING COLONCOLON unqualified_id ';'

  253 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier namespace_name ';'
  254                | USING NAMESPACE COLONCOLON namespace_name ';'
  255                | USING NAMESPACE nested_name_specifier namespace_name ';'
  256                | USING NAMESPACE namespace_name ';'

  257 asm_definition: ASM '(' string_literal ')' ';'

  258 linkage_specification: EXTERN string_literal '{' declaration_seq_opt '}'
  259                      | EXTERN string_literal declaration

  260 init_declarator_list: init_declarator
  261                     | init_declarator_list ',' init_declarator

  262 init_declarator: declarator initializer_opt

  263 declarator: direct_declarator
  264           | ptr_operator declarator

  265 direct_declarator: declarator_id
  266                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  267                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq
  268                  | direct_declarator '(' parameter_declaration_clause ')' exception_specification
  269                  | direct_declarator '(' parameter_declaration_clause ')'
  270                  | direct_declarator '[' constant_expression_opt ']'
  271                  | '(' declarator ')'

  272 ptr_operator: '*'
  273             | '*' cv_qualifier_seq
  274             | '&'
  275             | nested_name_specifier '*'
  276             | nested_name_specifier '*' cv_qualifier_seq
  277             | COLONCOLON nested_name_specifier '*'
  278             | COLONCOLON nested_name_specifier '*' cv_qualifier_seq

  279 cv_qualifier_seq: cv_qualifier
  280                 | cv_qualifier cv_qualifier_seq

  281 cv_qualifier: CONST
  282             | VOLATILE

  283 declarator_id: id_expression
  284              | COLONCOLON id_expression
  285              | COLONCOLON nested_name_specifier type_name
  286              | COLONCOLON type_name

  287 type_id: type_specifier_seq abstract_declarator_opt

  288 type_specifier_seq: type_specifier type_specifier_seq_opt

  289 abstract_declarator: ptr_operator abstract_declarator_opt
  290                    | direct_abstract_declarator

  291 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  292                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq
  293                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' exception_specification
  294                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')'
  295                           | direct_abstract_declarator_opt '[' constant_expression_opt ']'
  296                           | '(' abstract_declarator ')'

  297 parameter_declaration_clause: parameter_declaration_list ELLIPSIS
  298                             | parameter_declaration_list
  299                             | ELLIPSIS
  300                             | /* empty */
  301                             | parameter_declaration_list ',' ELLIPSIS

  302 parameter_declaration_list: parameter_declaration
  303                           | parameter_declaration_list ',' parameter_declaration

  304 parameter_declaration: decl_specifier_seq declarator
  305                      | decl_specifier_seq declarator '=' assignment_expression
  306                      | decl_specifier_seq abstract_declarator_opt
  307                      | decl_specifier_seq abstract_declarator_opt '=' assignment_expression

  308 function_definition: declarator ctor_initializer_opt function_body
  309                    | decl_specifier_seq declarator ctor_initializer_opt function_body
  310                    | declarator function_try_block
  311                    | decl_specifier_seq declarator function_try_block

  312 function_body: compound_statement

  313 initializer: '=' initializer_clause
  314            | '(' expression_list ')'

  315 initializer_clause: assignment_expression
  316                   | '{' initializer_list COMMA_opt '}'
  317                   | '{' '}'

  318 initializer_list: initializer_clause
  319                 | initializer_list ',' initializer_clause

  320 class_specifier: class_head '{' member_specification_opt '}'

  321 class_head: class_key identifier
  322           | class_key identifier base_clause
  323           | class_key nested_name_specifier identifier
  324           | class_key nested_name_specifier identifier base_clause

  325 class_key: CLASS
  326          | STRUCT
  327          | UNION

  328 member_specification: member_declaration member_specification_opt
  329                     | access_specifier ':' member_specification_opt

  330 member_declaration: decl_specifier_seq member_declarator_list ';'
  331                   | decl_specifier_seq ';'
  332                   | member_declarator_list ';'
  333                   | ';'
  334                   | function_definition SEMICOLON_opt
  335                   | qualified_id ';'
  336                   | using_declaration
  337                   | template_declaration

  338 member_declarator_list: member_declarator
  339                       | member_declarator_list ',' member_declarator

  340 member_declarator: /* empty */
  341                  | declarator
  342                  | declarator pure_specifier
  343                  | declarator constant_initializer
  344                  | identifier ':' constant_expression

  345 pure_specifier: '=' '0'

  346 constant_initializer: '=' constant_expression

  347 base_clause: ':' base_specifier_list

  348 base_specifier_list: base_specifier
  349                    | base_specifier_list ',' base_specifier

  350 base_specifier: COLONCOLON nested_name_specifier class_name
  351               | COLONCOLON class_name
  352               | nested_name_specifier class_name
  353               | class_name
  354               | VIRTUAL access_specifier COLONCOLON nested_name_specifier_opt class_name
  355               | VIRTUAL access_specifier nested_name_specifier_opt class_name
  356               | VIRTUAL COLONCOLON nested_name_specifier_opt class_name
  357               | VIRTUAL nested_name_specifier_opt class_name
  358               | access_specifier VIRTUAL COLONCOLON nested_name_specifier_opt class_name
  359               | access_specifier VIRTUAL nested_name_specifier_opt class_name
  360               | access_specifier COLONCOLON nested_name_specifier_opt class_name
  361               | access_specifier nested_name_specifier_opt class_name

  362 access_specifier: PRIVATE
  363                 | PROTECTED
  364                 | PUBLIC

  365 conversion_function_id: OPERATOR conversion_type_id

  366 conversion_type_id: type_specifier_seq conversion_declarator_opt

  367 conversion_declarator: ptr_operator conversion_declarator_opt

  368 ctor_initializer: ':' mem_initializer_list

  369 mem_initializer_list: mem_initializer
  370                     | mem_initializer ',' mem_initializer_list

  371 mem_initializer: mem_initializer_id '(' expression_list_opt ')'

  372 mem_initializer_id: COLONCOLON nested_name_specifier class_name
  373                   | COLONCOLON class_name
  374                   | nested_name_specifier class_name
  375                   | class_name
  376                   | identifier

  377 operator_function_id: OPERATOR operator

  378 operator: NEW
  379         | DELETE
  380         | NEW '[' ']'
  381         | DELETE '[' ']'
  382         | '+'
  383         | '_'
  384         | '*'
  385         | '/'
  386         | '%'
  387         | '^'
  388         | '&'
  389         | '|'
  390         | '~'
  391         | '!'
  392         | '='
  393         | '<'
  394         | '>'
  395         | ADDEQ
  396         | SUBEQ
  397         | MULEQ
  398         | DIVEQ
  399         | MODEQ
  400         | XOREQ
  401         | ANDEQ
  402         | OREQ
  403         | SL
  404         | SR
  405         | SREQ
  406         | SLEQ
  407         | EQ
  408         | NOTEQ
  409         | LTEQ
  410         | GTEQ
  411         | ANDAND
  412         | OROR
  413         | PLUSPLUS
  414         | MINUSMINUS
  415         | ','
  416         | ARROWSTAR
  417         | ARROW
  418         | '(' ')'
  419         | '[' ']'

  420 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' declaration

  421 template_parameter_list: template_parameter
  422                        | template_parameter_list ',' template_parameter

  423 template_parameter: type_parameter
  424                   | parameter_declaration

  425 type_parameter: CLASS identifier
  426               | CLASS identifier '=' type_id
  427               | TYPENAME identifier
  428               | TYPENAME identifier '=' type_id
  429               | TEMPLATE '<' template_parameter_list '>' CLASS identifier
  430               | TEMPLATE '<' template_parameter_list '>' CLASS identifier '=' template_name

  431 template_id: template_name '<' template_argument_list '>'

  432 template_argument_list: template_argument
  433                       | template_argument_list ',' template_argument

  434 template_argument: assignment_expression
  435                  | type_id
  436                  | template_name

  437 explicit_instantiation: TEMPLATE declaration

  438 explicit_specialization: TEMPLATE '<' '>' declaration

  439 try_block: TRY compound_statement handler_seq

  440 function_try_block: TRY ctor_initializer_opt function_body handler_seq

  441 handler_seq: handler handler_seq_opt

  442 handler: CATCH '(' exception_declaration ')' compound_statement

  443 exception_declaration: type_specifier_seq declarator
  444                      | type_specifier_seq abstract_declarator
  445                      | type_specifier_seq
  446                      | ELLIPSIS

  447 throw_expression: THROW assignment_expression_opt

  448 exception_specification: THROW '(' type_id_list_opt ')'

  449 type_id_list: type_id
  450             | type_id_list ',' type_id

  451 declaration_seq_opt: /* empty */
  452                    | declaration_seq

  453 nested_name_specifier_opt: /* empty */
  454                          | nested_name_specifier

  455 expression_list_opt: /* empty */
  456                    | expression_list

  457 COLONCOLON_opt: /* empty */
  458               | COLONCOLON

  459 new_placement_opt: /* empty */
  460                  | new_placement

  461 new_initializer_opt: /* empty */
  462                    | new_initializer

  463 new_declarator_opt: /* empty */
  464                   | new_declarator

  465 expression_opt: /* empty */
  466               | expression

  467 statement_seq_opt: /* empty */
  468                  | statement_seq

  469 condition_opt: /* empty */
  470              | condition

  471 enumerator_list_opt: /* empty */
  472                    | enumerator_list

  473 initializer_opt: /* empty */
  474                | initializer

  475 constant_expression_opt: /* empty */
  476                        | constant_expression

  477 abstract_declarator_opt: /* empty */
  478                        | abstract_declarator

  479 type_specifier_seq_opt: /* empty */
  480                       | type_specifier_seq

  481 direct_abstract_declarator_opt: /* empty */
  482                               | direct_abstract_declarator

  483 ctor_initializer_opt: /* empty */
  484                     | ctor_initializer

  485 COMMA_opt: /* empty */
  486          | ','

  487 member_specification_opt: /* empty */
  488                         | member_specification

  489 SEMICOLON_opt: /* empty */
  490              | ';'

  491 conversion_declarator_opt: /* empty */
  492                          | conversion_declarator

  493 EXPORT_opt: /* empty */
  494           | EXPORT

  495 handler_seq_opt: /* empty */
  496                | handler_seq

  497 assignment_expression_opt: /* empty */
  498                          | assignment_expression

  499 type_id_list_opt: /* empty */
  500                 | type_id_list


Terminals, with rules where they appear

$end (0) 0
'!' (33) 69 391
'%' (37) 94 386
'&' (38) 61 110 274 388
'(' (40) 23 38 49 50 51 52 53 54 64 73 74 75 81 87 153 154 155 158
    159 160 257 266 267 268 269 271 291 292 293 294 296 314 371 418
    442 448
')' (41) 23 38 49 50 51 52 53 54 64 73 74 75 81 87 153 154 155 158
    159 160 257 266 267 268 269 271 291 292 293 294 296 314 371 418
    442 448
'*' (42) 60 92 272 273 275 276 277 278 384
'+' (43) 67 96 382
',' (44) 56 136 231 261 301 303 319 339 349 370 415 422 433 450 486
'-' (45) 68 97
'.' (46) 39 40 41 42
'/' (47) 93 385
'0' (48) 345
':' (58) 120 146 147 148 329 344 347 368
';' (59) 149 159 160 163 164 165 166 182 183 243 248 249 250 251 252
    253 254 255 256 257 330 331 332 333 335 490
'<' (60) 49 50 51 52 102 228 393 420 429 430 431 438
'=' (61) 124 157 233 243 305 307 313 345 346 392 426 428 430
'>' (62) 49 50 51 52 103 228 394 420 429 430 431 438
'?' (63) 120
'[' (91) 37 79 80 84 85 270 295 380 381 419
']' (93) 37 79 80 84 85 270 295 380 381 419
'^' (94) 112 387
'_' (95) 383
'{' (123) 150 229 239 240 241 258 316 317 320
'|' (124) 114 389
'}' (125) 150 229 239 240 241 258 316 317 320
'~' (126) 30 70 390
error (256)
IDENTIFIER (258) 8
INTEGER (259) 14
FLOATING (260) 16
CHARACTER (261) 15
STRING (262) 17
TYPEDEF_NAME (263) 1
NAMESPACE_NAME (264) 3
CLASS_NAME (265) 4
ENUM_NAME (266) 6
TEMPLATE_NAME (267) 7
ELLIPSIS (268) 297 299 301 446
COLONCOLON (269) 33 34 35 39 41 43 45 72 74 83 85 206 222 223 224 225
    244 245 248 250 252 253 254 277 278 284 285 286 350 351 354 356
    358 360 372 373 458
DOTSTAR (270) 89
ADDEQ (271) 128 395
SUBEQ (272) 129 396
MULEQ (273) 125 397
DIVEQ (274) 126 398
MODEQ (275) 127 399
XOREQ (276) 133 400
ANDEQ (277) 132 401
OREQ (278) 134 402
SL (279) 99 403
SR (280) 100 404
SREQ (281) 130 405
SLEQ (282) 131 406
EQ (283) 107 407
NOTEQ (284) 108 408
LTEQ (285) 104 409
GTEQ (286) 105 410
ANDAND (287) 116 411
OROR (288) 118 412
PLUSPLUS (289) 47 58 413
MINUSMINUS (290) 48 59 414
ARROWSTAR (291) 90 416
ARROW (292) 43 44 45 46 417
ASM (293) 257
AUTO (294) 191
BOOL (295) 209
BREAK (296) 163
CASE (297) 147
CATCH (298) 442
CHAR (299) 207
CLASS (300) 325 425 426 429 430
CONST (301) 281
CONST_CAST (302) 52
CONTINUE (303) 164
DEFAULT (304) 148
DELETE (305) 82 83 84 85 379 381
DO (306) 159
DOUBLE (307) 216
DYNAMIC_CAST (308) 49
ELSE (309) 154
ENUM (310) 224 225 226 229
EXPLICIT (311) 198
EXPORT (312) 494
EXTERN (313) 194 258 259
FALSE (314) 19
FLOAT (315) 215
FOR (316) 160
FRIEND (317) 187
GOTO (318) 166
IF (319) 153 154
INLINE (320) 196
INT (321) 211
LONG (322) 212
MUTABLE (323) 195
NAMESPACE (324) 239 240 241 243 253 254 255 256
NEW (325) 71 72 73 74 378 380
OPERATOR (326) 365 377
PRIVATE (327) 362
PROTECTED (328) 363
PUBLIC (329) 364
REGISTER (330) 192
REINTERPRET_CAST (331) 51
RETURN (332) 165
SHORT (333) 210
SIGNED (334) 213
SIZEOF (335) 63 64
STATIC (336) 193
STATIC_CAST (337) 50
STRUCT (338) 326
SWITCH (339) 155
TEMPLATE (340) 32 39 40 43 44 420 429 430 437 438
THIS (341) 22
THROW (342) 447 448
TRUE (343) 18
TRY (344) 439 440
TYPEDEF (345) 188
TYPEID (346) 53 54
TYPENAME (347) 227 228 248 249 427 428
UNION (348) 327
UNSIGNED (349) 214
USING (350) 248 249 250 251 252 253 254 255 256
VIRTUAL (351) 197 354 355 356 357 358 359
VOID (352) 217
VOLATILE (353) 282
WCHAR_T (354) 208
WHILE (355) 158 159
STR_TYPE (356) 218


Nonterminals, with rules where they appear

$accept (128)
    on left: 0
typedef_name (129)
    on left: 1, on right: 221
namespace_name (130)
    on left: 2, on right: 33 35 244 245 246 247 253 254 255 256
original_namespace_name (131)
    on left: 3, on right: 2 240
class_name (132)
    on left: 4 5, on right: 30 33 34 219 350 351 352 353 354 355 356
    357 358 359 360 361 372 373 374 375
enum_name (133)
    on left: 6, on right: 220
template_name (134)
    on left: 7, on right: 430 431 436
identifier (135)
    on left: 8, on right: 27 146 166 222 223 224 225 226 227 228 229
    234 239 243 321 322 323 324 344 376 425 426 427 428 429 430
literal (136)
    on left: 9 10 11 12 13, on right: 21
integer_literal (137)
    on left: 14, on right: 9
character_literal (138)
    on left: 15, on right: 10
floating_literal (139)
    on left: 16, on right: 11
string_literal (140)
    on left: 17, on right: 12 257 258 259
boolean_literal (141)
    on left: 18 19, on right: 13
translation_unit (142)
    on left: 20, on right: 0
primary_expression (143)
    on left: 21 22 23 24, on right: 36
id_expression (144)
    on left: 25 26, on right: 24 39 40 41 42 43 44 45 46 283 284
unqualified_id (145)
    on left: 27 28 29 30, on right: 25 31 32 248 249 250 251 252
qualified_id (146)
    on left: 31 32, on right: 26 335
nested_name_specifier (147)
    on left: 33 34 35, on right: 31 32 33 205 222 224 226 227 228 244
    246 248 249 250 251 253 255 275 276 277 278 285 323 324 350 352
    372 374 454
postfix_expression (148)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
    54, on right: 37 38 39 40 41 42 43 44 45 46 47 48 57
expression_list (149)
    on left: 55 56, on right: 56 75 314 456
unary_expression (150)
    on left: 57 58 59 60 61 62 63 64 65 66, on right: 63 86
unary_operator (151)
    on left: 67 68 69 70, on right: 62
new_expression (152)
    on left: 71 72 73 74, on right: 65
new_placement (153)
    on left: 75, on right: 460
new_type_id (154)
    on left: 76, on right: 71 72
new_declarator (155)
    on left: 77 78, on right: 464
direct_new_declarator (156)
    on left: 79 80, on right: 78 80
new_initializer (157)
    on left: 81, on right: 462
delete_expression (158)
    on left: 82 83 84 85, on right: 66
cast_expression (159)
    on left: 86 87, on right: 58 59 60 61 62 82 83 84 85 87 88 89 90
pm_expression (160)
    on left: 88 89 90, on right: 89 90 91 92 93 94
multiplicative_expression (161)
    on left: 91 92 93 94, on right: 92 93 94 95 96 97
additive_expression (162)
    on left: 95 96 97, on right: 96 97 98 99 100
shift_expression (163)
    on left: 98 99 100, on right: 99 100 101 102 103 104 105
relational_expression (164)
    on left: 101 102 103 104 105, on right: 102 103 104 105 106 107
    108
equality_expression (165)
    on left: 106 107 108, on right: 107 108 109 110
and_expression (166)
    on left: 109 110, on right: 110 111 112
exclusive_or_expression (167)
    on left: 111 112, on right: 112 113 114
inclusive_or_expression (168)
    on left: 113 114, on right: 114 115 116
logical_and_expression (169)
    on left: 115 116, on right: 116 117 118
logical_or_expression (170)
    on left: 117 118, on right: 118 119 120 122
conditional_expression (171)
    on left: 119 120, on right: 121 137
assignment_expression (172)
    on left: 121 122 123, on right: 55 56 120 122 135 136 157 305 307
    315 434 498
assignment_operator (173)
    on left: 124 125 126 127 128 129 130 131 132 133 134, on right:
    122
expression (174)
    on left: 135 136, on right: 23 37 49 50 51 52 53 79 120 136 156
    159 466
constant_expression (175)
    on left: 137, on right: 80 147 233 344 346 476
statement (176)
    on left: 138 139 140 141 142 143 144 145, on right: 146 147 148
    151 152 153 154 155 158 159 160
labeled_statement (177)
    on left: 146 147 148, on right: 138
expression_statement (178)
    on left: 149, on right: 139 161
compound_statement (179)
    on left: 150, on right: 140 312 439 442
statement_seq (180)
    on left: 151 152, on right: 152 468
selection_statement (181)
    on left: 153 154 155, on right: 141
condition (182)
    on left: 156 157, on right: 153 154 155 158 470
iteration_statement (183)
    on left: 158 159 160, on right: 142
for_init_statement (184)
    on left: 161 162, on right: 160
jump_statement (185)
    on left: 163 164 165 166, on right: 143
declaration_statement (186)
    on left: 167, on right: 144
declaration_seq (187)
    on left: 168 169, on right: 169 452
declaration (188)
    on left: 170 171 172 173 174 175 176, on right: 168 169 259 420
    437 438
block_declaration (189)
    on left: 177 178 179 180 181, on right: 167 170
simple_declaration (190)
    on left: 182 183, on right: 162 177
decl_specifier (191)
    on left: 184 185 186 187 188, on right: 189 190
decl_specifier_seq (192)
    on left: 189 190, on right: 182 183 190 304 305 306 307 309 311
    330 331
storage_class_specifier (193)
    on left: 191 192 193 194 195, on right: 184
function_specifier (194)
    on left: 196 197 198, on right: 186
type_specifier (195)
    on left: 199 200 201 202 203, on right: 185 288
simple_type_specifier (196)
    on left: 204 205 206 207 208 209 210 211 212 213 214 215 216 217
    218, on right: 199
type_name (197)
    on left: 219 220 221, on right: 204 205 206 285 286
elaborated_type_specifier (198)
    on left: 222 223 224 225 226 227 228, on right: 202
enum_specifier (199)
    on left: 229, on right: 201
enumerator_list (200)
    on left: 230 231, on right: 231 472
enumerator_definition (201)
    on left: 232 233, on right: 230 231
enumerator (202)
    on left: 234, on right: 232 233
namespace_definition (203)
    on left: 235 236, on right: 176
named_namespace_definition (204)
    on left: 237 238, on right: 235
original_namespace_definition (205)
    on left: 239, on right: 237
extension_namespace_definition (206)
    on left: 240, on right: 238
unnamed_namespace_definition (207)
    on left: 241, on right: 236
namespace_body (208)
    on left: 242, on right: 239 240 241
namespace_alias_definition (209)
    on left: 243, on right: 179
qualified_namespace_specifier (210)
    on left: 244 245 246 247, on right: 243
using_declaration (211)
    on left: 248 249 250 251 252, on right: 180 336
using_directive (212)
    on left: 253 254 255 256, on right: 181
asm_definition (213)
    on left: 257, on right: 178
linkage_specification (214)
    on left: 258 259, on right: 175
init_declarator_list (215)
    on left: 260 261, on right: 182 261
init_declarator (216)
    on left: 262, on right: 260 261
declarator (217)
    on left: 263 264, on right: 157 262 264 271 304 305 308 309 310
    311 341 342 343 443
direct_declarator (218)
    on left: 265 266 267 268 269 270 271, on right: 263 266 267 268
    269 270
ptr_operator (219)
    on left: 272 273 274 275 276 277 278, on right: 77 264 289 367
cv_qualifier_seq (220)
    on left: 279 280, on right: 266 267 273 276 278 280 291 292
cv_qualifier (221)
    on left: 281 282, on right: 203 279 280
declarator_id (222)
    on left: 283 284 285 286, on right: 265
type_id (223)
    on left: 287, on right: 49 50 51 52 54 64 73 74 87 426 428 435
    449 450
type_specifier_seq (224)
    on left: 288, on right: 76 157 287 366 443 444 445 480
abstract_declarator (225)
    on left: 289 290, on right: 296 444 478
direct_abstract_declarator (226)
    on left: 291 292 293 294 295 296, on right: 290 482
parameter_declaration_clause (227)
    on left: 297 298 299 300 301, on right: 266 267 268 269 291 292
    293 294
parameter_declaration_list (228)
    on left: 302 303, on right: 297 298 301 303
parameter_declaration (229)
    on left: 304 305 306 307, on right: 302 303 424
function_definition (230)
    on left: 308 309 310 311, on right: 171 334
function_body (231)
    on left: 312, on right: 308 309 440
initializer (232)
    on left: 313 314, on right: 474
initializer_clause (233)
    on left: 315 316 317, on right: 313 318 319
initializer_list (234)
    on left: 318 319, on right: 316 319
class_specifier (235)
    on left: 320, on right: 200
class_head (236)
    on left: 321 322 323 324, on right: 320
class_key (237)
    on left: 325 326 327, on right: 222 223 321 322 323 324
member_specification (238)
    on left: 328 329, on right: 488
member_declaration (239)
    on left: 330 331 332 333 334 335 336 337, on right: 328
member_declarator_list (240)
    on left: 338 339, on right: 330 332 339
member_declarator (241)
    on left: 340 341 342 343 344, on right: 338 339
pure_specifier (242)
    on left: 345, on right: 342
constant_initializer (243)
    on left: 346, on right: 343
base_clause (244)
    on left: 347, on right: 322 324
base_specifier_list (245)
    on left: 348 349, on right: 347 349
base_specifier (246)
    on left: 350 351 352 353 354 355 356 357 358 359 360 361, on right:
    348 349
access_specifier (247)
    on left: 362 363 364, on right: 329 354 355 358 359 360 361
conversion_function_id (248)
    on left: 365, on right: 29
conversion_type_id (249)
    on left: 366, on right: 365
conversion_declarator (250)
    on left: 367, on right: 492
ctor_initializer (251)
    on left: 368, on right: 484
mem_initializer_list (252)
    on left: 369 370, on right: 368 370
mem_initializer (253)
    on left: 371, on right: 369 370
mem_initializer_id (254)
    on left: 372 373 374 375 376, on right: 371
operator_function_id (255)
    on left: 377, on right: 28
operator (256)
    on left: 378 379 380 381 382 383 384 385 386 387 388 389 390 391
    392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407
    408 409 410 411 412 413 414 415 416 417 418 419, on right: 377
template_declaration (257)
    on left: 420, on right: 172 337
template_parameter_list (258)
    on left: 421 422, on right: 420 422 429 430
template_parameter (259)
    on left: 423 424, on right: 421 422
type_parameter (260)
    on left: 425 426 427 428 429 430, on right: 423
template_id (261)
    on left: 431, on right: 5
template_argument_list (262)
    on left: 432 433, on right: 228 431 433
template_argument (263)
    on left: 434 435 436, on right: 432 433
explicit_instantiation (264)
    on left: 437, on right: 173
explicit_specialization (265)
    on left: 438, on right: 174
try_block (266)
    on left: 439, on right: 145
function_try_block (267)
    on left: 440, on right: 310 311
handler_seq (268)
    on left: 441, on right: 439 440 496
handler (269)
    on left: 442, on right: 441
exception_declaration (270)
    on left: 443 444 445 446, on right: 442
throw_expression (271)
    on left: 447, on right: 123
exception_specification (272)
    on left: 448, on right: 266 268 291 293
type_id_list (273)
    on left: 449 450, on right: 450 500
declaration_seq_opt (274)
    on left: 451 452, on right: 20 242 258
nested_name_specifier_opt (275)
    on left: 453 454, on right: 206 354 355 356 357 358 359 360 361
expression_list_opt (276)
    on left: 455 456, on right: 38 81 371
COLONCOLON_opt (277)
    on left: 457 458, on right: 227 228
new_placement_opt (278)
    on left: 459 460, on right: 71 72 73 74
new_initializer_opt (279)
    on left: 461 462, on right: 71 72 73 74
new_declarator_opt (280)
    on left: 463 464, on right: 76 77
expression_opt (281)
    on left: 465 466, on right: 149 160 165
statement_seq_opt (282)
    on left: 467 468, on right: 150
condition_opt (283)
    on left: 469 470, on right: 160
enumerator_list_opt (284)
    on left: 471 472, on right: 229
initializer_opt (285)
    on left: 473 474, on right: 262
constant_expression_opt (286)
    on left: 475 476, on right: 270 295
abstract_declarator_opt (287)
    on left: 477 478, on right: 287 289 306 307
type_specifier_seq_opt (288)
    on left: 479 480, on right: 288
direct_abstract_declarator_opt (289)
    on left: 481 482, on right: 291 292 293 294 295
ctor_initializer_opt (290)
    on left: 483 484, on right: 308 309 440
COMMA_opt (291)
    on left: 485 486, on right: 316
member_specification_opt (292)
    on left: 487 488, on right: 320 328 329
SEMICOLON_opt (293)
    on left: 489 490, on right: 334
conversion_declarator_opt (294)
    on left: 491 492, on right: 366 367
EXPORT_opt (295)
    on left: 493 494, on right: 420
handler_seq_opt (296)
    on left: 495 496, on right: 441
assignment_expression_opt (297)
    on left: 497 498, on right: 447
type_id_list_opt (298)
    on left: 499 500, on right: 448


state 0

    0 $accept: . translation_unit $end

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 493 (EXPORT_opt)]
    $default  reduce using rule 451 (declaration_seq_opt)

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    translation_unit                go to state 54
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration_seq                 go to state 59
    declaration                     go to state 60
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    declaration_seq_opt             go to state 97
    EXPORT_opt                      go to state 98


state 1

    8 identifier: IDENTIFIER .

    $default  reduce using rule 8 (identifier)


state 2

    1 typedef_name: TYPEDEF_NAME .

    $default  reduce using rule 1 (typedef_name)


state 3

    3 original_namespace_name: NAMESPACE_NAME .

    $default  reduce using rule 3 (original_namespace_name)


state 4

    4 class_name: CLASS_NAME .

    $default  reduce using rule 4 (class_name)


state 5

    6 enum_name: ENUM_NAME .

    $default  reduce using rule 6 (enum_name)


state 6

    7 template_name: TEMPLATE_NAME .

    $default  reduce using rule 7 (template_name)


state 7

  206 simple_type_specifier: COLONCOLON . nested_name_specifier_opt type_name
  277 ptr_operator: COLONCOLON . nested_name_specifier '*'
  278             | COLONCOLON . nested_name_specifier '*' cv_qualifier_seq
  284 declarator_id: COLONCOLON . id_expression
  285              | COLONCOLON . nested_name_specifier type_name
  286              | COLONCOLON . type_name

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    TYPEDEF_NAME   [reduce using rule 453 (nested_name_specifier_opt)]
    CLASS_NAME     [reduce using rule 453 (nested_name_specifier_opt)]
    ENUM_NAME      [reduce using rule 453 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 453 (nested_name_specifier_opt)]

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    id_expression              go to state 99
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 100
    type_name                  go to state 101
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    nested_name_specifier_opt  go to state 102


state 8

  257 asm_definition: ASM . '(' string_literal ')' ';'

    '('  shift, and go to state 103


state 9

  191 storage_class_specifier: AUTO .

    $default  reduce using rule 191 (storage_class_specifier)


state 10

  209 simple_type_specifier: BOOL .

    $default  reduce using rule 209 (simple_type_specifier)


state 11

  207 simple_type_specifier: CHAR .

    $default  reduce using rule 207 (simple_type_specifier)


state 12

  325 class_key: CLASS .

    $default  reduce using rule 325 (class_key)


state 13

  281 cv_qualifier: CONST .

    $default  reduce using rule 281 (cv_qualifier)


state 14

  216 simple_type_specifier: DOUBLE .

    $default  reduce using rule 216 (simple_type_specifier)


state 15

  224 elaborated_type_specifier: ENUM . COLONCOLON nested_name_specifier identifier
  225                          | ENUM . COLONCOLON identifier
  226                          | ENUM . nested_name_specifier identifier
  229 enum_specifier: ENUM . identifier '{' enumerator_list_opt '}'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 104

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 106
    nested_name_specifier    go to state 107
    template_id              go to state 94


state 16

  198 function_specifier: EXPLICIT .

    $default  reduce using rule 198 (function_specifier)


state 17

  494 EXPORT_opt: EXPORT .

    $default  reduce using rule 494 (EXPORT_opt)


state 18

  194 storage_class_specifier: EXTERN .
  258 linkage_specification: EXTERN . string_literal '{' declaration_seq_opt '}'
  259                      | EXTERN . string_literal declaration

    STRING  shift, and go to state 108

    $default  reduce using rule 194 (storage_class_specifier)

    string_literal  go to state 109


state 19

  215 simple_type_specifier: FLOAT .

    $default  reduce using rule 215 (simple_type_specifier)


state 20

  187 decl_specifier: FRIEND .

    $default  reduce using rule 187 (decl_specifier)


state 21

  196 function_specifier: INLINE .

    $default  reduce using rule 196 (function_specifier)


state 22

  211 simple_type_specifier: INT .

    $default  reduce using rule 211 (simple_type_specifier)


state 23

  212 simple_type_specifier: LONG .

    $default  reduce using rule 212 (simple_type_specifier)


state 24

  195 storage_class_specifier: MUTABLE .

    $default  reduce using rule 195 (storage_class_specifier)


state 25

  239 original_namespace_definition: NAMESPACE . identifier '{' namespace_body '}'
  240 extension_namespace_definition: NAMESPACE . original_namespace_name '{' namespace_body '}'
  241 unnamed_namespace_definition: NAMESPACE . '{' namespace_body '}'
  243 namespace_alias_definition: NAMESPACE . identifier '=' qualified_namespace_specifier ';'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    '{'             shift, and go to state 110

    original_namespace_name  go to state 111
    identifier               go to state 112


state 26

  365 conversion_function_id: OPERATOR . conversion_type_id
  377 operator_function_id: OPERATOR . operator

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    ADDEQ           shift, and go to state 114
    SUBEQ           shift, and go to state 115
    MULEQ           shift, and go to state 116
    DIVEQ           shift, and go to state 117
    MODEQ           shift, and go to state 118
    XOREQ           shift, and go to state 119
    ANDEQ           shift, and go to state 120
    OREQ            shift, and go to state 121
    SL              shift, and go to state 122
    SR              shift, and go to state 123
    SREQ            shift, and go to state 124
    SLEQ            shift, and go to state 125
    EQ              shift, and go to state 126
    NOTEQ           shift, and go to state 127
    LTEQ            shift, and go to state 128
    GTEQ            shift, and go to state 129
    ANDAND          shift, and go to state 130
    OROR            shift, and go to state 131
    PLUSPLUS        shift, and go to state 132
    MINUSMINUS      shift, and go to state 133
    ARROWSTAR       shift, and go to state 134
    ARROW           shift, and go to state 135
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DELETE          shift, and go to state 136
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    NEW             shift, and go to state 137
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 138
    '~'             shift, and go to state 139
    '['             shift, and go to state 140
    '<'             shift, and go to state 141
    '>'             shift, and go to state 142
    ','             shift, and go to state 143
    '*'             shift, and go to state 144
    '&'             shift, and go to state 145
    '+'             shift, and go to state 146
    '!'             shift, and go to state 147
    '/'             shift, and go to state 148
    '%'             shift, and go to state 149
    '^'             shift, and go to state 150
    '|'             shift, and go to state 151
    '='             shift, and go to state 152
    '_'             shift, and go to state 153

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 156
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_type_id         go to state 157
    operator                   go to state 158
    template_id                go to state 94


state 27

  192 storage_class_specifier: REGISTER .

    $default  reduce using rule 192 (storage_class_specifier)


state 28

  210 simple_type_specifier: SHORT .

    $default  reduce using rule 210 (simple_type_specifier)


state 29

  213 simple_type_specifier: SIGNED .

    $default  reduce using rule 213 (simple_type_specifier)


state 30

  193 storage_class_specifier: STATIC .

    $default  reduce using rule 193 (storage_class_specifier)


state 31

  326 class_key: STRUCT .

    $default  reduce using rule 326 (class_key)


state 32

  437 explicit_instantiation: TEMPLATE . declaration
  438 explicit_specialization: TEMPLATE . '<' '>' declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '<'             shift, and go to state 159
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 493 (EXPORT_opt)]

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration                     go to state 160
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    EXPORT_opt                      go to state 98


state 33

  188 decl_specifier: TYPEDEF .

    $default  reduce using rule 188 (decl_specifier)


state 34

  227 elaborated_type_specifier: TYPENAME . COLONCOLON_opt nested_name_specifier identifier
  228                          | TYPENAME . COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'

    COLONCOLON  shift, and go to state 161

    $default  reduce using rule 457 (COLONCOLON_opt)

    COLONCOLON_opt  go to state 162


state 35

  327 class_key: UNION .

    $default  reduce using rule 327 (class_key)


state 36

  214 simple_type_specifier: UNSIGNED .

    $default  reduce using rule 214 (simple_type_specifier)


state 37

  248 using_declaration: USING . TYPENAME COLONCOLON nested_name_specifier unqualified_id ';'
  249                  | USING . TYPENAME nested_name_specifier unqualified_id ';'
  250                  | USING . COLONCOLON nested_name_specifier unqualified_id ';'
  251                  | USING . nested_name_specifier unqualified_id ';'
  252                  | USING . COLONCOLON unqualified_id ';'
  253 using_directive: USING . NAMESPACE COLONCOLON nested_name_specifier namespace_name ';'
  254                | USING . NAMESPACE COLONCOLON namespace_name ';'
  255                | USING . NAMESPACE nested_name_specifier namespace_name ';'
  256                | USING . NAMESPACE namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 163
    NAMESPACE       shift, and go to state 164
    TYPENAME        shift, and go to state 165

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 166
    template_id              go to state 94


state 38

  197 function_specifier: VIRTUAL .

    $default  reduce using rule 197 (function_specifier)


state 39

  217 simple_type_specifier: VOID .

    $default  reduce using rule 217 (simple_type_specifier)


state 40

  282 cv_qualifier: VOLATILE .

    $default  reduce using rule 282 (cv_qualifier)


state 41

  208 simple_type_specifier: WCHAR_T .

    $default  reduce using rule 208 (simple_type_specifier)


state 42

  218 simple_type_specifier: STR_TYPE .

    $default  reduce using rule 218 (simple_type_specifier)


state 43

  271 direct_declarator: '(' . declarator ')'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 167
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 55
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 168
    declarator               go to state 169
    direct_declarator        go to state 83
    ptr_operator             go to state 84
    declarator_id            go to state 86
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 44

   30 unqualified_id: '~' . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 170
    template_name  go to state 52
    template_id    go to state 94


state 45

  272 ptr_operator: '*' .
  273             | '*' . cv_qualifier_seq

    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 272 (ptr_operator)

    cv_qualifier_seq  go to state 171
    cv_qualifier      go to state 172


state 46

  274 ptr_operator: '&' .

    $default  reduce using rule 274 (ptr_operator)


state 47

  221 type_name: typedef_name .

    $default  reduce using rule 221 (type_name)


state 48

   35 nested_name_specifier: namespace_name . COLONCOLON

    COLONCOLON  shift, and go to state 173


state 49

    2 namespace_name: original_namespace_name .

    $default  reduce using rule 2 (namespace_name)


state 50

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier namespace_name COLONCOLON nested_name_specifier
   34                      | class_name . COLONCOLON
  219 type_name: class_name .

    COLONCOLON  shift, and go to state 174

    COLONCOLON  [reduce using rule 219 (type_name)]
    $default    reduce using rule 219 (type_name)


state 51

  220 type_name: enum_name .

    $default  reduce using rule 220 (type_name)


state 52

  431 template_id: template_name . '<' template_argument_list '>'

    '<'  shift, and go to state 175


state 53

   27 unqualified_id: identifier .

    $default  reduce using rule 27 (unqualified_id)


state 54

    0 $accept: translation_unit . $end

    $end  shift, and go to state 176


state 55

  283 declarator_id: id_expression .

    $default  reduce using rule 283 (declarator_id)


state 56

   25 id_expression: unqualified_id .

    $default  reduce using rule 25 (id_expression)


state 57

   26 id_expression: qualified_id .

    $default  reduce using rule 26 (id_expression)


state 58

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  205 simple_type_specifier: nested_name_specifier . type_name
  275 ptr_operator: nested_name_specifier . '*'
  276             | nested_name_specifier . '*' cv_qualifier_seq

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 4
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 177
    '~'            shift, and go to state 44
    '*'            shift, and go to state 178

    typedef_name            go to state 47
    class_name              go to state 179
    enum_name               go to state 51
    template_name           go to state 52
    identifier              go to state 53
    unqualified_id          go to state 180
    type_name               go to state 181
    conversion_function_id  go to state 91
    operator_function_id    go to state 92
    template_id             go to state 94


state 59

  169 declaration_seq: declaration_seq . declaration
  452 declaration_seq_opt: declaration_seq .

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 493 (EXPORT_opt)]
    $default  reduce using rule 452 (declaration_seq_opt)

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration                     go to state 182
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    EXPORT_opt                      go to state 98


state 60

  168 declaration_seq: declaration .

    $default  reduce using rule 168 (declaration_seq)


state 61

  170 declaration: block_declaration .

    $default  reduce using rule 170 (declaration)


state 62

  177 block_declaration: simple_declaration .

    $default  reduce using rule 177 (block_declaration)


state 63

  189 decl_specifier_seq: decl_specifier .

    $default  reduce using rule 189 (decl_specifier_seq)


state 64

  182 simple_declaration: decl_specifier_seq . init_declarator_list ';'
  183                   | decl_specifier_seq . ';'
  190 decl_specifier_seq: decl_specifier_seq . decl_specifier
  309 function_definition: decl_specifier_seq . declarator ctor_initializer_opt function_body
  311                    | decl_specifier_seq . declarator function_try_block

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46
    ';'             shift, and go to state 184

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    id_expression              go to state 55
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 58
    decl_specifier             go to state 185
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    init_declarator_list       go to state 186
    init_declarator            go to state 187
    declarator                 go to state 188
    direct_declarator          go to state 83
    ptr_operator               go to state 84
    cv_qualifier               go to state 85
    declarator_id              go to state 86
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 65

  184 decl_specifier: storage_class_specifier .

    $default  reduce using rule 184 (decl_specifier)


state 66

  186 decl_specifier: function_specifier .

    $default  reduce using rule 186 (decl_specifier)


state 67

  185 decl_specifier: type_specifier .

    $default  reduce using rule 185 (decl_specifier)


state 68

  199 type_specifier: simple_type_specifier .

    $default  reduce using rule 199 (type_specifier)


state 69

  204 simple_type_specifier: type_name .

    $default  reduce using rule 204 (simple_type_specifier)


state 70

  202 type_specifier: elaborated_type_specifier .

    $default  reduce using rule 202 (type_specifier)


state 71

  201 type_specifier: enum_specifier .

    $default  reduce using rule 201 (type_specifier)


state 72

  176 declaration: namespace_definition .

    $default  reduce using rule 176 (declaration)


state 73

  235 namespace_definition: named_namespace_definition .

    $default  reduce using rule 235 (namespace_definition)


state 74

  237 named_namespace_definition: original_namespace_definition .

    $default  reduce using rule 237 (named_namespace_definition)


state 75

  238 named_namespace_definition: extension_namespace_definition .

    $default  reduce using rule 238 (named_namespace_definition)


state 76

  236 namespace_definition: unnamed_namespace_definition .

    $default  reduce using rule 236 (namespace_definition)


state 77

  179 block_declaration: namespace_alias_definition .

    $default  reduce using rule 179 (block_declaration)


state 78

  180 block_declaration: using_declaration .

    $default  reduce using rule 180 (block_declaration)


state 79

  181 block_declaration: using_directive .

    $default  reduce using rule 181 (block_declaration)


state 80

  178 block_declaration: asm_definition .

    $default  reduce using rule 178 (block_declaration)


state 81

  175 declaration: linkage_specification .

    $default  reduce using rule 175 (declaration)


state 82

  308 function_definition: declarator . ctor_initializer_opt function_body
  310                    | declarator . function_try_block

    TRY  shift, and go to state 189
    ':'  shift, and go to state 190

    $default  reduce using rule 483 (ctor_initializer_opt)

    ctor_initializer      go to state 191
    function_try_block    go to state 192
    ctor_initializer_opt  go to state 193


state 83

  263 declarator: direct_declarator .
  266 direct_declarator: direct_declarator . '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  267                  | direct_declarator . '(' parameter_declaration_clause ')' cv_qualifier_seq
  268                  | direct_declarator . '(' parameter_declaration_clause ')' exception_specification
  269                  | direct_declarator . '(' parameter_declaration_clause ')'
  270                  | direct_declarator . '[' constant_expression_opt ']'

    '('  shift, and go to state 194
    '['  shift, and go to state 195

    '('       [reduce using rule 263 (declarator)]
    $default  reduce using rule 263 (declarator)


state 84

  264 declarator: ptr_operator . declarator

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 167
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 55
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 168
    declarator               go to state 196
    direct_declarator        go to state 83
    ptr_operator             go to state 84
    declarator_id            go to state 86
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 85

  203 type_specifier: cv_qualifier .

    $default  reduce using rule 203 (type_specifier)


state 86

  265 direct_declarator: declarator_id .

    $default  reduce using rule 265 (direct_declarator)


state 87

  171 declaration: function_definition .

    $default  reduce using rule 171 (declaration)


state 88

  200 type_specifier: class_specifier .

    $default  reduce using rule 200 (type_specifier)


state 89

  320 class_specifier: class_head . '{' member_specification_opt '}'

    '{'  shift, and go to state 197


state 90

  222 elaborated_type_specifier: class_key . COLONCOLON nested_name_specifier identifier
  223                          | class_key . COLONCOLON identifier
  321 class_head: class_key . identifier
  322           | class_key . identifier base_clause
  323           | class_key . nested_name_specifier identifier
  324           | class_key . nested_name_specifier identifier base_clause

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 198

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 199
    nested_name_specifier    go to state 200
    template_id              go to state 94


state 91

   29 unqualified_id: conversion_function_id .

    $default  reduce using rule 29 (unqualified_id)


state 92

   28 unqualified_id: operator_function_id .

    $default  reduce using rule 28 (unqualified_id)


state 93

  172 declaration: template_declaration .

    $default  reduce using rule 172 (declaration)


state 94

    5 class_name: template_id .

    $default  reduce using rule 5 (class_name)


state 95

  173 declaration: explicit_instantiation .

    $default  reduce using rule 173 (declaration)


state 96

  174 declaration: explicit_specialization .

    $default  reduce using rule 174 (declaration)


state 97

   20 translation_unit: declaration_seq_opt .

    $default  reduce using rule 20 (translation_unit)


state 98

  420 template_declaration: EXPORT_opt . TEMPLATE '<' template_parameter_list '>' declaration

    TEMPLATE  shift, and go to state 201


state 99

  284 declarator_id: COLONCOLON id_expression .

    $default  reduce using rule 284 (declarator_id)


state 100

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  277 ptr_operator: COLONCOLON nested_name_specifier . '*'
  278             | COLONCOLON nested_name_specifier . '*' cv_qualifier_seq
  285 declarator_id: COLONCOLON nested_name_specifier . type_name
  454 nested_name_specifier_opt: nested_name_specifier .

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 4
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 177
    '~'            shift, and go to state 44
    '*'            shift, and go to state 202

    TYPEDEF_NAME   [reduce using rule 454 (nested_name_specifier_opt)]
    CLASS_NAME     [reduce using rule 454 (nested_name_specifier_opt)]
    ENUM_NAME      [reduce using rule 454 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 454 (nested_name_specifier_opt)]

    typedef_name            go to state 47
    class_name              go to state 179
    enum_name               go to state 51
    template_name           go to state 52
    identifier              go to state 53
    unqualified_id          go to state 180
    type_name               go to state 203
    conversion_function_id  go to state 91
    operator_function_id    go to state 92
    template_id             go to state 94


state 101

  286 declarator_id: COLONCOLON type_name .

    $default  reduce using rule 286 (declarator_id)


state 102

  206 simple_type_specifier: COLONCOLON nested_name_specifier_opt . type_name

    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 4
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6

    typedef_name   go to state 47
    class_name     go to state 179
    enum_name      go to state 51
    template_name  go to state 52
    type_name      go to state 204
    template_id    go to state 94


state 103

  257 asm_definition: ASM '(' . string_literal ')' ';'

    STRING  shift, and go to state 108

    string_literal  go to state 205


state 104

  224 elaborated_type_specifier: ENUM COLONCOLON . nested_name_specifier identifier
  225                          | ENUM COLONCOLON . identifier

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 206
    nested_name_specifier    go to state 207
    template_id              go to state 94


state 105

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier namespace_name COLONCOLON nested_name_specifier
   34                      | class_name . COLONCOLON

    COLONCOLON  shift, and go to state 174


state 106

  229 enum_specifier: ENUM identifier . '{' enumerator_list_opt '}'

    '{'  shift, and go to state 208


state 107

  226 elaborated_type_specifier: ENUM nested_name_specifier . identifier

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 209


state 108

   17 string_literal: STRING .

    $default  reduce using rule 17 (string_literal)


state 109

  258 linkage_specification: EXTERN string_literal . '{' declaration_seq_opt '}'
  259                      | EXTERN string_literal . declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46
    '{'             shift, and go to state 210

    TEMPLATE  [reduce using rule 493 (EXPORT_opt)]

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration                     go to state 211
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    EXPORT_opt                      go to state 98


state 110

  241 unnamed_namespace_definition: NAMESPACE '{' . namespace_body '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 493 (EXPORT_opt)]
    $default  reduce using rule 451 (declaration_seq_opt)

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration_seq                 go to state 59
    declaration                     go to state 60
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_body                  go to state 212
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    declaration_seq_opt             go to state 213
    EXPORT_opt                      go to state 98


state 111

  240 extension_namespace_definition: NAMESPACE original_namespace_name . '{' namespace_body '}'

    '{'  shift, and go to state 214


state 112

  239 original_namespace_definition: NAMESPACE identifier . '{' namespace_body '}'
  243 namespace_alias_definition: NAMESPACE identifier . '=' qualified_namespace_specifier ';'

    '='  shift, and go to state 215
    '{'  shift, and go to state 216


state 113

  206 simple_type_specifier: COLONCOLON . nested_name_specifier_opt type_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 453 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 453 (nested_name_specifier_opt)]
    $default       reduce using rule 453 (nested_name_specifier_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    nested_name_specifier      go to state 217
    template_id                go to state 94
    nested_name_specifier_opt  go to state 102


state 114

  395 operator: ADDEQ .

    $default  reduce using rule 395 (operator)


state 115

  396 operator: SUBEQ .

    $default  reduce using rule 396 (operator)


state 116

  397 operator: MULEQ .

    $default  reduce using rule 397 (operator)


state 117

  398 operator: DIVEQ .

    $default  reduce using rule 398 (operator)


state 118

  399 operator: MODEQ .

    $default  reduce using rule 399 (operator)


state 119

  400 operator: XOREQ .

    $default  reduce using rule 400 (operator)


state 120

  401 operator: ANDEQ .

    $default  reduce using rule 401 (operator)


state 121

  402 operator: OREQ .

    $default  reduce using rule 402 (operator)


state 122

  403 operator: SL .

    $default  reduce using rule 403 (operator)


state 123

  404 operator: SR .

    $default  reduce using rule 404 (operator)


state 124

  405 operator: SREQ .

    $default  reduce using rule 405 (operator)


state 125

  406 operator: SLEQ .

    $default  reduce using rule 406 (operator)


state 126

  407 operator: EQ .

    $default  reduce using rule 407 (operator)


state 127

  408 operator: NOTEQ .

    $default  reduce using rule 408 (operator)


state 128

  409 operator: LTEQ .

    $default  reduce using rule 409 (operator)


state 129

  410 operator: GTEQ .

    $default  reduce using rule 410 (operator)


state 130

  411 operator: ANDAND .

    $default  reduce using rule 411 (operator)


state 131

  412 operator: OROR .

    $default  reduce using rule 412 (operator)


state 132

  413 operator: PLUSPLUS .

    $default  reduce using rule 413 (operator)


state 133

  414 operator: MINUSMINUS .

    $default  reduce using rule 414 (operator)


state 134

  416 operator: ARROWSTAR .

    $default  reduce using rule 416 (operator)


state 135

  417 operator: ARROW .

    $default  reduce using rule 417 (operator)


state 136

  379 operator: DELETE .
  381         | DELETE . '[' ']'

    '['  shift, and go to state 218

    '['       [reduce using rule 379 (operator)]
    $default  reduce using rule 379 (operator)


state 137

  378 operator: NEW .
  380         | NEW . '[' ']'

    '['  shift, and go to state 219

    '['       [reduce using rule 378 (operator)]
    $default  reduce using rule 378 (operator)


state 138

  418 operator: '(' . ')'

    ')'  shift, and go to state 220


state 139

  390 operator: '~' .

    $default  reduce using rule 390 (operator)


state 140

  419 operator: '[' . ']'

    ']'  shift, and go to state 221


state 141

  393 operator: '<' .

    $default  reduce using rule 393 (operator)


state 142

  394 operator: '>' .

    $default  reduce using rule 394 (operator)


state 143

  415 operator: ',' .

    $default  reduce using rule 415 (operator)


state 144

  384 operator: '*' .

    $default  reduce using rule 384 (operator)


state 145

  388 operator: '&' .

    $default  reduce using rule 388 (operator)


state 146

  382 operator: '+' .

    $default  reduce using rule 382 (operator)


state 147

  391 operator: '!' .

    $default  reduce using rule 391 (operator)


state 148

  385 operator: '/' .

    $default  reduce using rule 385 (operator)


state 149

  386 operator: '%' .

    $default  reduce using rule 386 (operator)


state 150

  387 operator: '^' .

    $default  reduce using rule 387 (operator)


state 151

  389 operator: '|' .

    $default  reduce using rule 389 (operator)


state 152

  392 operator: '=' .

    $default  reduce using rule 392 (operator)


state 153

  383 operator: '_' .

    $default  reduce using rule 383 (operator)


state 154

  205 simple_type_specifier: nested_name_specifier . type_name

    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 4
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6

    typedef_name   go to state 47
    class_name     go to state 179
    enum_name      go to state 51
    template_name  go to state 52
    type_name      go to state 181
    template_id    go to state 94


state 155

  288 type_specifier_seq: type_specifier . type_specifier_seq_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    NAMESPACE_NAME  [reduce using rule 479 (type_specifier_seq_opt)]
    CLASS_NAME      [reduce using rule 479 (type_specifier_seq_opt)]
    TEMPLATE_NAME   [reduce using rule 479 (type_specifier_seq_opt)]
    COLONCOLON      [reduce using rule 479 (type_specifier_seq_opt)]
    $default        reduce using rule 479 (type_specifier_seq_opt)

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 222
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94
    type_specifier_seq_opt     go to state 223


state 156

  366 conversion_type_id: type_specifier_seq . conversion_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 224
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '*'       [reduce using rule 491 (conversion_declarator_opt)]
    '&'       [reduce using rule 491 (conversion_declarator_opt)]
    $default  reduce using rule 491 (conversion_declarator_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    nested_name_specifier      go to state 225
    ptr_operator               go to state 226
    conversion_declarator      go to state 227
    template_id                go to state 94
    conversion_declarator_opt  go to state 228


state 157

  365 conversion_function_id: OPERATOR conversion_type_id .

    $default  reduce using rule 365 (conversion_function_id)


state 158

  377 operator_function_id: OPERATOR operator .

    $default  reduce using rule 377 (operator_function_id)


state 159

  438 explicit_specialization: TEMPLATE '<' . '>' declaration

    '>'  shift, and go to state 229


state 160

  437 explicit_instantiation: TEMPLATE declaration .

    $default  reduce using rule 437 (explicit_instantiation)


state 161

  458 COLONCOLON_opt: COLONCOLON .

    $default  reduce using rule 458 (COLONCOLON_opt)


state 162

  227 elaborated_type_specifier: TYPENAME COLONCOLON_opt . nested_name_specifier identifier
  228                          | TYPENAME COLONCOLON_opt . nested_name_specifier identifier '<' template_argument_list '>'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 230
    template_id              go to state 94


state 163

  250 using_declaration: USING COLONCOLON . nested_name_specifier unqualified_id ';'
  252                  | USING COLONCOLON . unqualified_id ';'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    unqualified_id           go to state 231
    nested_name_specifier    go to state 232
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 164

  253 using_directive: USING NAMESPACE . COLONCOLON nested_name_specifier namespace_name ';'
  254                | USING NAMESPACE . COLONCOLON namespace_name ';'
  255                | USING NAMESPACE . nested_name_specifier namespace_name ';'
  256                | USING NAMESPACE . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 233

    namespace_name           go to state 234
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 235
    template_id              go to state 94


state 165

  248 using_declaration: USING TYPENAME . COLONCOLON nested_name_specifier unqualified_id ';'
  249                  | USING TYPENAME . nested_name_specifier unqualified_id ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 236

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 237
    template_id              go to state 94


state 166

  251 using_declaration: USING nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 44

    identifier              go to state 53
    unqualified_id          go to state 238
    conversion_function_id  go to state 91
    operator_function_id    go to state 92


state 167

  277 ptr_operator: COLONCOLON . nested_name_specifier '*'
  278             | COLONCOLON . nested_name_specifier '*' cv_qualifier_seq
  284 declarator_id: COLONCOLON . id_expression
  285              | COLONCOLON . nested_name_specifier type_name
  286              | COLONCOLON . type_name

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    typedef_name             go to state 47
    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 50
    enum_name                go to state 51
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 99
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 239
    type_name                go to state 101
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 168

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  275 ptr_operator: nested_name_specifier . '*'
  276             | nested_name_specifier . '*' cv_qualifier_seq

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    TEMPLATE    shift, and go to state 177
    '~'         shift, and go to state 44
    '*'         shift, and go to state 178

    identifier              go to state 53
    unqualified_id          go to state 180
    conversion_function_id  go to state 91
    operator_function_id    go to state 92


state 169

  271 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 240


state 170

   30 unqualified_id: '~' class_name .

    $default  reduce using rule 30 (unqualified_id)


state 171

  273 ptr_operator: '*' cv_qualifier_seq .

    $default  reduce using rule 273 (ptr_operator)


state 172

  279 cv_qualifier_seq: cv_qualifier .
  280                 | cv_qualifier . cv_qualifier_seq

    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 279 (cv_qualifier_seq)

    cv_qualifier_seq  go to state 241
    cv_qualifier      go to state 172


state 173

   35 nested_name_specifier: namespace_name COLONCOLON .

    $default  reduce using rule 35 (nested_name_specifier)


state 174

   33 nested_name_specifier: class_name COLONCOLON . nested_name_specifier namespace_name COLONCOLON nested_name_specifier
   34                      | class_name COLONCOLON .

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    NAMESPACE_NAME  [reduce using rule 34 (nested_name_specifier)]
    CLASS_NAME      [reduce using rule 34 (nested_name_specifier)]
    TEMPLATE_NAME   [reduce using rule 34 (nested_name_specifier)]
    $default        reduce using rule 34 (nested_name_specifier)

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 242
    template_id              go to state 94


state 175

  431 template_id: template_name '<' . template_argument_list '>'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 246
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 251
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 252
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 268
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 277
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 296
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 297
    type_specifier_seq         go to state 298
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    template_argument_list     go to state 299
    template_argument          go to state 300
    throw_expression           go to state 301


state 176

    0 $accept: translation_unit $end .

    $default  accept


state 177

   32 qualified_id: nested_name_specifier TEMPLATE . unqualified_id

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 44

    identifier              go to state 53
    unqualified_id          go to state 302
    conversion_function_id  go to state 91
    operator_function_id    go to state 92


state 178

  275 ptr_operator: nested_name_specifier '*' .
  276             | nested_name_specifier '*' . cv_qualifier_seq

    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 275 (ptr_operator)

    cv_qualifier_seq  go to state 303
    cv_qualifier      go to state 172


state 179

  219 type_name: class_name .

    $default  reduce using rule 219 (type_name)


state 180

   31 qualified_id: nested_name_specifier unqualified_id .

    $default  reduce using rule 31 (qualified_id)


state 181

  205 simple_type_specifier: nested_name_specifier type_name .

    $default  reduce using rule 205 (simple_type_specifier)


state 182

  169 declaration_seq: declaration_seq declaration .

    $default  reduce using rule 169 (declaration_seq)


state 183

  194 storage_class_specifier: EXTERN .

    $default  reduce using rule 194 (storage_class_specifier)


state 184

  183 simple_declaration: decl_specifier_seq ';' .

    $default  reduce using rule 183 (simple_declaration)


state 185

  190 decl_specifier_seq: decl_specifier_seq decl_specifier .

    $default  reduce using rule 190 (decl_specifier_seq)


state 186

  182 simple_declaration: decl_specifier_seq init_declarator_list . ';'
  261 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 304
    ';'  shift, and go to state 305


state 187

  260 init_declarator_list: init_declarator .

    $default  reduce using rule 260 (init_declarator_list)


state 188

  262 init_declarator: declarator . initializer_opt
  309 function_definition: decl_specifier_seq declarator . ctor_initializer_opt function_body
  311                    | decl_specifier_seq declarator . function_try_block

    TRY  shift, and go to state 189
    '('  shift, and go to state 306
    ':'  shift, and go to state 190
    '='  shift, and go to state 307

    '{'       reduce using rule 483 (ctor_initializer_opt)
    $default  reduce using rule 473 (initializer_opt)

    initializer           go to state 308
    ctor_initializer      go to state 191
    function_try_block    go to state 309
    initializer_opt       go to state 310
    ctor_initializer_opt  go to state 311


state 189

  440 function_try_block: TRY . ctor_initializer_opt function_body handler_seq

    ':'  shift, and go to state 190

    $default  reduce using rule 483 (ctor_initializer_opt)

    ctor_initializer      go to state 191
    ctor_initializer_opt  go to state 312


state 190

  368 ctor_initializer: ':' . mem_initializer_list

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 313

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 314
    template_name            go to state 52
    identifier               go to state 315
    nested_name_specifier    go to state 316
    mem_initializer_list     go to state 317
    mem_initializer          go to state 318
    mem_initializer_id       go to state 319
    template_id              go to state 94


state 191

  484 ctor_initializer_opt: ctor_initializer .

    $default  reduce using rule 484 (ctor_initializer_opt)


state 192

  310 function_definition: declarator function_try_block .

    $default  reduce using rule 310 (function_definition)


state 193

  308 function_definition: declarator ctor_initializer_opt . function_body

    '{'  shift, and go to state 320

    compound_statement  go to state 321
    function_body       go to state 322


state 194

  266 direct_declarator: direct_declarator '(' . parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  267                  | direct_declarator '(' . parameter_declaration_clause ')' cv_qualifier_seq
  268                  | direct_declarator '(' . parameter_declaration_clause ')' exception_specification
  269                  | direct_declarator '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 323
    COLONCOLON      shift, and go to state 113
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    $default  reduce using rule 300 (parameter_declaration_clause)

    typedef_name                  go to state 47
    namespace_name                go to state 48
    original_namespace_name       go to state 49
    class_name                    go to state 50
    enum_name                     go to state 51
    template_name                 go to state 52
    nested_name_specifier         go to state 154
    decl_specifier                go to state 63
    decl_specifier_seq            go to state 324
    storage_class_specifier       go to state 65
    function_specifier            go to state 66
    type_specifier                go to state 67
    simple_type_specifier         go to state 68
    type_name                     go to state 69
    elaborated_type_specifier     go to state 70
    enum_specifier                go to state 71
    cv_qualifier                  go to state 85
    parameter_declaration_clause  go to state 325
    parameter_declaration_list    go to state 326
    parameter_declaration         go to state 327
    class_specifier               go to state 88
    class_head                    go to state 89
    class_key                     go to state 90
    template_id                   go to state 94


state 195

  270 direct_declarator: direct_declarator '[' . constant_expression_opt ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    $default  reduce using rule 475 (constant_expression_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 330
    conditional_expression     go to state 331
    constant_expression        go to state 332
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    constant_expression_opt    go to state 333


state 196

  264 declarator: ptr_operator declarator .

    $default  reduce using rule 264 (declarator)


state 197

  320 class_specifier: class_head '{' . member_specification_opt '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    PRIVATE         shift, and go to state 334
    PROTECTED       shift, and go to state 335
    PUBLIC          shift, and go to state 336
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 337
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46
    ';'             shift, and go to state 338

    TEMPLATE  reduce using rule 493 (EXPORT_opt)
    ';'       [reduce using rule 340 (member_declarator)]
    '}'       reduce using rule 487 (member_specification_opt)
    $default  reduce using rule 340 (member_declarator)

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 339
    id_expression              go to state 55
    unqualified_id             go to state 56
    qualified_id               go to state 340
    nested_name_specifier      go to state 58
    decl_specifier             go to state 63
    decl_specifier_seq         go to state 341
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    using_declaration          go to state 342
    declarator                 go to state 343
    direct_declarator          go to state 83
    ptr_operator               go to state 84
    cv_qualifier               go to state 85
    declarator_id              go to state 86
    function_definition        go to state 344
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    member_specification       go to state 345
    member_declaration         go to state 346
    member_declarator_list     go to state 347
    member_declarator          go to state 348
    access_specifier           go to state 349
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_declaration       go to state 350
    template_id                go to state 94
    member_specification_opt   go to state 351
    EXPORT_opt                 go to state 98


state 198

  222 elaborated_type_specifier: class_key COLONCOLON . nested_name_specifier identifier
  223                          | class_key COLONCOLON . identifier

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 352
    nested_name_specifier    go to state 353
    template_id              go to state 94


state 199

  321 class_head: class_key identifier .
  322           | class_key identifier . base_clause

    ':'  shift, and go to state 354

    $default  reduce using rule 321 (class_head)

    base_clause  go to state 355


state 200

  323 class_head: class_key nested_name_specifier . identifier
  324           | class_key nested_name_specifier . identifier base_clause

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 356


state 201

  420 template_declaration: EXPORT_opt TEMPLATE . '<' template_parameter_list '>' declaration

    '<'  shift, and go to state 357


state 202

  277 ptr_operator: COLONCOLON nested_name_specifier '*' .
  278             | COLONCOLON nested_name_specifier '*' . cv_qualifier_seq

    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 277 (ptr_operator)

    cv_qualifier_seq  go to state 358
    cv_qualifier      go to state 172


state 203

  285 declarator_id: COLONCOLON nested_name_specifier type_name .

    $default  reduce using rule 285 (declarator_id)


state 204

  206 simple_type_specifier: COLONCOLON nested_name_specifier_opt type_name .

    $default  reduce using rule 206 (simple_type_specifier)


state 205

  257 asm_definition: ASM '(' string_literal . ')' ';'

    ')'  shift, and go to state 359


state 206

  225 elaborated_type_specifier: ENUM COLONCOLON identifier .

    $default  reduce using rule 225 (elaborated_type_specifier)


state 207

  224 elaborated_type_specifier: ENUM COLONCOLON nested_name_specifier . identifier

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 360


state 208

  229 enum_specifier: ENUM identifier '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 471 (enumerator_list_opt)

    identifier             go to state 361
    enumerator_list        go to state 362
    enumerator_definition  go to state 363
    enumerator             go to state 364
    enumerator_list_opt    go to state 365


state 209

  226 elaborated_type_specifier: ENUM nested_name_specifier identifier .

    $default  reduce using rule 226 (elaborated_type_specifier)


state 210

  258 linkage_specification: EXTERN string_literal '{' . declaration_seq_opt '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 493 (EXPORT_opt)]
    $default  reduce using rule 451 (declaration_seq_opt)

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration_seq                 go to state 59
    declaration                     go to state 60
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    declaration_seq_opt             go to state 366
    EXPORT_opt                      go to state 98


state 211

  259 linkage_specification: EXTERN string_literal declaration .

    $default  reduce using rule 259 (linkage_specification)


state 212

  241 unnamed_namespace_definition: NAMESPACE '{' namespace_body . '}'

    '}'  shift, and go to state 367


state 213

  242 namespace_body: declaration_seq_opt .

    $default  reduce using rule 242 (namespace_body)


state 214

  240 extension_namespace_definition: NAMESPACE original_namespace_name '{' . namespace_body '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 493 (EXPORT_opt)]
    $default  reduce using rule 451 (declaration_seq_opt)

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration_seq                 go to state 59
    declaration                     go to state 60
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_body                  go to state 368
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    declaration_seq_opt             go to state 213
    EXPORT_opt                      go to state 98


state 215

  243 namespace_alias_definition: NAMESPACE identifier '=' . qualified_namespace_specifier ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 369

    namespace_name                 go to state 370
    original_namespace_name        go to state 49
    class_name                     go to state 105
    template_name                  go to state 52
    nested_name_specifier          go to state 371
    qualified_namespace_specifier  go to state 372
    template_id                    go to state 94


state 216

  239 original_namespace_definition: NAMESPACE identifier '{' . namespace_body '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 493 (EXPORT_opt)]
    $default  reduce using rule 451 (declaration_seq_opt)

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration_seq                 go to state 59
    declaration                     go to state 60
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_body                  go to state 373
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    declaration_seq_opt             go to state 213
    EXPORT_opt                      go to state 98


state 217

  454 nested_name_specifier_opt: nested_name_specifier .

    $default  reduce using rule 454 (nested_name_specifier_opt)


state 218

  381 operator: DELETE '[' . ']'

    ']'  shift, and go to state 374


state 219

  380 operator: NEW '[' . ']'

    ']'  shift, and go to state 375


state 220

  418 operator: '(' ')' .

    $default  reduce using rule 418 (operator)


state 221

  419 operator: '[' ']' .

    $default  reduce using rule 419 (operator)


state 222

  480 type_specifier_seq_opt: type_specifier_seq .

    $default  reduce using rule 480 (type_specifier_seq_opt)


state 223

  288 type_specifier_seq: type_specifier type_specifier_seq_opt .

    $default  reduce using rule 288 (type_specifier_seq)


state 224

  277 ptr_operator: COLONCOLON . nested_name_specifier '*'
  278             | COLONCOLON . nested_name_specifier '*' cv_qualifier_seq

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 376
    template_id              go to state 94


state 225

  275 ptr_operator: nested_name_specifier . '*'
  276             | nested_name_specifier . '*' cv_qualifier_seq

    '*'  shift, and go to state 178


state 226

  367 conversion_declarator: ptr_operator . conversion_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 224
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '*'       [reduce using rule 491 (conversion_declarator_opt)]
    '&'       [reduce using rule 491 (conversion_declarator_opt)]
    $default  reduce using rule 491 (conversion_declarator_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    nested_name_specifier      go to state 225
    ptr_operator               go to state 226
    conversion_declarator      go to state 227
    template_id                go to state 94
    conversion_declarator_opt  go to state 377


state 227

  492 conversion_declarator_opt: conversion_declarator .

    $default  reduce using rule 492 (conversion_declarator_opt)


state 228

  366 conversion_type_id: type_specifier_seq conversion_declarator_opt .

    $default  reduce using rule 366 (conversion_type_id)


state 229

  438 explicit_specialization: TEMPLATE '<' '>' . declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 493 (EXPORT_opt)]

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration                     go to state 378
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    EXPORT_opt                      go to state 98


state 230

  227 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier . identifier
  228                          | TYPENAME COLONCOLON_opt nested_name_specifier . identifier '<' template_argument_list '>'

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 379


state 231

  252 using_declaration: USING COLONCOLON unqualified_id . ';'

    ';'  shift, and go to state 380


state 232

  250 using_declaration: USING COLONCOLON nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 44

    identifier              go to state 53
    unqualified_id          go to state 381
    conversion_function_id  go to state 91
    operator_function_id    go to state 92


state 233

  253 using_directive: USING NAMESPACE COLONCOLON . nested_name_specifier namespace_name ';'
  254                | USING NAMESPACE COLONCOLON . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 382
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 383
    template_id              go to state 94


state 234

   35 nested_name_specifier: namespace_name . COLONCOLON
  256 using_directive: USING NAMESPACE namespace_name . ';'

    COLONCOLON  shift, and go to state 173
    ';'         shift, and go to state 384


state 235

  255 using_directive: USING NAMESPACE nested_name_specifier . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 385
    original_namespace_name  go to state 49


state 236

  248 using_declaration: USING TYPENAME COLONCOLON . nested_name_specifier unqualified_id ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 386
    template_id              go to state 94


state 237

  249 using_declaration: USING TYPENAME nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 44

    identifier              go to state 53
    unqualified_id          go to state 387
    conversion_function_id  go to state 91
    operator_function_id    go to state 92


state 238

  251 using_declaration: USING nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 388


state 239

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  277 ptr_operator: COLONCOLON nested_name_specifier . '*'
  278             | COLONCOLON nested_name_specifier . '*' cv_qualifier_seq
  285 declarator_id: COLONCOLON nested_name_specifier . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 4
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 177
    '~'            shift, and go to state 44
    '*'            shift, and go to state 202

    typedef_name            go to state 47
    class_name              go to state 179
    enum_name               go to state 51
    template_name           go to state 52
    identifier              go to state 53
    unqualified_id          go to state 180
    type_name               go to state 203
    conversion_function_id  go to state 91
    operator_function_id    go to state 92
    template_id             go to state 94


state 240

  271 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 271 (direct_declarator)


state 241

  280 cv_qualifier_seq: cv_qualifier cv_qualifier_seq .

    $default  reduce using rule 280 (cv_qualifier_seq)


state 242

   33 nested_name_specifier: class_name COLONCOLON nested_name_specifier . namespace_name COLONCOLON nested_name_specifier

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 389
    original_namespace_name  go to state 49


state 243

   14 integer_literal: INTEGER .

    $default  reduce using rule 14 (integer_literal)


state 244

   16 floating_literal: FLOATING .

    $default  reduce using rule 16 (floating_literal)


state 245

   15 character_literal: CHARACTER .

    $default  reduce using rule 15 (character_literal)


state 246

   72 new_expression: COLONCOLON . NEW new_placement_opt new_type_id new_initializer_opt
   74               | COLONCOLON . NEW new_placement_opt '(' type_id ')' new_initializer_opt
   83 delete_expression: COLONCOLON . DELETE cast_expression
   85                  | COLONCOLON . DELETE '[' ']' cast_expression
  206 simple_type_specifier: COLONCOLON . nested_name_specifier_opt type_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    DELETE          shift, and go to state 390
    NEW             shift, and go to state 391

    CLASS_NAME     [reduce using rule 453 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 453 (nested_name_specifier_opt)]
    $default       reduce using rule 453 (nested_name_specifier_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    nested_name_specifier      go to state 217
    template_id                go to state 94
    nested_name_specifier_opt  go to state 102


state 247

   58 unary_expression: PLUSPLUS . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 269
    integer_literal          go to state 270
    character_literal        go to state 271
    floating_literal         go to state 272
    string_literal           go to state 273
    boolean_literal          go to state 274
    primary_expression       go to state 275
    id_expression            go to state 276
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 329
    postfix_expression       go to state 278
    unary_expression         go to state 279
    unary_operator           go to state 280
    new_expression           go to state 281
    delete_expression        go to state 282
    cast_expression          go to state 392
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 248

   59 unary_expression: MINUSMINUS . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 269
    integer_literal          go to state 270
    character_literal        go to state 271
    floating_literal         go to state 272
    string_literal           go to state 273
    boolean_literal          go to state 274
    primary_expression       go to state 275
    id_expression            go to state 276
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 329
    postfix_expression       go to state 278
    unary_expression         go to state 279
    unary_operator           go to state 280
    new_expression           go to state 281
    delete_expression        go to state 282
    cast_expression          go to state 393
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 249

   52 postfix_expression: CONST_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 394


state 250

   82 delete_expression: DELETE . cast_expression
   84                  | DELETE . '[' ']' cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '['               shift, and go to state 395
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 269
    integer_literal          go to state 270
    character_literal        go to state 271
    floating_literal         go to state 272
    string_literal           go to state 273
    boolean_literal          go to state 274
    primary_expression       go to state 275
    id_expression            go to state 276
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 329
    postfix_expression       go to state 278
    unary_expression         go to state 279
    unary_operator           go to state 280
    new_expression           go to state 281
    delete_expression        go to state 282
    cast_expression          go to state 396
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 251

   49 postfix_expression: DYNAMIC_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 397


state 252

   19 boolean_literal: FALSE .

    $default  reduce using rule 19 (boolean_literal)


state 253

   71 new_expression: NEW . new_placement_opt new_type_id new_initializer_opt
   73               | NEW . new_placement_opt '(' type_id ')' new_initializer_opt

    '('  shift, and go to state 398

    '('       [reduce using rule 459 (new_placement_opt)]
    $default  reduce using rule 459 (new_placement_opt)

    new_placement      go to state 399
    new_placement_opt  go to state 400


state 254

   51 postfix_expression: REINTERPRET_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 401


state 255

   63 unary_expression: SIZEOF . unary_expression
   64                 | SIZEOF . '(' type_id ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 402
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 269
    integer_literal          go to state 270
    character_literal        go to state 271
    floating_literal         go to state 272
    string_literal           go to state 273
    boolean_literal          go to state 274
    primary_expression       go to state 275
    id_expression            go to state 276
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 329
    postfix_expression       go to state 278
    unary_expression         go to state 403
    unary_operator           go to state 280
    new_expression           go to state 281
    delete_expression        go to state 282
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 256

   50 postfix_expression: STATIC_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 404


state 257

   22 primary_expression: THIS .

    $default  reduce using rule 22 (primary_expression)


state 258

  447 throw_expression: THROW . assignment_expression_opt

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    $default  reduce using rule 497 (assignment_expression_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 405
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301
    assignment_expression_opt  go to state 406


state 259

   18 boolean_literal: TRUE .

    $default  reduce using rule 18 (boolean_literal)


state 260

   53 postfix_expression: TYPEID . '(' expression ')'
   54                   | TYPEID . '(' type_id ')'

    '('  shift, and go to state 407


state 261

   23 primary_expression: '(' . expression ')'
   87 cast_expression: '(' . type_id ')' cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 246
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 251
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 252
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 277
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 408
    expression                 go to state 409
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 410
    type_specifier_seq         go to state 298
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 262

   30 unqualified_id: '~' . class_name
   70 unary_operator: '~' .

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    CLASS_NAME     [reduce using rule 70 (unary_operator)]
    TEMPLATE_NAME  [reduce using rule 70 (unary_operator)]
    $default       reduce using rule 70 (unary_operator)

    class_name     go to state 170
    template_name  go to state 52
    template_id    go to state 94


state 263

   60 unary_expression: '*' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 269
    integer_literal          go to state 270
    character_literal        go to state 271
    floating_literal         go to state 272
    string_literal           go to state 273
    boolean_literal          go to state 274
    primary_expression       go to state 275
    id_expression            go to state 276
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 329
    postfix_expression       go to state 278
    unary_expression         go to state 279
    unary_operator           go to state 280
    new_expression           go to state 281
    delete_expression        go to state 282
    cast_expression          go to state 411
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 264

   61 unary_expression: '&' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 269
    integer_literal          go to state 270
    character_literal        go to state 271
    floating_literal         go to state 272
    string_literal           go to state 273
    boolean_literal          go to state 274
    primary_expression       go to state 275
    id_expression            go to state 276
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 329
    postfix_expression       go to state 278
    unary_expression         go to state 279
    unary_operator           go to state 280
    new_expression           go to state 281
    delete_expression        go to state 282
    cast_expression          go to state 412
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 265

   67 unary_operator: '+' .

    $default  reduce using rule 67 (unary_operator)


state 266

   68 unary_operator: '-' .

    $default  reduce using rule 68 (unary_operator)


state 267

   69 unary_operator: '!' .

    $default  reduce using rule 69 (unary_operator)


state 268

  431 template_id: template_name . '<' template_argument_list '>'
  436 template_argument: template_name .

    '<'  shift, and go to state 175

    $default  reduce using rule 436 (template_argument)


state 269

   21 primary_expression: literal .

    $default  reduce using rule 21 (primary_expression)


state 270

    9 literal: integer_literal .

    $default  reduce using rule 9 (literal)


state 271

   10 literal: character_literal .

    $default  reduce using rule 10 (literal)


state 272

   11 literal: floating_literal .

    $default  reduce using rule 11 (literal)


state 273

   12 literal: string_literal .

    $default  reduce using rule 12 (literal)


state 274

   13 literal: boolean_literal .

    $default  reduce using rule 13 (literal)


state 275

   36 postfix_expression: primary_expression .

    $default  reduce using rule 36 (postfix_expression)


state 276

   24 primary_expression: id_expression .

    $default  reduce using rule 24 (primary_expression)


state 277

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  205 simple_type_specifier: nested_name_specifier . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 4
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 177
    '~'            shift, and go to state 44

    typedef_name            go to state 47
    class_name              go to state 179
    enum_name               go to state 51
    template_name           go to state 52
    identifier              go to state 53
    unqualified_id          go to state 180
    type_name               go to state 181
    conversion_function_id  go to state 91
    operator_function_id    go to state 92
    template_id             go to state 94


state 278

   37 postfix_expression: postfix_expression . '[' expression ']'
   38                   | postfix_expression . '(' expression_list_opt ')'
   39                   | postfix_expression . '.' TEMPLATE COLONCOLON id_expression
   40                   | postfix_expression . '.' TEMPLATE id_expression
   41                   | postfix_expression . '.' COLONCOLON id_expression
   42                   | postfix_expression . '.' id_expression
   43                   | postfix_expression . ARROW TEMPLATE COLONCOLON id_expression
   44                   | postfix_expression . ARROW TEMPLATE id_expression
   45                   | postfix_expression . ARROW COLONCOLON id_expression
   46                   | postfix_expression . ARROW id_expression
   47                   | postfix_expression . PLUSPLUS
   48                   | postfix_expression . MINUSMINUS
   57 unary_expression: postfix_expression .

    PLUSPLUS    shift, and go to state 413
    MINUSMINUS  shift, and go to state 414
    ARROW       shift, and go to state 415
    '('         shift, and go to state 416
    '['         shift, and go to state 417
    '.'         shift, and go to state 418

    $default  reduce using rule 57 (unary_expression)


state 279

   86 cast_expression: unary_expression .

    $default  reduce using rule 86 (cast_expression)


state 280

   62 unary_expression: unary_operator . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 269
    integer_literal          go to state 270
    character_literal        go to state 271
    floating_literal         go to state 272
    string_literal           go to state 273
    boolean_literal          go to state 274
    primary_expression       go to state 275
    id_expression            go to state 276
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 329
    postfix_expression       go to state 278
    unary_expression         go to state 279
    unary_operator           go to state 280
    new_expression           go to state 281
    delete_expression        go to state 282
    cast_expression          go to state 419
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 281

   65 unary_expression: new_expression .

    $default  reduce using rule 65 (unary_expression)


state 282

   66 unary_expression: delete_expression .

    $default  reduce using rule 66 (unary_expression)


state 283

   88 pm_expression: cast_expression .

    $default  reduce using rule 88 (pm_expression)


state 284

   89 pm_expression: pm_expression . DOTSTAR cast_expression
   90              | pm_expression . ARROWSTAR cast_expression
   91 multiplicative_expression: pm_expression .

    DOTSTAR    shift, and go to state 420
    ARROWSTAR  shift, and go to state 421

    $default  reduce using rule 91 (multiplicative_expression)


state 285

   92 multiplicative_expression: multiplicative_expression . '*' pm_expression
   93                          | multiplicative_expression . '/' pm_expression
   94                          | multiplicative_expression . '%' pm_expression
   95 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 422
    '/'  shift, and go to state 423
    '%'  shift, and go to state 424

    $default  reduce using rule 95 (additive_expression)


state 286

   96 additive_expression: additive_expression . '+' multiplicative_expression
   97                    | additive_expression . '-' multiplicative_expression
   98 shift_expression: additive_expression .

    '+'  shift, and go to state 425
    '-'  shift, and go to state 426

    $default  reduce using rule 98 (shift_expression)


state 287

   99 shift_expression: shift_expression . SL additive_expression
  100                 | shift_expression . SR additive_expression
  101 relational_expression: shift_expression .

    SL  shift, and go to state 427
    SR  shift, and go to state 428

    $default  reduce using rule 101 (relational_expression)


state 288

  102 relational_expression: relational_expression . '<' shift_expression
  103                      | relational_expression . '>' shift_expression
  104                      | relational_expression . LTEQ shift_expression
  105                      | relational_expression . GTEQ shift_expression
  106 equality_expression: relational_expression .

    LTEQ  shift, and go to state 429
    GTEQ  shift, and go to state 430
    '<'   shift, and go to state 431
    '>'   shift, and go to state 432

    '>'       [reduce using rule 106 (equality_expression)]
    $default  reduce using rule 106 (equality_expression)


state 289

  107 equality_expression: equality_expression . EQ relational_expression
  108                    | equality_expression . NOTEQ relational_expression
  109 and_expression: equality_expression .

    EQ     shift, and go to state 433
    NOTEQ  shift, and go to state 434

    $default  reduce using rule 109 (and_expression)


state 290

  110 and_expression: and_expression . '&' equality_expression
  111 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 435

    $default  reduce using rule 111 (exclusive_or_expression)


state 291

  112 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  113 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 436

    $default  reduce using rule 113 (inclusive_or_expression)


state 292

  114 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  115 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 437

    $default  reduce using rule 115 (logical_and_expression)


state 293

  116 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression
  117 logical_or_expression: logical_and_expression .

    ANDAND  shift, and go to state 438

    $default  reduce using rule 117 (logical_or_expression)


state 294

  118 logical_or_expression: logical_or_expression . OROR logical_and_expression
  119 conditional_expression: logical_or_expression .
  120                       | logical_or_expression . '?' expression ':' assignment_expression
  122 assignment_expression: logical_or_expression . assignment_operator assignment_expression

    ADDEQ  shift, and go to state 439
    SUBEQ  shift, and go to state 440
    MULEQ  shift, and go to state 441
    DIVEQ  shift, and go to state 442
    MODEQ  shift, and go to state 443
    XOREQ  shift, and go to state 444
    ANDEQ  shift, and go to state 445
    OREQ   shift, and go to state 446
    SREQ   shift, and go to state 447
    SLEQ   shift, and go to state 448
    OROR   shift, and go to state 449
    '?'    shift, and go to state 450
    '='    shift, and go to state 451

    $default  reduce using rule 119 (conditional_expression)

    assignment_operator  go to state 452


state 295

  121 assignment_expression: conditional_expression .

    $default  reduce using rule 121 (assignment_expression)


state 296

  434 template_argument: assignment_expression .

    $default  reduce using rule 434 (template_argument)


state 297

  435 template_argument: type_id .

    $default  reduce using rule 435 (template_argument)


state 298

  287 type_id: type_specifier_seq . abstract_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 224
    '('             shift, and go to state 453
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '('       [reduce using rule 481 (direct_abstract_declarator_opt)]
    '['       reduce using rule 481 (direct_abstract_declarator_opt)
    $default  reduce using rule 477 (abstract_declarator_opt)

    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 105
    template_name                   go to state 52
    nested_name_specifier           go to state 225
    ptr_operator                    go to state 454
    abstract_declarator             go to state 455
    direct_abstract_declarator      go to state 456
    template_id                     go to state 94
    abstract_declarator_opt         go to state 457
    direct_abstract_declarator_opt  go to state 458


state 299

  431 template_id: template_name '<' template_argument_list . '>'
  433 template_argument_list: template_argument_list . ',' template_argument

    '>'  shift, and go to state 459
    ','  shift, and go to state 460


state 300

  432 template_argument_list: template_argument .

    $default  reduce using rule 432 (template_argument_list)


state 301

  123 assignment_expression: throw_expression .

    $default  reduce using rule 123 (assignment_expression)


state 302

   32 qualified_id: nested_name_specifier TEMPLATE unqualified_id .

    $default  reduce using rule 32 (qualified_id)


state 303

  276 ptr_operator: nested_name_specifier '*' cv_qualifier_seq .

    $default  reduce using rule 276 (ptr_operator)


state 304

  261 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 167
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 55
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 168
    init_declarator          go to state 461
    declarator               go to state 462
    direct_declarator        go to state 83
    ptr_operator             go to state 84
    declarator_id            go to state 86
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 305

  182 simple_declaration: decl_specifier_seq init_declarator_list ';' .

    $default  reduce using rule 182 (simple_declaration)


state 306

  314 initializer: '(' . expression_list ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    expression_list            go to state 463
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 464
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 307

  313 initializer: '=' . initializer_clause

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267
    '{'               shift, and go to state 465

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 466
    initializer_clause         go to state 467
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 308

  474 initializer_opt: initializer .

    $default  reduce using rule 474 (initializer_opt)


state 309

  311 function_definition: decl_specifier_seq declarator function_try_block .

    $default  reduce using rule 311 (function_definition)


state 310

  262 init_declarator: declarator initializer_opt .

    $default  reduce using rule 262 (init_declarator)


state 311

  309 function_definition: decl_specifier_seq declarator ctor_initializer_opt . function_body

    '{'  shift, and go to state 320

    compound_statement  go to state 321
    function_body       go to state 468


state 312

  440 function_try_block: TRY ctor_initializer_opt . function_body handler_seq

    '{'  shift, and go to state 320

    compound_statement  go to state 321
    function_body       go to state 469


state 313

  372 mem_initializer_id: COLONCOLON . nested_name_specifier class_name
  373                   | COLONCOLON . class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 470
    template_name            go to state 52
    nested_name_specifier    go to state 471
    template_id              go to state 94


state 314

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier namespace_name COLONCOLON nested_name_specifier
   34                      | class_name . COLONCOLON
  375 mem_initializer_id: class_name .

    COLONCOLON  shift, and go to state 174

    $default  reduce using rule 375 (mem_initializer_id)


state 315

  376 mem_initializer_id: identifier .

    $default  reduce using rule 376 (mem_initializer_id)


state 316

  374 mem_initializer_id: nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 472
    template_name  go to state 52
    template_id    go to state 94


state 317

  368 ctor_initializer: ':' mem_initializer_list .

    $default  reduce using rule 368 (ctor_initializer)


state 318

  369 mem_initializer_list: mem_initializer .
  370                     | mem_initializer . ',' mem_initializer_list

    ','  shift, and go to state 473

    $default  reduce using rule 369 (mem_initializer_list)


state 319

  371 mem_initializer: mem_initializer_id . '(' expression_list_opt ')'

    '('  shift, and go to state 474


state 320

  150 compound_statement: '{' . statement_seq_opt '}'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 246
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 475
    CASE              shift, and go to state 476
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 249
    CONTINUE          shift, and go to state 477
    DEFAULT           shift, and go to state 478
    DELETE            shift, and go to state 250
    DO                shift, and go to state 479
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 251
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 252
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 480
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 481
    IF                shift, and go to state 482
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 483
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 254
    RETURN            shift, and go to state 484
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 255
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 256
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 485
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TRY               shift, and go to state 486
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 260
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 487
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267
    '{'               shift, and go to state 320

    '}'       reduce using rule 467 (statement_seq_opt)
    $default  reduce using rule 465 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 488
    literal                     go to state 269
    integer_literal             go to state 270
    character_literal           go to state 271
    floating_literal            go to state 272
    string_literal              go to state 273
    boolean_literal             go to state 274
    primary_expression          go to state 275
    id_expression               go to state 276
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 277
    postfix_expression          go to state 278
    unary_expression            go to state 279
    unary_operator              go to state 280
    new_expression              go to state 281
    delete_expression           go to state 282
    cast_expression             go to state 283
    pm_expression               go to state 284
    multiplicative_expression   go to state 285
    additive_expression         go to state 286
    shift_expression            go to state 287
    relational_expression       go to state 288
    equality_expression         go to state 289
    and_expression              go to state 290
    exclusive_or_expression     go to state 291
    inclusive_or_expression     go to state 292
    logical_and_expression      go to state 293
    logical_or_expression       go to state 294
    conditional_expression      go to state 295
    assignment_expression       go to state 408
    expression                  go to state 489
    statement                   go to state 490
    labeled_statement           go to state 491
    expression_statement        go to state 492
    compound_statement          go to state 493
    statement_seq               go to state 494
    selection_statement         go to state 495
    iteration_statement         go to state 496
    jump_statement              go to state 497
    declaration_statement       go to state 498
    block_declaration           go to state 499
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 500
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 501
    throw_expression            go to state 301
    expression_opt              go to state 502
    statement_seq_opt           go to state 503


state 321

  312 function_body: compound_statement .

    $default  reduce using rule 312 (function_body)


state 322

  308 function_definition: declarator ctor_initializer_opt function_body .

    $default  reduce using rule 308 (function_definition)


state 323

  299 parameter_declaration_clause: ELLIPSIS .

    $default  reduce using rule 299 (parameter_declaration_clause)


state 324

  190 decl_specifier_seq: decl_specifier_seq . decl_specifier
  304 parameter_declaration: decl_specifier_seq . declarator
  305                      | decl_specifier_seq . declarator '=' assignment_expression
  306                      | decl_specifier_seq . abstract_declarator_opt
  307                      | decl_specifier_seq . abstract_declarator_opt '=' assignment_expression

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 504
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '('       [reduce using rule 481 (direct_abstract_declarator_opt)]
    '['       reduce using rule 481 (direct_abstract_declarator_opt)
    $default  reduce using rule 477 (abstract_declarator_opt)

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    decl_specifier                  go to state 185
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    declarator                      go to state 505
    direct_declarator               go to state 83
    ptr_operator                    go to state 506
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    abstract_declarator             go to state 455
    direct_abstract_declarator      go to state 456
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_id                     go to state 94
    abstract_declarator_opt         go to state 507
    direct_abstract_declarator_opt  go to state 458


state 325

  266 direct_declarator: direct_declarator '(' parameter_declaration_clause . ')' cv_qualifier_seq exception_specification
  267                  | direct_declarator '(' parameter_declaration_clause . ')' cv_qualifier_seq
  268                  | direct_declarator '(' parameter_declaration_clause . ')' exception_specification
  269                  | direct_declarator '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 508


state 326

  297 parameter_declaration_clause: parameter_declaration_list . ELLIPSIS
  298                             | parameter_declaration_list .
  301                             | parameter_declaration_list . ',' ELLIPSIS
  303 parameter_declaration_list: parameter_declaration_list . ',' parameter_declaration

    ELLIPSIS  shift, and go to state 509
    ','       shift, and go to state 510

    $default  reduce using rule 298 (parameter_declaration_clause)


state 327

  302 parameter_declaration_list: parameter_declaration .

    $default  reduce using rule 302 (parameter_declaration_list)


state 328

   72 new_expression: COLONCOLON . NEW new_placement_opt new_type_id new_initializer_opt
   74               | COLONCOLON . NEW new_placement_opt '(' type_id ')' new_initializer_opt
   83 delete_expression: COLONCOLON . DELETE cast_expression
   85                  | COLONCOLON . DELETE '[' ']' cast_expression

    DELETE  shift, and go to state 390
    NEW     shift, and go to state 391


state 329

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    TEMPLATE    shift, and go to state 177
    '~'         shift, and go to state 44

    identifier              go to state 53
    unqualified_id          go to state 180
    conversion_function_id  go to state 91
    operator_function_id    go to state 92


state 330

  118 logical_or_expression: logical_or_expression . OROR logical_and_expression
  119 conditional_expression: logical_or_expression .
  120                       | logical_or_expression . '?' expression ':' assignment_expression

    OROR  shift, and go to state 449
    '?'   shift, and go to state 450

    $default  reduce using rule 119 (conditional_expression)


state 331

  137 constant_expression: conditional_expression .

    $default  reduce using rule 137 (constant_expression)


state 332

  476 constant_expression_opt: constant_expression .

    $default  reduce using rule 476 (constant_expression_opt)


state 333

  270 direct_declarator: direct_declarator '[' constant_expression_opt . ']'

    ']'  shift, and go to state 511


state 334

  362 access_specifier: PRIVATE .

    $default  reduce using rule 362 (access_specifier)


state 335

  363 access_specifier: PROTECTED .

    $default  reduce using rule 363 (access_specifier)


state 336

  364 access_specifier: PUBLIC .

    $default  reduce using rule 364 (access_specifier)


state 337

  248 using_declaration: USING . TYPENAME COLONCOLON nested_name_specifier unqualified_id ';'
  249                  | USING . TYPENAME nested_name_specifier unqualified_id ';'
  250                  | USING . COLONCOLON nested_name_specifier unqualified_id ';'
  251                  | USING . nested_name_specifier unqualified_id ';'
  252                  | USING . COLONCOLON unqualified_id ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 163
    TYPENAME        shift, and go to state 165

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 166
    template_id              go to state 94


state 338

  333 member_declaration: ';' .

    $default  reduce using rule 333 (member_declaration)


state 339

   27 unqualified_id: identifier .
  344 member_declarator: identifier . ':' constant_expression

    ':'  shift, and go to state 512

    ':'       [reduce using rule 27 (unqualified_id)]
    $default  reduce using rule 27 (unqualified_id)


state 340

   26 id_expression: qualified_id .
  335 member_declaration: qualified_id . ';'

    ';'  shift, and go to state 513

    ';'       [reduce using rule 26 (id_expression)]
    $default  reduce using rule 26 (id_expression)


state 341

  190 decl_specifier_seq: decl_specifier_seq . decl_specifier
  309 function_definition: decl_specifier_seq . declarator ctor_initializer_opt function_body
  311                    | decl_specifier_seq . declarator function_try_block
  330 member_declaration: decl_specifier_seq . member_declarator_list ';'
  331                   | decl_specifier_seq . ';'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46
    ';'             shift, and go to state 514

    ';'       [reduce using rule 340 (member_declarator)]
    $default  reduce using rule 340 (member_declarator)

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 339
    id_expression              go to state 55
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 58
    decl_specifier             go to state 185
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    declarator                 go to state 515
    direct_declarator          go to state 83
    ptr_operator               go to state 84
    cv_qualifier               go to state 85
    declarator_id              go to state 86
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    member_declarator_list     go to state 516
    member_declarator          go to state 348
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 342

  336 member_declaration: using_declaration .

    $default  reduce using rule 336 (member_declaration)


state 343

  308 function_definition: declarator . ctor_initializer_opt function_body
  310                    | declarator . function_try_block
  341 member_declarator: declarator .
  342                  | declarator . pure_specifier
  343                  | declarator . constant_initializer

    TRY  shift, and go to state 189
    ':'  shift, and go to state 190
    '='  shift, and go to state 517

    '{'       reduce using rule 483 (ctor_initializer_opt)
    $default  reduce using rule 341 (member_declarator)

    pure_specifier        go to state 518
    constant_initializer  go to state 519
    ctor_initializer      go to state 191
    function_try_block    go to state 192
    ctor_initializer_opt  go to state 193


state 344

  334 member_declaration: function_definition . SEMICOLON_opt

    ';'  shift, and go to state 520

    ';'       [reduce using rule 489 (SEMICOLON_opt)]
    $default  reduce using rule 489 (SEMICOLON_opt)

    SEMICOLON_opt  go to state 521


state 345

  488 member_specification_opt: member_specification .

    $default  reduce using rule 488 (member_specification_opt)


state 346

  328 member_specification: member_declaration . member_specification_opt

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    PRIVATE         shift, and go to state 334
    PROTECTED       shift, and go to state 335
    PUBLIC          shift, and go to state 336
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 337
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46
    ';'             shift, and go to state 338

    TEMPLATE  reduce using rule 493 (EXPORT_opt)
    ';'       [reduce using rule 340 (member_declarator)]
    '}'       reduce using rule 487 (member_specification_opt)
    $default  reduce using rule 340 (member_declarator)

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 339
    id_expression              go to state 55
    unqualified_id             go to state 56
    qualified_id               go to state 340
    nested_name_specifier      go to state 58
    decl_specifier             go to state 63
    decl_specifier_seq         go to state 341
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    using_declaration          go to state 342
    declarator                 go to state 343
    direct_declarator          go to state 83
    ptr_operator               go to state 84
    cv_qualifier               go to state 85
    declarator_id              go to state 86
    function_definition        go to state 344
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    member_specification       go to state 345
    member_declaration         go to state 346
    member_declarator_list     go to state 347
    member_declarator          go to state 348
    access_specifier           go to state 349
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_declaration       go to state 350
    template_id                go to state 94
    member_specification_opt   go to state 522
    EXPORT_opt                 go to state 98


state 347

  332 member_declaration: member_declarator_list . ';'
  339 member_declarator_list: member_declarator_list . ',' member_declarator

    ','  shift, and go to state 523
    ';'  shift, and go to state 524


state 348

  338 member_declarator_list: member_declarator .

    $default  reduce using rule 338 (member_declarator_list)


state 349

  329 member_specification: access_specifier . ':' member_specification_opt

    ':'  shift, and go to state 525


state 350

  337 member_declaration: template_declaration .

    $default  reduce using rule 337 (member_declaration)


state 351

  320 class_specifier: class_head '{' member_specification_opt . '}'

    '}'  shift, and go to state 526


state 352

  223 elaborated_type_specifier: class_key COLONCOLON identifier .

    $default  reduce using rule 223 (elaborated_type_specifier)


state 353

  222 elaborated_type_specifier: class_key COLONCOLON nested_name_specifier . identifier

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 527


state 354

  347 base_clause: ':' . base_specifier_list

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 528
    PRIVATE         shift, and go to state 334
    PROTECTED       shift, and go to state 335
    PUBLIC          shift, and go to state 336
    VIRTUAL         shift, and go to state 529

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 530
    template_name            go to state 52
    nested_name_specifier    go to state 531
    base_specifier_list      go to state 532
    base_specifier           go to state 533
    access_specifier         go to state 534
    template_id              go to state 94


state 355

  322 class_head: class_key identifier base_clause .

    $default  reduce using rule 322 (class_head)


state 356

  323 class_head: class_key nested_name_specifier identifier .
  324           | class_key nested_name_specifier identifier . base_clause

    ':'  shift, and go to state 354

    $default  reduce using rule 323 (class_head)

    base_clause  go to state 535


state 357

  420 template_declaration: EXPORT_opt TEMPLATE '<' . template_parameter_list '>' declaration

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 536
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 537
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 538
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    decl_specifier             go to state 63
    decl_specifier_seq         go to state 324
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    parameter_declaration      go to state 539
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_parameter_list    go to state 540
    template_parameter         go to state 541
    type_parameter             go to state 542
    template_id                go to state 94


state 358

  278 ptr_operator: COLONCOLON nested_name_specifier '*' cv_qualifier_seq .

    $default  reduce using rule 278 (ptr_operator)


state 359

  257 asm_definition: ASM '(' string_literal ')' . ';'

    ';'  shift, and go to state 543


state 360

  224 elaborated_type_specifier: ENUM COLONCOLON nested_name_specifier identifier .

    $default  reduce using rule 224 (elaborated_type_specifier)


state 361

  234 enumerator: identifier .

    $default  reduce using rule 234 (enumerator)


state 362

  231 enumerator_list: enumerator_list . ',' enumerator_definition
  472 enumerator_list_opt: enumerator_list .

    ','  shift, and go to state 544

    $default  reduce using rule 472 (enumerator_list_opt)


state 363

  230 enumerator_list: enumerator_definition .

    $default  reduce using rule 230 (enumerator_list)


state 364

  232 enumerator_definition: enumerator .
  233                      | enumerator . '=' constant_expression

    '='  shift, and go to state 545

    $default  reduce using rule 232 (enumerator_definition)


state 365

  229 enum_specifier: ENUM identifier '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 546


state 366

  258 linkage_specification: EXTERN string_literal '{' declaration_seq_opt . '}'

    '}'  shift, and go to state 547


state 367

  241 unnamed_namespace_definition: NAMESPACE '{' namespace_body '}' .

    $default  reduce using rule 241 (unnamed_namespace_definition)


state 368

  240 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body . '}'

    '}'  shift, and go to state 548


state 369

  244 qualified_namespace_specifier: COLONCOLON . nested_name_specifier namespace_name
  245                              | COLONCOLON . namespace_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 549
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 550
    template_id              go to state 94


state 370

   35 nested_name_specifier: namespace_name . COLONCOLON
  247 qualified_namespace_specifier: namespace_name .

    COLONCOLON  shift, and go to state 173

    $default  reduce using rule 247 (qualified_namespace_specifier)


state 371

  246 qualified_namespace_specifier: nested_name_specifier . namespace_name

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 551
    original_namespace_name  go to state 49


state 372

  243 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier . ';'

    ';'  shift, and go to state 552


state 373

  239 original_namespace_definition: NAMESPACE identifier '{' namespace_body . '}'

    '}'  shift, and go to state 553


state 374

  381 operator: DELETE '[' ']' .

    $default  reduce using rule 381 (operator)


state 375

  380 operator: NEW '[' ']' .

    $default  reduce using rule 380 (operator)


state 376

  277 ptr_operator: COLONCOLON nested_name_specifier . '*'
  278             | COLONCOLON nested_name_specifier . '*' cv_qualifier_seq

    '*'  shift, and go to state 202


state 377

  367 conversion_declarator: ptr_operator conversion_declarator_opt .

    $default  reduce using rule 367 (conversion_declarator)


state 378

  438 explicit_specialization: TEMPLATE '<' '>' declaration .

    $default  reduce using rule 438 (explicit_specialization)


state 379

  227 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier .
  228                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier . '<' template_argument_list '>'

    '<'  shift, and go to state 554

    '<'       [reduce using rule 227 (elaborated_type_specifier)]
    $default  reduce using rule 227 (elaborated_type_specifier)


state 380

  252 using_declaration: USING COLONCOLON unqualified_id ';' .

    $default  reduce using rule 252 (using_declaration)


state 381

  250 using_declaration: USING COLONCOLON nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 555


state 382

   35 nested_name_specifier: namespace_name . COLONCOLON
  254 using_directive: USING NAMESPACE COLONCOLON namespace_name . ';'

    COLONCOLON  shift, and go to state 173
    ';'         shift, and go to state 556


state 383

  253 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 557
    original_namespace_name  go to state 49


state 384

  256 using_directive: USING NAMESPACE namespace_name ';' .

    $default  reduce using rule 256 (using_directive)


state 385

  255 using_directive: USING NAMESPACE nested_name_specifier namespace_name . ';'

    ';'  shift, and go to state 558


state 386

  248 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 44

    identifier              go to state 53
    unqualified_id          go to state 559
    conversion_function_id  go to state 91
    operator_function_id    go to state 92


state 387

  249 using_declaration: USING TYPENAME nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 560


state 388

  251 using_declaration: USING nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 251 (using_declaration)


state 389

   33 nested_name_specifier: class_name COLONCOLON nested_name_specifier namespace_name . COLONCOLON nested_name_specifier

    COLONCOLON  shift, and go to state 561


state 390

   83 delete_expression: COLONCOLON DELETE . cast_expression
   85                  | COLONCOLON DELETE . '[' ']' cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '['               shift, and go to state 562
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 269
    integer_literal          go to state 270
    character_literal        go to state 271
    floating_literal         go to state 272
    string_literal           go to state 273
    boolean_literal          go to state 274
    primary_expression       go to state 275
    id_expression            go to state 276
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 329
    postfix_expression       go to state 278
    unary_expression         go to state 279
    unary_operator           go to state 280
    new_expression           go to state 281
    delete_expression        go to state 282
    cast_expression          go to state 563
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 391

   72 new_expression: COLONCOLON NEW . new_placement_opt new_type_id new_initializer_opt
   74               | COLONCOLON NEW . new_placement_opt '(' type_id ')' new_initializer_opt

    '('  shift, and go to state 398

    '('       [reduce using rule 459 (new_placement_opt)]
    $default  reduce using rule 459 (new_placement_opt)

    new_placement      go to state 399
    new_placement_opt  go to state 564


state 392

   58 unary_expression: PLUSPLUS cast_expression .

    $default  reduce using rule 58 (unary_expression)


state 393

   59 unary_expression: MINUSMINUS cast_expression .

    $default  reduce using rule 59 (unary_expression)


state 394

   52 postfix_expression: CONST_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 565
    type_specifier_seq         go to state 298
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 395

   84 delete_expression: DELETE '[' . ']' cast_expression

    ']'  shift, and go to state 566


state 396

   82 delete_expression: DELETE cast_expression .

    $default  reduce using rule 82 (delete_expression)


state 397

   49 postfix_expression: DYNAMIC_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 567
    type_specifier_seq         go to state 298
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 398

   75 new_placement: '(' . expression_list ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    expression_list            go to state 568
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 464
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 399

  460 new_placement_opt: new_placement .

    $default  reduce using rule 460 (new_placement_opt)


state 400

   71 new_expression: NEW new_placement_opt . new_type_id new_initializer_opt
   73               | NEW new_placement_opt . '(' type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 569

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    new_type_id                go to state 570
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 571
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 401

   51 postfix_expression: REINTERPRET_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 572
    type_specifier_seq         go to state 298
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 402

   23 primary_expression: '(' . expression ')'
   64 unary_expression: SIZEOF '(' . type_id ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 246
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 251
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 252
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 277
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 408
    expression                 go to state 409
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 573
    type_specifier_seq         go to state 298
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 403

   63 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 63 (unary_expression)


state 404

   50 postfix_expression: STATIC_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 574
    type_specifier_seq         go to state 298
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 405

  498 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 498 (assignment_expression_opt)


state 406

  447 throw_expression: THROW assignment_expression_opt .

    $default  reduce using rule 447 (throw_expression)


state 407

   53 postfix_expression: TYPEID '(' . expression ')'
   54                   | TYPEID '(' . type_id ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 246
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 251
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 252
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 277
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 408
    expression                 go to state 575
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 576
    type_specifier_seq         go to state 298
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 408

  135 expression: assignment_expression .

    $default  reduce using rule 135 (expression)


state 409

   23 primary_expression: '(' expression . ')'
  136 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 577
    ','  shift, and go to state 578


state 410

   87 cast_expression: '(' type_id . ')' cast_expression

    ')'  shift, and go to state 579


state 411

   60 unary_expression: '*' cast_expression .

    $default  reduce using rule 60 (unary_expression)


state 412

   61 unary_expression: '&' cast_expression .

    $default  reduce using rule 61 (unary_expression)


state 413

   47 postfix_expression: postfix_expression PLUSPLUS .

    $default  reduce using rule 47 (postfix_expression)


state 414

   48 postfix_expression: postfix_expression MINUSMINUS .

    $default  reduce using rule 48 (postfix_expression)


state 415

   43 postfix_expression: postfix_expression ARROW . TEMPLATE COLONCOLON id_expression
   44                   | postfix_expression ARROW . TEMPLATE id_expression
   45                   | postfix_expression ARROW . COLONCOLON id_expression
   46                   | postfix_expression ARROW . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 580
    OPERATOR        shift, and go to state 26
    TEMPLATE        shift, and go to state 581
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 582
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 329
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 416

   38 postfix_expression: postfix_expression '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    $default  reduce using rule 455 (expression_list_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    expression_list            go to state 583
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 464
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301
    expression_list_opt        go to state 584


state 417

   37 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 408
    expression                 go to state 585
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 418

   39 postfix_expression: postfix_expression '.' . TEMPLATE COLONCOLON id_expression
   40                   | postfix_expression '.' . TEMPLATE id_expression
   41                   | postfix_expression '.' . COLONCOLON id_expression
   42                   | postfix_expression '.' . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 586
    OPERATOR        shift, and go to state 26
    TEMPLATE        shift, and go to state 587
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 588
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 329
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 419

   62 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 62 (unary_expression)


state 420

   89 pm_expression: pm_expression DOTSTAR . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 269
    integer_literal          go to state 270
    character_literal        go to state 271
    floating_literal         go to state 272
    string_literal           go to state 273
    boolean_literal          go to state 274
    primary_expression       go to state 275
    id_expression            go to state 276
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 329
    postfix_expression       go to state 278
    unary_expression         go to state 279
    unary_operator           go to state 280
    new_expression           go to state 281
    delete_expression        go to state 282
    cast_expression          go to state 589
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 421

   90 pm_expression: pm_expression ARROWSTAR . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 269
    integer_literal          go to state 270
    character_literal        go to state 271
    floating_literal         go to state 272
    string_literal           go to state 273
    boolean_literal          go to state 274
    primary_expression       go to state 275
    id_expression            go to state 276
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 329
    postfix_expression       go to state 278
    unary_expression         go to state 279
    unary_operator           go to state 280
    new_expression           go to state 281
    delete_expression        go to state 282
    cast_expression          go to state 590
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 422

   92 multiplicative_expression: multiplicative_expression '*' . pm_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 269
    integer_literal          go to state 270
    character_literal        go to state 271
    floating_literal         go to state 272
    string_literal           go to state 273
    boolean_literal          go to state 274
    primary_expression       go to state 275
    id_expression            go to state 276
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 329
    postfix_expression       go to state 278
    unary_expression         go to state 279
    unary_operator           go to state 280
    new_expression           go to state 281
    delete_expression        go to state 282
    cast_expression          go to state 283
    pm_expression            go to state 591
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 423

   93 multiplicative_expression: multiplicative_expression '/' . pm_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 269
    integer_literal          go to state 270
    character_literal        go to state 271
    floating_literal         go to state 272
    string_literal           go to state 273
    boolean_literal          go to state 274
    primary_expression       go to state 275
    id_expression            go to state 276
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 329
    postfix_expression       go to state 278
    unary_expression         go to state 279
    unary_operator           go to state 280
    new_expression           go to state 281
    delete_expression        go to state 282
    cast_expression          go to state 283
    pm_expression            go to state 592
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 424

   94 multiplicative_expression: multiplicative_expression '%' . pm_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 269
    integer_literal          go to state 270
    character_literal        go to state 271
    floating_literal         go to state 272
    string_literal           go to state 273
    boolean_literal          go to state 274
    primary_expression       go to state 275
    id_expression            go to state 276
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 329
    postfix_expression       go to state 278
    unary_expression         go to state 279
    unary_operator           go to state 280
    new_expression           go to state 281
    delete_expression        go to state 282
    cast_expression          go to state 283
    pm_expression            go to state 593
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 425

   96 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 594
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 426

   97 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 595
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 427

   99 shift_expression: shift_expression SL . additive_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 596
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 428

  100 shift_expression: shift_expression SR . additive_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 597
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 429

  104 relational_expression: relational_expression LTEQ . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 598
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 430

  105 relational_expression: relational_expression GTEQ . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 599
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 431

  102 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 600
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 432

  103 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 601
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 433

  107 equality_expression: equality_expression EQ . relational_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 602
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 434

  108 equality_expression: equality_expression NOTEQ . relational_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 603
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 435

  110 and_expression: and_expression '&' . equality_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 604
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 436

  112 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 605
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 437

  114 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 606
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 438

  116 logical_and_expression: logical_and_expression ANDAND . inclusive_or_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 607
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 439

  128 assignment_operator: ADDEQ .

    $default  reduce using rule 128 (assignment_operator)


state 440

  129 assignment_operator: SUBEQ .

    $default  reduce using rule 129 (assignment_operator)


state 441

  125 assignment_operator: MULEQ .

    $default  reduce using rule 125 (assignment_operator)


state 442

  126 assignment_operator: DIVEQ .

    $default  reduce using rule 126 (assignment_operator)


state 443

  127 assignment_operator: MODEQ .

    $default  reduce using rule 127 (assignment_operator)


state 444

  133 assignment_operator: XOREQ .

    $default  reduce using rule 133 (assignment_operator)


state 445

  132 assignment_operator: ANDEQ .

    $default  reduce using rule 132 (assignment_operator)


state 446

  134 assignment_operator: OREQ .

    $default  reduce using rule 134 (assignment_operator)


state 447

  130 assignment_operator: SREQ .

    $default  reduce using rule 130 (assignment_operator)


state 448

  131 assignment_operator: SLEQ .

    $default  reduce using rule 131 (assignment_operator)


state 449

  118 logical_or_expression: logical_or_expression OROR . logical_and_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 608
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 450

  120 conditional_expression: logical_or_expression '?' . expression ':' assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 408
    expression                 go to state 609
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 451

  124 assignment_operator: '=' .

    $default  reduce using rule 124 (assignment_operator)


state 452

  122 assignment_expression: logical_or_expression assignment_operator . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 610
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 453

  296 direct_abstract_declarator: '(' . abstract_declarator ')'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 224
    '('             shift, and go to state 453
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '('       [reduce using rule 481 (direct_abstract_declarator_opt)]
    $default  reduce using rule 481 (direct_abstract_declarator_opt)

    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 105
    template_name                   go to state 52
    nested_name_specifier           go to state 225
    ptr_operator                    go to state 454
    abstract_declarator             go to state 611
    direct_abstract_declarator      go to state 456
    template_id                     go to state 94
    direct_abstract_declarator_opt  go to state 458


state 454

  289 abstract_declarator: ptr_operator . abstract_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 224
    '('             shift, and go to state 453
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '('       [reduce using rule 481 (direct_abstract_declarator_opt)]
    '['       reduce using rule 481 (direct_abstract_declarator_opt)
    $default  reduce using rule 477 (abstract_declarator_opt)

    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 105
    template_name                   go to state 52
    nested_name_specifier           go to state 225
    ptr_operator                    go to state 454
    abstract_declarator             go to state 455
    direct_abstract_declarator      go to state 456
    template_id                     go to state 94
    abstract_declarator_opt         go to state 612
    direct_abstract_declarator_opt  go to state 458


state 455

  478 abstract_declarator_opt: abstract_declarator .

    $default  reduce using rule 478 (abstract_declarator_opt)


state 456

  290 abstract_declarator: direct_abstract_declarator .
  482 direct_abstract_declarator_opt: direct_abstract_declarator .

    '('       reduce using rule 482 (direct_abstract_declarator_opt)
    '['       reduce using rule 482 (direct_abstract_declarator_opt)
    $default  reduce using rule 290 (abstract_declarator)


state 457

  287 type_id: type_specifier_seq abstract_declarator_opt .

    $default  reduce using rule 287 (type_id)


state 458

  291 direct_abstract_declarator: direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  292                           | direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' cv_qualifier_seq
  293                           | direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' exception_specification
  294                           | direct_abstract_declarator_opt . '(' parameter_declaration_clause ')'
  295                           | direct_abstract_declarator_opt . '[' constant_expression_opt ']'

    '('  shift, and go to state 613
    '['  shift, and go to state 614


state 459

  431 template_id: template_name '<' template_argument_list '>' .

    $default  reduce using rule 431 (template_id)


state 460

  433 template_argument_list: template_argument_list ',' . template_argument

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 246
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 251
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 252
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 268
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 277
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 296
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 297
    type_specifier_seq         go to state 298
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    template_argument          go to state 615
    throw_expression           go to state 301


state 461

  261 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 261 (init_declarator_list)


state 462

  262 init_declarator: declarator . initializer_opt

    '('  shift, and go to state 306
    '='  shift, and go to state 307

    $default  reduce using rule 473 (initializer_opt)

    initializer      go to state 308
    initializer_opt  go to state 310


state 463

   56 expression_list: expression_list . ',' assignment_expression
  314 initializer: '(' expression_list . ')'

    ')'  shift, and go to state 616
    ','  shift, and go to state 617


state 464

   55 expression_list: assignment_expression .

    $default  reduce using rule 55 (expression_list)


state 465

  316 initializer_clause: '{' . initializer_list COMMA_opt '}'
  317                   | '{' . '}'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267
    '{'               shift, and go to state 465
    '}'               shift, and go to state 618

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 466
    initializer_clause         go to state 619
    initializer_list           go to state 620
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 466

  315 initializer_clause: assignment_expression .

    $default  reduce using rule 315 (initializer_clause)


state 467

  313 initializer: '=' initializer_clause .

    $default  reduce using rule 313 (initializer)


state 468

  309 function_definition: decl_specifier_seq declarator ctor_initializer_opt function_body .

    $default  reduce using rule 309 (function_definition)


state 469

  440 function_try_block: TRY ctor_initializer_opt function_body . handler_seq

    CATCH  shift, and go to state 621

    handler_seq  go to state 622
    handler      go to state 623


state 470

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier namespace_name COLONCOLON nested_name_specifier
   34                      | class_name . COLONCOLON
  373 mem_initializer_id: COLONCOLON class_name .

    COLONCOLON  shift, and go to state 174

    $default  reduce using rule 373 (mem_initializer_id)


state 471

  372 mem_initializer_id: COLONCOLON nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 624
    template_name  go to state 52
    template_id    go to state 94


state 472

  374 mem_initializer_id: nested_name_specifier class_name .

    $default  reduce using rule 374 (mem_initializer_id)


state 473

  370 mem_initializer_list: mem_initializer ',' . mem_initializer_list

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 313

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 314
    template_name            go to state 52
    identifier               go to state 315
    nested_name_specifier    go to state 316
    mem_initializer_list     go to state 625
    mem_initializer          go to state 318
    mem_initializer_id       go to state 319
    template_id              go to state 94


state 474

  371 mem_initializer: mem_initializer_id '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    $default  reduce using rule 455 (expression_list_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    expression_list            go to state 583
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 464
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301
    expression_list_opt        go to state 626


state 475

  163 jump_statement: BREAK . ';'

    ';'  shift, and go to state 627


state 476

  147 labeled_statement: CASE . constant_expression ':' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 330
    conditional_expression     go to state 331
    constant_expression        go to state 628
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 477

  164 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 629


state 478

  148 labeled_statement: DEFAULT . ':' statement

    ':'  shift, and go to state 630


state 479

  159 iteration_statement: DO . statement WHILE '(' expression ')' ';'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 246
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 475
    CASE              shift, and go to state 476
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 249
    CONTINUE          shift, and go to state 477
    DEFAULT           shift, and go to state 478
    DELETE            shift, and go to state 250
    DO                shift, and go to state 479
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 251
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 252
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 480
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 481
    IF                shift, and go to state 482
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 483
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 254
    RETURN            shift, and go to state 484
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 255
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 256
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 485
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TRY               shift, and go to state 486
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 260
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 487
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267
    '{'               shift, and go to state 320

    $default  reduce using rule 465 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 488
    literal                     go to state 269
    integer_literal             go to state 270
    character_literal           go to state 271
    floating_literal            go to state 272
    string_literal              go to state 273
    boolean_literal             go to state 274
    primary_expression          go to state 275
    id_expression               go to state 276
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 277
    postfix_expression          go to state 278
    unary_expression            go to state 279
    unary_operator              go to state 280
    new_expression              go to state 281
    delete_expression           go to state 282
    cast_expression             go to state 283
    pm_expression               go to state 284
    multiplicative_expression   go to state 285
    additive_expression         go to state 286
    shift_expression            go to state 287
    relational_expression       go to state 288
    equality_expression         go to state 289
    and_expression              go to state 290
    exclusive_or_expression     go to state 291
    inclusive_or_expression     go to state 292
    logical_and_expression      go to state 293
    logical_or_expression       go to state 294
    conditional_expression      go to state 295
    assignment_expression       go to state 408
    expression                  go to state 489
    statement                   go to state 631
    labeled_statement           go to state 491
    expression_statement        go to state 492
    compound_statement          go to state 493
    selection_statement         go to state 495
    iteration_statement         go to state 496
    jump_statement              go to state 497
    declaration_statement       go to state 498
    block_declaration           go to state 499
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 500
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 501
    throw_expression            go to state 301
    expression_opt              go to state 502


state 480

  160 iteration_statement: FOR . '(' for_init_statement condition_opt ';' expression_opt ')' statement

    '('  shift, and go to state 632


state 481

  166 jump_statement: GOTO . identifier ';'

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 633


state 482

  153 selection_statement: IF . '(' condition ')' statement
  154                    | IF . '(' condition ')' statement ELSE statement

    '('  shift, and go to state 634


state 483

  243 namespace_alias_definition: NAMESPACE . identifier '=' qualified_namespace_specifier ';'

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 635


state 484

  165 jump_statement: RETURN . expression_opt ';'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    $default  reduce using rule 465 (expression_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 408
    expression                 go to state 489
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301
    expression_opt             go to state 636


state 485

  155 selection_statement: SWITCH . '(' condition ')' statement

    '('  shift, and go to state 637


state 486

  439 try_block: TRY . compound_statement handler_seq

    '{'  shift, and go to state 320

    compound_statement  go to state 638


state 487

  158 iteration_statement: WHILE . '(' condition ')' statement

    '('  shift, and go to state 639


state 488

   27 unqualified_id: identifier .
  146 labeled_statement: identifier . ':' statement

    ':'  shift, and go to state 640

    $default  reduce using rule 27 (unqualified_id)


state 489

  136 expression: expression . ',' assignment_expression
  466 expression_opt: expression .

    ','  shift, and go to state 578

    $default  reduce using rule 466 (expression_opt)


state 490

  151 statement_seq: statement .

    $default  reduce using rule 151 (statement_seq)


state 491

  138 statement: labeled_statement .

    $default  reduce using rule 138 (statement)


state 492

  139 statement: expression_statement .

    $default  reduce using rule 139 (statement)


state 493

  140 statement: compound_statement .

    $default  reduce using rule 140 (statement)


state 494

  152 statement_seq: statement_seq . statement
  468 statement_seq_opt: statement_seq .

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 246
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 475
    CASE              shift, and go to state 476
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 249
    CONTINUE          shift, and go to state 477
    DEFAULT           shift, and go to state 478
    DELETE            shift, and go to state 250
    DO                shift, and go to state 479
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 251
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 252
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 480
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 481
    IF                shift, and go to state 482
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 483
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 254
    RETURN            shift, and go to state 484
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 255
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 256
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 485
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TRY               shift, and go to state 486
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 260
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 487
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267
    '{'               shift, and go to state 320

    '}'       reduce using rule 468 (statement_seq_opt)
    $default  reduce using rule 465 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 488
    literal                     go to state 269
    integer_literal             go to state 270
    character_literal           go to state 271
    floating_literal            go to state 272
    string_literal              go to state 273
    boolean_literal             go to state 274
    primary_expression          go to state 275
    id_expression               go to state 276
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 277
    postfix_expression          go to state 278
    unary_expression            go to state 279
    unary_operator              go to state 280
    new_expression              go to state 281
    delete_expression           go to state 282
    cast_expression             go to state 283
    pm_expression               go to state 284
    multiplicative_expression   go to state 285
    additive_expression         go to state 286
    shift_expression            go to state 287
    relational_expression       go to state 288
    equality_expression         go to state 289
    and_expression              go to state 290
    exclusive_or_expression     go to state 291
    inclusive_or_expression     go to state 292
    logical_and_expression      go to state 293
    logical_or_expression       go to state 294
    conditional_expression      go to state 295
    assignment_expression       go to state 408
    expression                  go to state 489
    statement                   go to state 641
    labeled_statement           go to state 491
    expression_statement        go to state 492
    compound_statement          go to state 493
    selection_statement         go to state 495
    iteration_statement         go to state 496
    jump_statement              go to state 497
    declaration_statement       go to state 498
    block_declaration           go to state 499
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 500
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 501
    throw_expression            go to state 301
    expression_opt              go to state 502


state 495

  141 statement: selection_statement .

    $default  reduce using rule 141 (statement)


state 496

  142 statement: iteration_statement .

    $default  reduce using rule 142 (statement)


state 497

  143 statement: jump_statement .

    $default  reduce using rule 143 (statement)


state 498

  144 statement: declaration_statement .

    $default  reduce using rule 144 (statement)


state 499

  167 declaration_statement: block_declaration .

    $default  reduce using rule 167 (declaration_statement)


state 500

  182 simple_declaration: decl_specifier_seq . init_declarator_list ';'
  183                   | decl_specifier_seq . ';'
  190 decl_specifier_seq: decl_specifier_seq . decl_specifier

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46
    ';'             shift, and go to state 184

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    id_expression              go to state 55
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 58
    decl_specifier             go to state 185
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    init_declarator_list       go to state 186
    init_declarator            go to state 187
    declarator                 go to state 462
    direct_declarator          go to state 83
    ptr_operator               go to state 84
    cv_qualifier               go to state 85
    declarator_id              go to state 86
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 501

  145 statement: try_block .

    $default  reduce using rule 145 (statement)


state 502

  149 expression_statement: expression_opt . ';'

    ';'  shift, and go to state 642


state 503

  150 compound_statement: '{' statement_seq_opt . '}'

    '}'  shift, and go to state 643


state 504

  271 direct_declarator: '(' . declarator ')'
  296 direct_abstract_declarator: '(' . abstract_declarator ')'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 167
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 504
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '('       [reduce using rule 481 (direct_abstract_declarator_opt)]
    $default  reduce using rule 481 (direct_abstract_declarator_opt)

    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 105
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 168
    declarator                      go to state 169
    direct_declarator               go to state 83
    ptr_operator                    go to state 506
    declarator_id                   go to state 86
    abstract_declarator             go to state 611
    direct_abstract_declarator      go to state 456
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_id                     go to state 94
    direct_abstract_declarator_opt  go to state 458


state 505

  304 parameter_declaration: decl_specifier_seq declarator .
  305                      | decl_specifier_seq declarator . '=' assignment_expression

    '='  shift, and go to state 644

    $default  reduce using rule 304 (parameter_declaration)


state 506

  264 declarator: ptr_operator . declarator
  289 abstract_declarator: ptr_operator . abstract_declarator_opt

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 167
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 504
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '('       [reduce using rule 481 (direct_abstract_declarator_opt)]
    '['       reduce using rule 481 (direct_abstract_declarator_opt)
    $default  reduce using rule 477 (abstract_declarator_opt)

    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 105
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 168
    declarator                      go to state 196
    direct_declarator               go to state 83
    ptr_operator                    go to state 506
    declarator_id                   go to state 86
    abstract_declarator             go to state 455
    direct_abstract_declarator      go to state 456
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_id                     go to state 94
    abstract_declarator_opt         go to state 612
    direct_abstract_declarator_opt  go to state 458


state 507

  306 parameter_declaration: decl_specifier_seq abstract_declarator_opt .
  307                      | decl_specifier_seq abstract_declarator_opt . '=' assignment_expression

    '='  shift, and go to state 645

    $default  reduce using rule 306 (parameter_declaration)


state 508

  266 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' . cv_qualifier_seq exception_specification
  267                  | direct_declarator '(' parameter_declaration_clause ')' . cv_qualifier_seq
  268                  | direct_declarator '(' parameter_declaration_clause ')' . exception_specification
  269                  | direct_declarator '(' parameter_declaration_clause ')' .

    CONST     shift, and go to state 13
    THROW     shift, and go to state 646
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 269 (direct_declarator)

    cv_qualifier_seq         go to state 647
    cv_qualifier             go to state 172
    exception_specification  go to state 648


state 509

  297 parameter_declaration_clause: parameter_declaration_list ELLIPSIS .

    $default  reduce using rule 297 (parameter_declaration_clause)


state 510

  301 parameter_declaration_clause: parameter_declaration_list ',' . ELLIPSIS
  303 parameter_declaration_list: parameter_declaration_list ',' . parameter_declaration

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 649
    COLONCOLON      shift, and go to state 113
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    decl_specifier             go to state 63
    decl_specifier_seq         go to state 324
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    parameter_declaration      go to state 650
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 511

  270 direct_declarator: direct_declarator '[' constant_expression_opt ']' .

    $default  reduce using rule 270 (direct_declarator)


state 512

  344 member_declarator: identifier ':' . constant_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 330
    conditional_expression     go to state 331
    constant_expression        go to state 651
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 513

  335 member_declaration: qualified_id ';' .

    $default  reduce using rule 335 (member_declaration)


state 514

  331 member_declaration: decl_specifier_seq ';' .

    $default  reduce using rule 331 (member_declaration)


state 515

  309 function_definition: decl_specifier_seq declarator . ctor_initializer_opt function_body
  311                    | decl_specifier_seq declarator . function_try_block
  341 member_declarator: declarator .
  342                  | declarator . pure_specifier
  343                  | declarator . constant_initializer

    TRY  shift, and go to state 189
    ':'  shift, and go to state 190
    '='  shift, and go to state 517

    '{'       reduce using rule 483 (ctor_initializer_opt)
    $default  reduce using rule 341 (member_declarator)

    pure_specifier        go to state 518
    constant_initializer  go to state 519
    ctor_initializer      go to state 191
    function_try_block    go to state 309
    ctor_initializer_opt  go to state 311


state 516

  330 member_declaration: decl_specifier_seq member_declarator_list . ';'
  339 member_declarator_list: member_declarator_list . ',' member_declarator

    ','  shift, and go to state 523
    ';'  shift, and go to state 652


state 517

  345 pure_specifier: '=' . '0'
  346 constant_initializer: '=' . constant_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267
    '0'               shift, and go to state 653

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 330
    conditional_expression     go to state 331
    constant_expression        go to state 654
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 518

  342 member_declarator: declarator pure_specifier .

    $default  reduce using rule 342 (member_declarator)


state 519

  343 member_declarator: declarator constant_initializer .

    $default  reduce using rule 343 (member_declarator)


state 520

  490 SEMICOLON_opt: ';' .

    $default  reduce using rule 490 (SEMICOLON_opt)


state 521

  334 member_declaration: function_definition SEMICOLON_opt .

    $default  reduce using rule 334 (member_declaration)


state 522

  328 member_specification: member_declaration member_specification_opt .

    $default  reduce using rule 328 (member_specification)


state 523

  339 member_declarator_list: member_declarator_list ',' . member_declarator

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 167
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    $default  reduce using rule 340 (member_declarator)

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 339
    id_expression            go to state 55
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 168
    declarator               go to state 655
    direct_declarator        go to state 83
    ptr_operator             go to state 84
    declarator_id            go to state 86
    member_declarator        go to state 656
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 524

  332 member_declaration: member_declarator_list ';' .

    $default  reduce using rule 332 (member_declaration)


state 525

  329 member_specification: access_specifier ':' . member_specification_opt

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    PRIVATE         shift, and go to state 334
    PROTECTED       shift, and go to state 335
    PUBLIC          shift, and go to state 336
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 337
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46
    ';'             shift, and go to state 338

    TEMPLATE  reduce using rule 493 (EXPORT_opt)
    ';'       [reduce using rule 340 (member_declarator)]
    '}'       reduce using rule 487 (member_specification_opt)
    $default  reduce using rule 340 (member_declarator)

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 339
    id_expression              go to state 55
    unqualified_id             go to state 56
    qualified_id               go to state 340
    nested_name_specifier      go to state 58
    decl_specifier             go to state 63
    decl_specifier_seq         go to state 341
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    using_declaration          go to state 342
    declarator                 go to state 343
    direct_declarator          go to state 83
    ptr_operator               go to state 84
    cv_qualifier               go to state 85
    declarator_id              go to state 86
    function_definition        go to state 344
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    member_specification       go to state 345
    member_declaration         go to state 346
    member_declarator_list     go to state 347
    member_declarator          go to state 348
    access_specifier           go to state 349
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_declaration       go to state 350
    template_id                go to state 94
    member_specification_opt   go to state 657
    EXPORT_opt                 go to state 98


state 526

  320 class_specifier: class_head '{' member_specification_opt '}' .

    $default  reduce using rule 320 (class_specifier)


state 527

  222 elaborated_type_specifier: class_key COLONCOLON nested_name_specifier identifier .

    $default  reduce using rule 222 (elaborated_type_specifier)


state 528

  350 base_specifier: COLONCOLON . nested_name_specifier class_name
  351               | COLONCOLON . class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 658
    template_name            go to state 52
    nested_name_specifier    go to state 659
    template_id              go to state 94


state 529

  354 base_specifier: VIRTUAL . access_specifier COLONCOLON nested_name_specifier_opt class_name
  355               | VIRTUAL . access_specifier nested_name_specifier_opt class_name
  356               | VIRTUAL . COLONCOLON nested_name_specifier_opt class_name
  357               | VIRTUAL . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 660
    PRIVATE         shift, and go to state 334
    PROTECTED       shift, and go to state 335
    PUBLIC          shift, and go to state 336

    CLASS_NAME     [reduce using rule 453 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 453 (nested_name_specifier_opt)]

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    nested_name_specifier      go to state 217
    access_specifier           go to state 661
    template_id                go to state 94
    nested_name_specifier_opt  go to state 662


state 530

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier namespace_name COLONCOLON nested_name_specifier
   34                      | class_name . COLONCOLON
  353 base_specifier: class_name .

    COLONCOLON  shift, and go to state 174

    $default  reduce using rule 353 (base_specifier)


state 531

  352 base_specifier: nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 663
    template_name  go to state 52
    template_id    go to state 94


state 532

  347 base_clause: ':' base_specifier_list .
  349 base_specifier_list: base_specifier_list . ',' base_specifier

    ','  shift, and go to state 664

    $default  reduce using rule 347 (base_clause)


state 533

  348 base_specifier_list: base_specifier .

    $default  reduce using rule 348 (base_specifier_list)


state 534

  358 base_specifier: access_specifier . VIRTUAL COLONCOLON nested_name_specifier_opt class_name
  359               | access_specifier . VIRTUAL nested_name_specifier_opt class_name
  360               | access_specifier . COLONCOLON nested_name_specifier_opt class_name
  361               | access_specifier . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 665
    VIRTUAL         shift, and go to state 666

    CLASS_NAME     [reduce using rule 453 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 453 (nested_name_specifier_opt)]

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    nested_name_specifier      go to state 217
    template_id                go to state 94
    nested_name_specifier_opt  go to state 667


state 535

  324 class_head: class_key nested_name_specifier identifier base_clause .

    $default  reduce using rule 324 (class_head)


state 536

  325 class_key: CLASS .
  425 type_parameter: CLASS . identifier
  426               | CLASS . identifier '=' type_id

    IDENTIFIER  shift, and go to state 1

    IDENTIFIER  [reduce using rule 325 (class_key)]
    $default    reduce using rule 325 (class_key)

    identifier  go to state 668


state 537

  429 type_parameter: TEMPLATE . '<' template_parameter_list '>' CLASS identifier
  430               | TEMPLATE . '<' template_parameter_list '>' CLASS identifier '=' template_name

    '<'  shift, and go to state 669


state 538

  227 elaborated_type_specifier: TYPENAME . COLONCOLON_opt nested_name_specifier identifier
  228                          | TYPENAME . COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'
  427 type_parameter: TYPENAME . identifier
  428               | TYPENAME . identifier '=' type_id

    IDENTIFIER  shift, and go to state 1
    COLONCOLON  shift, and go to state 161

    $default  reduce using rule 457 (COLONCOLON_opt)

    identifier      go to state 670
    COLONCOLON_opt  go to state 162


state 539

  424 template_parameter: parameter_declaration .

    $default  reduce using rule 424 (template_parameter)


state 540

  420 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list . '>' declaration
  422 template_parameter_list: template_parameter_list . ',' template_parameter

    '>'  shift, and go to state 671
    ','  shift, and go to state 672


state 541

  421 template_parameter_list: template_parameter .

    $default  reduce using rule 421 (template_parameter_list)


state 542

  423 template_parameter: type_parameter .

    $default  reduce using rule 423 (template_parameter)


state 543

  257 asm_definition: ASM '(' string_literal ')' ';' .

    $default  reduce using rule 257 (asm_definition)


state 544

  231 enumerator_list: enumerator_list ',' . enumerator_definition

    IDENTIFIER  shift, and go to state 1

    identifier             go to state 361
    enumerator_definition  go to state 673
    enumerator             go to state 364


state 545

  233 enumerator_definition: enumerator '=' . constant_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 330
    conditional_expression     go to state 331
    constant_expression        go to state 674
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 546

  229 enum_specifier: ENUM identifier '{' enumerator_list_opt '}' .

    $default  reduce using rule 229 (enum_specifier)


state 547

  258 linkage_specification: EXTERN string_literal '{' declaration_seq_opt '}' .

    $default  reduce using rule 258 (linkage_specification)


state 548

  240 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body '}' .

    $default  reduce using rule 240 (extension_namespace_definition)


state 549

   35 nested_name_specifier: namespace_name . COLONCOLON
  245 qualified_namespace_specifier: COLONCOLON namespace_name .

    COLONCOLON  shift, and go to state 173

    $default  reduce using rule 245 (qualified_namespace_specifier)


state 550

  244 qualified_namespace_specifier: COLONCOLON nested_name_specifier . namespace_name

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 675
    original_namespace_name  go to state 49


state 551

  246 qualified_namespace_specifier: nested_name_specifier namespace_name .

    $default  reduce using rule 246 (qualified_namespace_specifier)


state 552

  243 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier ';' .

    $default  reduce using rule 243 (namespace_alias_definition)


state 553

  239 original_namespace_definition: NAMESPACE identifier '{' namespace_body '}' .

    $default  reduce using rule 239 (original_namespace_definition)


state 554

  228 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' . template_argument_list '>'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 246
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 251
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 252
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 268
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 277
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 296
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 297
    type_specifier_seq         go to state 298
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    template_argument_list     go to state 676
    template_argument          go to state 300
    throw_expression           go to state 301


state 555

  250 using_declaration: USING COLONCOLON nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 250 (using_declaration)


state 556

  254 using_directive: USING NAMESPACE COLONCOLON namespace_name ';' .

    $default  reduce using rule 254 (using_directive)


state 557

  253 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier namespace_name . ';'

    ';'  shift, and go to state 677


state 558

  255 using_directive: USING NAMESPACE nested_name_specifier namespace_name ';' .

    $default  reduce using rule 255 (using_directive)


state 559

  248 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 678


state 560

  249 using_declaration: USING TYPENAME nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 249 (using_declaration)


state 561

   33 nested_name_specifier: class_name COLONCOLON nested_name_specifier namespace_name COLONCOLON . nested_name_specifier

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 679
    template_id              go to state 94


state 562

   85 delete_expression: COLONCOLON DELETE '[' . ']' cast_expression

    ']'  shift, and go to state 680


state 563

   83 delete_expression: COLONCOLON DELETE cast_expression .

    $default  reduce using rule 83 (delete_expression)


state 564

   72 new_expression: COLONCOLON NEW new_placement_opt . new_type_id new_initializer_opt
   74               | COLONCOLON NEW new_placement_opt . '(' type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 681

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    new_type_id                go to state 682
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 571
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 565

   52 postfix_expression: CONST_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 683


state 566

   84 delete_expression: DELETE '[' ']' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 269
    integer_literal          go to state 270
    character_literal        go to state 271
    floating_literal         go to state 272
    string_literal           go to state 273
    boolean_literal          go to state 274
    primary_expression       go to state 275
    id_expression            go to state 276
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 329
    postfix_expression       go to state 278
    unary_expression         go to state 279
    unary_operator           go to state 280
    new_expression           go to state 281
    delete_expression        go to state 282
    cast_expression          go to state 684
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 567

   49 postfix_expression: DYNAMIC_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 685


state 568

   56 expression_list: expression_list . ',' assignment_expression
   75 new_placement: '(' expression_list . ')'

    ')'  shift, and go to state 686
    ','  shift, and go to state 617


state 569

   73 new_expression: NEW new_placement_opt '(' . type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 687
    type_specifier_seq         go to state 298
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 570

   71 new_expression: NEW new_placement_opt new_type_id . new_initializer_opt

    '('  shift, and go to state 688

    $default  reduce using rule 461 (new_initializer_opt)

    new_initializer      go to state 689
    new_initializer_opt  go to state 690


state 571

   76 new_type_id: type_specifier_seq . new_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 224
    '['             shift, and go to state 691
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '*'       [reduce using rule 463 (new_declarator_opt)]
    '&'       [reduce using rule 463 (new_declarator_opt)]
    $default  reduce using rule 463 (new_declarator_opt)

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 225
    new_declarator           go to state 692
    direct_new_declarator    go to state 693
    ptr_operator             go to state 694
    template_id              go to state 94
    new_declarator_opt       go to state 695


state 572

   51 postfix_expression: REINTERPRET_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 696


state 573

   64 unary_expression: SIZEOF '(' type_id . ')'

    ')'  shift, and go to state 697


state 574

   50 postfix_expression: STATIC_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 698


state 575

   53 postfix_expression: TYPEID '(' expression . ')'
  136 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 699
    ','  shift, and go to state 578


state 576

   54 postfix_expression: TYPEID '(' type_id . ')'

    ')'  shift, and go to state 700


state 577

   23 primary_expression: '(' expression ')' .

    $default  reduce using rule 23 (primary_expression)


state 578

  136 expression: expression ',' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 701
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 579

   87 cast_expression: '(' type_id ')' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 269
    integer_literal          go to state 270
    character_literal        go to state 271
    floating_literal         go to state 272
    string_literal           go to state 273
    boolean_literal          go to state 274
    primary_expression       go to state 275
    id_expression            go to state 276
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 329
    postfix_expression       go to state 278
    unary_expression         go to state 279
    unary_operator           go to state 280
    new_expression           go to state 281
    delete_expression        go to state 282
    cast_expression          go to state 702
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 580

   45 postfix_expression: postfix_expression ARROW COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 703
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 329
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 581

   43 postfix_expression: postfix_expression ARROW TEMPLATE . COLONCOLON id_expression
   44                   | postfix_expression ARROW TEMPLATE . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 704
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 705
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 329
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 582

   46 postfix_expression: postfix_expression ARROW id_expression .

    $default  reduce using rule 46 (postfix_expression)


state 583

   56 expression_list: expression_list . ',' assignment_expression
  456 expression_list_opt: expression_list .

    ','  shift, and go to state 617

    $default  reduce using rule 456 (expression_list_opt)


state 584

   38 postfix_expression: postfix_expression '(' expression_list_opt . ')'

    ')'  shift, and go to state 706


state 585

   37 postfix_expression: postfix_expression '[' expression . ']'
  136 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 707
    ','  shift, and go to state 578


state 586

   41 postfix_expression: postfix_expression '.' COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 708
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 329
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 587

   39 postfix_expression: postfix_expression '.' TEMPLATE . COLONCOLON id_expression
   40                   | postfix_expression '.' TEMPLATE . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 709
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 710
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 329
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 588

   42 postfix_expression: postfix_expression '.' id_expression .

    $default  reduce using rule 42 (postfix_expression)


state 589

   89 pm_expression: pm_expression DOTSTAR cast_expression .

    $default  reduce using rule 89 (pm_expression)


state 590

   90 pm_expression: pm_expression ARROWSTAR cast_expression .

    $default  reduce using rule 90 (pm_expression)


state 591

   89 pm_expression: pm_expression . DOTSTAR cast_expression
   90              | pm_expression . ARROWSTAR cast_expression
   92 multiplicative_expression: multiplicative_expression '*' pm_expression .

    DOTSTAR    shift, and go to state 420
    ARROWSTAR  shift, and go to state 421

    $default  reduce using rule 92 (multiplicative_expression)


state 592

   89 pm_expression: pm_expression . DOTSTAR cast_expression
   90              | pm_expression . ARROWSTAR cast_expression
   93 multiplicative_expression: multiplicative_expression '/' pm_expression .

    DOTSTAR    shift, and go to state 420
    ARROWSTAR  shift, and go to state 421

    $default  reduce using rule 93 (multiplicative_expression)


state 593

   89 pm_expression: pm_expression . DOTSTAR cast_expression
   90              | pm_expression . ARROWSTAR cast_expression
   94 multiplicative_expression: multiplicative_expression '%' pm_expression .

    DOTSTAR    shift, and go to state 420
    ARROWSTAR  shift, and go to state 421

    $default  reduce using rule 94 (multiplicative_expression)


state 594

   92 multiplicative_expression: multiplicative_expression . '*' pm_expression
   93                          | multiplicative_expression . '/' pm_expression
   94                          | multiplicative_expression . '%' pm_expression
   96 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 422
    '/'  shift, and go to state 423
    '%'  shift, and go to state 424

    $default  reduce using rule 96 (additive_expression)


state 595

   92 multiplicative_expression: multiplicative_expression . '*' pm_expression
   93                          | multiplicative_expression . '/' pm_expression
   94                          | multiplicative_expression . '%' pm_expression
   97 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 422
    '/'  shift, and go to state 423
    '%'  shift, and go to state 424

    $default  reduce using rule 97 (additive_expression)


state 596

   96 additive_expression: additive_expression . '+' multiplicative_expression
   97                    | additive_expression . '-' multiplicative_expression
   99 shift_expression: shift_expression SL additive_expression .

    '+'  shift, and go to state 425
    '-'  shift, and go to state 426

    $default  reduce using rule 99 (shift_expression)


state 597

   96 additive_expression: additive_expression . '+' multiplicative_expression
   97                    | additive_expression . '-' multiplicative_expression
  100 shift_expression: shift_expression SR additive_expression .

    '+'  shift, and go to state 425
    '-'  shift, and go to state 426

    $default  reduce using rule 100 (shift_expression)


state 598

   99 shift_expression: shift_expression . SL additive_expression
  100                 | shift_expression . SR additive_expression
  104 relational_expression: relational_expression LTEQ shift_expression .

    SL  shift, and go to state 427
    SR  shift, and go to state 428

    $default  reduce using rule 104 (relational_expression)


state 599

   99 shift_expression: shift_expression . SL additive_expression
  100                 | shift_expression . SR additive_expression
  105 relational_expression: relational_expression GTEQ shift_expression .

    SL  shift, and go to state 427
    SR  shift, and go to state 428

    $default  reduce using rule 105 (relational_expression)


state 600

   99 shift_expression: shift_expression . SL additive_expression
  100                 | shift_expression . SR additive_expression
  102 relational_expression: relational_expression '<' shift_expression .

    SL  shift, and go to state 427
    SR  shift, and go to state 428

    $default  reduce using rule 102 (relational_expression)


state 601

   99 shift_expression: shift_expression . SL additive_expression
  100                 | shift_expression . SR additive_expression
  103 relational_expression: relational_expression '>' shift_expression .

    SL  shift, and go to state 427
    SR  shift, and go to state 428

    $default  reduce using rule 103 (relational_expression)


state 602

  102 relational_expression: relational_expression . '<' shift_expression
  103                      | relational_expression . '>' shift_expression
  104                      | relational_expression . LTEQ shift_expression
  105                      | relational_expression . GTEQ shift_expression
  107 equality_expression: equality_expression EQ relational_expression .

    LTEQ  shift, and go to state 429
    GTEQ  shift, and go to state 430
    '<'   shift, and go to state 431
    '>'   shift, and go to state 432

    '>'       [reduce using rule 107 (equality_expression)]
    $default  reduce using rule 107 (equality_expression)


state 603

  102 relational_expression: relational_expression . '<' shift_expression
  103                      | relational_expression . '>' shift_expression
  104                      | relational_expression . LTEQ shift_expression
  105                      | relational_expression . GTEQ shift_expression
  108 equality_expression: equality_expression NOTEQ relational_expression .

    LTEQ  shift, and go to state 429
    GTEQ  shift, and go to state 430
    '<'   shift, and go to state 431
    '>'   shift, and go to state 432

    '>'       [reduce using rule 108 (equality_expression)]
    $default  reduce using rule 108 (equality_expression)


state 604

  107 equality_expression: equality_expression . EQ relational_expression
  108                    | equality_expression . NOTEQ relational_expression
  110 and_expression: and_expression '&' equality_expression .

    EQ     shift, and go to state 433
    NOTEQ  shift, and go to state 434

    $default  reduce using rule 110 (and_expression)


state 605

  110 and_expression: and_expression . '&' equality_expression
  112 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 435

    $default  reduce using rule 112 (exclusive_or_expression)


state 606

  112 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  114 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 436

    $default  reduce using rule 114 (inclusive_or_expression)


state 607

  114 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  116 logical_and_expression: logical_and_expression ANDAND inclusive_or_expression .

    '|'  shift, and go to state 437

    $default  reduce using rule 116 (logical_and_expression)


state 608

  116 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression
  118 logical_or_expression: logical_or_expression OROR logical_and_expression .

    ANDAND  shift, and go to state 438

    $default  reduce using rule 118 (logical_or_expression)


state 609

  120 conditional_expression: logical_or_expression '?' expression . ':' assignment_expression
  136 expression: expression . ',' assignment_expression

    ','  shift, and go to state 578
    ':'  shift, and go to state 711


state 610

  122 assignment_expression: logical_or_expression assignment_operator assignment_expression .

    $default  reduce using rule 122 (assignment_expression)


state 611

  296 direct_abstract_declarator: '(' abstract_declarator . ')'

    ')'  shift, and go to state 712


state 612

  289 abstract_declarator: ptr_operator abstract_declarator_opt .

    $default  reduce using rule 289 (abstract_declarator)


state 613

  291 direct_abstract_declarator: direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  292                           | direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' cv_qualifier_seq
  293                           | direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' exception_specification
  294                           | direct_abstract_declarator_opt '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 323
    COLONCOLON      shift, and go to state 113
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    $default  reduce using rule 300 (parameter_declaration_clause)

    typedef_name                  go to state 47
    namespace_name                go to state 48
    original_namespace_name       go to state 49
    class_name                    go to state 50
    enum_name                     go to state 51
    template_name                 go to state 52
    nested_name_specifier         go to state 154
    decl_specifier                go to state 63
    decl_specifier_seq            go to state 324
    storage_class_specifier       go to state 65
    function_specifier            go to state 66
    type_specifier                go to state 67
    simple_type_specifier         go to state 68
    type_name                     go to state 69
    elaborated_type_specifier     go to state 70
    enum_specifier                go to state 71
    cv_qualifier                  go to state 85
    parameter_declaration_clause  go to state 713
    parameter_declaration_list    go to state 326
    parameter_declaration         go to state 327
    class_specifier               go to state 88
    class_head                    go to state 89
    class_key                     go to state 90
    template_id                   go to state 94


state 614

  295 direct_abstract_declarator: direct_abstract_declarator_opt '[' . constant_expression_opt ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    $default  reduce using rule 475 (constant_expression_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 330
    conditional_expression     go to state 331
    constant_expression        go to state 332
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    constant_expression_opt    go to state 714


state 615

  433 template_argument_list: template_argument_list ',' template_argument .

    $default  reduce using rule 433 (template_argument_list)


state 616

  314 initializer: '(' expression_list ')' .

    $default  reduce using rule 314 (initializer)


state 617

   56 expression_list: expression_list ',' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 715
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 618

  317 initializer_clause: '{' '}' .

    $default  reduce using rule 317 (initializer_clause)


state 619

  318 initializer_list: initializer_clause .

    $default  reduce using rule 318 (initializer_list)


state 620

  316 initializer_clause: '{' initializer_list . COMMA_opt '}'
  319 initializer_list: initializer_list . ',' initializer_clause

    ','  shift, and go to state 716

    $default  reduce using rule 485 (COMMA_opt)

    COMMA_opt  go to state 717


state 621

  442 handler: CATCH . '(' exception_declaration ')' compound_statement

    '('  shift, and go to state 718


state 622

  440 function_try_block: TRY ctor_initializer_opt function_body handler_seq .

    $default  reduce using rule 440 (function_try_block)


state 623

  441 handler_seq: handler . handler_seq_opt

    CATCH  shift, and go to state 621

    $default  reduce using rule 495 (handler_seq_opt)

    handler_seq      go to state 719
    handler          go to state 623
    handler_seq_opt  go to state 720


state 624

  372 mem_initializer_id: COLONCOLON nested_name_specifier class_name .

    $default  reduce using rule 372 (mem_initializer_id)


state 625

  370 mem_initializer_list: mem_initializer ',' mem_initializer_list .

    $default  reduce using rule 370 (mem_initializer_list)


state 626

  371 mem_initializer: mem_initializer_id '(' expression_list_opt . ')'

    ')'  shift, and go to state 721


state 627

  163 jump_statement: BREAK ';' .

    $default  reduce using rule 163 (jump_statement)


state 628

  147 labeled_statement: CASE constant_expression . ':' statement

    ':'  shift, and go to state 722


state 629

  164 jump_statement: CONTINUE ';' .

    $default  reduce using rule 164 (jump_statement)


state 630

  148 labeled_statement: DEFAULT ':' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 246
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 475
    CASE              shift, and go to state 476
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 249
    CONTINUE          shift, and go to state 477
    DEFAULT           shift, and go to state 478
    DELETE            shift, and go to state 250
    DO                shift, and go to state 479
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 251
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 252
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 480
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 481
    IF                shift, and go to state 482
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 483
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 254
    RETURN            shift, and go to state 484
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 255
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 256
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 485
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TRY               shift, and go to state 486
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 260
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 487
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267
    '{'               shift, and go to state 320

    $default  reduce using rule 465 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 488
    literal                     go to state 269
    integer_literal             go to state 270
    character_literal           go to state 271
    floating_literal            go to state 272
    string_literal              go to state 273
    boolean_literal             go to state 274
    primary_expression          go to state 275
    id_expression               go to state 276
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 277
    postfix_expression          go to state 278
    unary_expression            go to state 279
    unary_operator              go to state 280
    new_expression              go to state 281
    delete_expression           go to state 282
    cast_expression             go to state 283
    pm_expression               go to state 284
    multiplicative_expression   go to state 285
    additive_expression         go to state 286
    shift_expression            go to state 287
    relational_expression       go to state 288
    equality_expression         go to state 289
    and_expression              go to state 290
    exclusive_or_expression     go to state 291
    inclusive_or_expression     go to state 292
    logical_and_expression      go to state 293
    logical_or_expression       go to state 294
    conditional_expression      go to state 295
    assignment_expression       go to state 408
    expression                  go to state 489
    statement                   go to state 723
    labeled_statement           go to state 491
    expression_statement        go to state 492
    compound_statement          go to state 493
    selection_statement         go to state 495
    iteration_statement         go to state 496
    jump_statement              go to state 497
    declaration_statement       go to state 498
    block_declaration           go to state 499
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 500
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 501
    throw_expression            go to state 301
    expression_opt              go to state 502


state 631

  159 iteration_statement: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 724


state 632

  160 iteration_statement: FOR '(' . for_init_statement condition_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 246
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 251
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 252
    FLOAT             shift, and go to state 19
    FRIEND            shift, and go to state 20
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 254
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 255
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 256
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 260
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    $default  reduce using rule 465 (expression_opt)

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 277
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 408
    expression                 go to state 489
    expression_statement       go to state 725
    for_init_statement         go to state 726
    simple_declaration         go to state 727
    decl_specifier             go to state 63
    decl_specifier_seq         go to state 500
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301
    expression_opt             go to state 502


state 633

  166 jump_statement: GOTO identifier . ';'

    ';'  shift, and go to state 728


state 634

  153 selection_statement: IF '(' . condition ')' statement
  154                    | IF '(' . condition ')' statement ELSE statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 246
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 251
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 252
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 277
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 408
    expression                 go to state 729
    condition                  go to state 730
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 731
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 635

  243 namespace_alias_definition: NAMESPACE identifier . '=' qualified_namespace_specifier ';'

    '='  shift, and go to state 215


state 636

  165 jump_statement: RETURN expression_opt . ';'

    ';'  shift, and go to state 732


state 637

  155 selection_statement: SWITCH '(' . condition ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 246
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 251
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 252
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 277
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 408
    expression                 go to state 729
    condition                  go to state 733
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 731
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 638

  439 try_block: TRY compound_statement . handler_seq

    CATCH  shift, and go to state 621

    handler_seq  go to state 734
    handler      go to state 623


state 639

  158 iteration_statement: WHILE '(' . condition ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 246
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 251
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 252
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 277
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 408
    expression                 go to state 729
    condition                  go to state 735
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 731
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 640

  146 labeled_statement: identifier ':' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 246
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 475
    CASE              shift, and go to state 476
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 249
    CONTINUE          shift, and go to state 477
    DEFAULT           shift, and go to state 478
    DELETE            shift, and go to state 250
    DO                shift, and go to state 479
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 251
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 252
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 480
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 481
    IF                shift, and go to state 482
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 483
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 254
    RETURN            shift, and go to state 484
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 255
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 256
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 485
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TRY               shift, and go to state 486
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 260
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 487
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267
    '{'               shift, and go to state 320

    $default  reduce using rule 465 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 488
    literal                     go to state 269
    integer_literal             go to state 270
    character_literal           go to state 271
    floating_literal            go to state 272
    string_literal              go to state 273
    boolean_literal             go to state 274
    primary_expression          go to state 275
    id_expression               go to state 276
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 277
    postfix_expression          go to state 278
    unary_expression            go to state 279
    unary_operator              go to state 280
    new_expression              go to state 281
    delete_expression           go to state 282
    cast_expression             go to state 283
    pm_expression               go to state 284
    multiplicative_expression   go to state 285
    additive_expression         go to state 286
    shift_expression            go to state 287
    relational_expression       go to state 288
    equality_expression         go to state 289
    and_expression              go to state 290
    exclusive_or_expression     go to state 291
    inclusive_or_expression     go to state 292
    logical_and_expression      go to state 293
    logical_or_expression       go to state 294
    conditional_expression      go to state 295
    assignment_expression       go to state 408
    expression                  go to state 489
    statement                   go to state 736
    labeled_statement           go to state 491
    expression_statement        go to state 492
    compound_statement          go to state 493
    selection_statement         go to state 495
    iteration_statement         go to state 496
    jump_statement              go to state 497
    declaration_statement       go to state 498
    block_declaration           go to state 499
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 500
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 501
    throw_expression            go to state 301
    expression_opt              go to state 502


state 641

  152 statement_seq: statement_seq statement .

    $default  reduce using rule 152 (statement_seq)


state 642

  149 expression_statement: expression_opt ';' .

    $default  reduce using rule 149 (expression_statement)


state 643

  150 compound_statement: '{' statement_seq_opt '}' .

    $default  reduce using rule 150 (compound_statement)


state 644

  305 parameter_declaration: decl_specifier_seq declarator '=' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 737
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 645

  307 parameter_declaration: decl_specifier_seq abstract_declarator_opt '=' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 738
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 646

  448 exception_specification: THROW . '(' type_id_list_opt ')'

    '('  shift, and go to state 739


state 647

  266 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq . exception_specification
  267                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq .

    THROW  shift, and go to state 646

    $default  reduce using rule 267 (direct_declarator)

    exception_specification  go to state 740


state 648

  268 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' exception_specification .

    $default  reduce using rule 268 (direct_declarator)


state 649

  301 parameter_declaration_clause: parameter_declaration_list ',' ELLIPSIS .

    $default  reduce using rule 301 (parameter_declaration_clause)


state 650

  303 parameter_declaration_list: parameter_declaration_list ',' parameter_declaration .

    $default  reduce using rule 303 (parameter_declaration_list)


state 651

  344 member_declarator: identifier ':' constant_expression .

    $default  reduce using rule 344 (member_declarator)


state 652

  330 member_declaration: decl_specifier_seq member_declarator_list ';' .

    $default  reduce using rule 330 (member_declaration)


state 653

  345 pure_specifier: '=' '0' .

    $default  reduce using rule 345 (pure_specifier)


state 654

  346 constant_initializer: '=' constant_expression .

    $default  reduce using rule 346 (constant_initializer)


state 655

  341 member_declarator: declarator .
  342                  | declarator . pure_specifier
  343                  | declarator . constant_initializer

    '='  shift, and go to state 517

    $default  reduce using rule 341 (member_declarator)

    pure_specifier        go to state 518
    constant_initializer  go to state 519


state 656

  339 member_declarator_list: member_declarator_list ',' member_declarator .

    $default  reduce using rule 339 (member_declarator_list)


state 657

  329 member_specification: access_specifier ':' member_specification_opt .

    $default  reduce using rule 329 (member_specification)


state 658

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier namespace_name COLONCOLON nested_name_specifier
   34                      | class_name . COLONCOLON
  351 base_specifier: COLONCOLON class_name .

    COLONCOLON  shift, and go to state 174

    $default  reduce using rule 351 (base_specifier)


state 659

  350 base_specifier: COLONCOLON nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 741
    template_name  go to state 52
    template_id    go to state 94


state 660

  356 base_specifier: VIRTUAL COLONCOLON . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 453 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 453 (nested_name_specifier_opt)]

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    nested_name_specifier      go to state 217
    template_id                go to state 94
    nested_name_specifier_opt  go to state 742


state 661

  354 base_specifier: VIRTUAL access_specifier . COLONCOLON nested_name_specifier_opt class_name
  355               | VIRTUAL access_specifier . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 743

    CLASS_NAME     [reduce using rule 453 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 453 (nested_name_specifier_opt)]

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    nested_name_specifier      go to state 217
    template_id                go to state 94
    nested_name_specifier_opt  go to state 744


state 662

  357 base_specifier: VIRTUAL nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 745
    template_name  go to state 52
    template_id    go to state 94


state 663

  352 base_specifier: nested_name_specifier class_name .

    $default  reduce using rule 352 (base_specifier)


state 664

  349 base_specifier_list: base_specifier_list ',' . base_specifier

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 528
    PRIVATE         shift, and go to state 334
    PROTECTED       shift, and go to state 335
    PUBLIC          shift, and go to state 336
    VIRTUAL         shift, and go to state 529

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 530
    template_name            go to state 52
    nested_name_specifier    go to state 531
    base_specifier           go to state 746
    access_specifier         go to state 534
    template_id              go to state 94


state 665

  360 base_specifier: access_specifier COLONCOLON . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 453 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 453 (nested_name_specifier_opt)]

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    nested_name_specifier      go to state 217
    template_id                go to state 94
    nested_name_specifier_opt  go to state 747


state 666

  358 base_specifier: access_specifier VIRTUAL . COLONCOLON nested_name_specifier_opt class_name
  359               | access_specifier VIRTUAL . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 748

    CLASS_NAME     [reduce using rule 453 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 453 (nested_name_specifier_opt)]

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    nested_name_specifier      go to state 217
    template_id                go to state 94
    nested_name_specifier_opt  go to state 749


state 667

  361 base_specifier: access_specifier nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 750
    template_name  go to state 52
    template_id    go to state 94


state 668

  425 type_parameter: CLASS identifier .
  426               | CLASS identifier . '=' type_id

    '='  shift, and go to state 751

    $default  reduce using rule 425 (type_parameter)


state 669

  429 type_parameter: TEMPLATE '<' . template_parameter_list '>' CLASS identifier
  430               | TEMPLATE '<' . template_parameter_list '>' CLASS identifier '=' template_name

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 536
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 537
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 538
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    decl_specifier             go to state 63
    decl_specifier_seq         go to state 324
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    parameter_declaration      go to state 539
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_parameter_list    go to state 752
    template_parameter         go to state 541
    type_parameter             go to state 542
    template_id                go to state 94


state 670

  427 type_parameter: TYPENAME identifier .
  428               | TYPENAME identifier . '=' type_id

    '='  shift, and go to state 753

    $default  reduce using rule 427 (type_parameter)


state 671

  420 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' . declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 493 (EXPORT_opt)]

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration                     go to state 754
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    EXPORT_opt                      go to state 98


state 672

  422 template_parameter_list: template_parameter_list ',' . template_parameter

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 536
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 537
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 538
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    decl_specifier             go to state 63
    decl_specifier_seq         go to state 324
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    parameter_declaration      go to state 539
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_parameter         go to state 755
    type_parameter             go to state 542
    template_id                go to state 94


state 673

  231 enumerator_list: enumerator_list ',' enumerator_definition .

    $default  reduce using rule 231 (enumerator_list)


state 674

  233 enumerator_definition: enumerator '=' constant_expression .

    $default  reduce using rule 233 (enumerator_definition)


state 675

  244 qualified_namespace_specifier: COLONCOLON nested_name_specifier namespace_name .

    $default  reduce using rule 244 (qualified_namespace_specifier)


state 676

  228 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list . '>'
  433 template_argument_list: template_argument_list . ',' template_argument

    '>'  shift, and go to state 756
    ','  shift, and go to state 460


state 677

  253 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier namespace_name ';' .

    $default  reduce using rule 253 (using_directive)


state 678

  248 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 248 (using_declaration)


state 679

   33 nested_name_specifier: class_name COLONCOLON nested_name_specifier namespace_name COLONCOLON nested_name_specifier .

    $default  reduce using rule 33 (nested_name_specifier)


state 680

   85 delete_expression: COLONCOLON DELETE '[' ']' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 269
    integer_literal          go to state 270
    character_literal        go to state 271
    floating_literal         go to state 272
    string_literal           go to state 273
    boolean_literal          go to state 274
    primary_expression       go to state 275
    id_expression            go to state 276
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 329
    postfix_expression       go to state 278
    unary_expression         go to state 279
    unary_operator           go to state 280
    new_expression           go to state 281
    delete_expression        go to state 282
    cast_expression          go to state 757
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 681

   74 new_expression: COLONCOLON NEW new_placement_opt '(' . type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 758
    type_specifier_seq         go to state 298
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 682

   72 new_expression: COLONCOLON NEW new_placement_opt new_type_id . new_initializer_opt

    '('  shift, and go to state 688

    $default  reduce using rule 461 (new_initializer_opt)

    new_initializer      go to state 689
    new_initializer_opt  go to state 759


state 683

   52 postfix_expression: CONST_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 760


state 684

   84 delete_expression: DELETE '[' ']' cast_expression .

    $default  reduce using rule 84 (delete_expression)


state 685

   49 postfix_expression: DYNAMIC_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 761


state 686

   75 new_placement: '(' expression_list ')' .

    $default  reduce using rule 75 (new_placement)


state 687

   73 new_expression: NEW new_placement_opt '(' type_id . ')' new_initializer_opt

    ')'  shift, and go to state 762


state 688

   81 new_initializer: '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    $default  reduce using rule 455 (expression_list_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    expression_list            go to state 583
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 464
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301
    expression_list_opt        go to state 763


state 689

  462 new_initializer_opt: new_initializer .

    $default  reduce using rule 462 (new_initializer_opt)


state 690

   71 new_expression: NEW new_placement_opt new_type_id new_initializer_opt .

    $default  reduce using rule 71 (new_expression)


state 691

   79 direct_new_declarator: '[' . expression ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 408
    expression                 go to state 764
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 692

  464 new_declarator_opt: new_declarator .

    $default  reduce using rule 464 (new_declarator_opt)


state 693

   78 new_declarator: direct_new_declarator .
   80 direct_new_declarator: direct_new_declarator . '[' constant_expression ']'

    '['  shift, and go to state 765

    $default  reduce using rule 78 (new_declarator)


state 694

   77 new_declarator: ptr_operator . new_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 224
    '['             shift, and go to state 691
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '*'       [reduce using rule 463 (new_declarator_opt)]
    '&'       [reduce using rule 463 (new_declarator_opt)]
    $default  reduce using rule 463 (new_declarator_opt)

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 225
    new_declarator           go to state 692
    direct_new_declarator    go to state 693
    ptr_operator             go to state 694
    template_id              go to state 94
    new_declarator_opt       go to state 766


state 695

   76 new_type_id: type_specifier_seq new_declarator_opt .

    $default  reduce using rule 76 (new_type_id)


state 696

   51 postfix_expression: REINTERPRET_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 767


state 697

   64 unary_expression: SIZEOF '(' type_id ')' .

    $default  reduce using rule 64 (unary_expression)


state 698

   50 postfix_expression: STATIC_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 768


state 699

   53 postfix_expression: TYPEID '(' expression ')' .

    $default  reduce using rule 53 (postfix_expression)


state 700

   54 postfix_expression: TYPEID '(' type_id ')' .

    $default  reduce using rule 54 (postfix_expression)


state 701

  136 expression: expression ',' assignment_expression .

    $default  reduce using rule 136 (expression)


state 702

   87 cast_expression: '(' type_id ')' cast_expression .

    $default  reduce using rule 87 (cast_expression)


state 703

   45 postfix_expression: postfix_expression ARROW COLONCOLON id_expression .

    $default  reduce using rule 45 (postfix_expression)


state 704

   43 postfix_expression: postfix_expression ARROW TEMPLATE COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 769
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 329
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 705

   44 postfix_expression: postfix_expression ARROW TEMPLATE id_expression .

    $default  reduce using rule 44 (postfix_expression)


state 706

   38 postfix_expression: postfix_expression '(' expression_list_opt ')' .

    $default  reduce using rule 38 (postfix_expression)


state 707

   37 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 37 (postfix_expression)


state 708

   41 postfix_expression: postfix_expression '.' COLONCOLON id_expression .

    $default  reduce using rule 41 (postfix_expression)


state 709

   39 postfix_expression: postfix_expression '.' TEMPLATE COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 770
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 329
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 710

   40 postfix_expression: postfix_expression '.' TEMPLATE id_expression .

    $default  reduce using rule 40 (postfix_expression)


state 711

  120 conditional_expression: logical_or_expression '?' expression ':' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 771
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 712

  296 direct_abstract_declarator: '(' abstract_declarator ')' .

    $default  reduce using rule 296 (direct_abstract_declarator)


state 713

  291 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' cv_qualifier_seq exception_specification
  292                           | direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' cv_qualifier_seq
  293                           | direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' exception_specification
  294                           | direct_abstract_declarator_opt '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 772


state 714

  295 direct_abstract_declarator: direct_abstract_declarator_opt '[' constant_expression_opt . ']'

    ']'  shift, and go to state 773


state 715

   56 expression_list: expression_list ',' assignment_expression .

    $default  reduce using rule 56 (expression_list)


state 716

  319 initializer_list: initializer_list ',' . initializer_clause
  486 COMMA_opt: ',' .

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267
    '{'               shift, and go to state 465

    $default  reduce using rule 486 (COMMA_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 466
    initializer_clause         go to state 774
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 717

  316 initializer_clause: '{' initializer_list COMMA_opt . '}'

    '}'  shift, and go to state 775


state 718

  442 handler: CATCH '(' . exception_declaration ')' compound_statement

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 776
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 777
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94
    exception_declaration      go to state 778


state 719

  496 handler_seq_opt: handler_seq .

    $default  reduce using rule 496 (handler_seq_opt)


state 720

  441 handler_seq: handler handler_seq_opt .

    $default  reduce using rule 441 (handler_seq)


state 721

  371 mem_initializer: mem_initializer_id '(' expression_list_opt ')' .

    $default  reduce using rule 371 (mem_initializer)


state 722

  147 labeled_statement: CASE constant_expression ':' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 246
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 475
    CASE              shift, and go to state 476
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 249
    CONTINUE          shift, and go to state 477
    DEFAULT           shift, and go to state 478
    DELETE            shift, and go to state 250
    DO                shift, and go to state 479
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 251
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 252
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 480
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 481
    IF                shift, and go to state 482
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 483
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 254
    RETURN            shift, and go to state 484
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 255
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 256
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 485
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TRY               shift, and go to state 486
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 260
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 487
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267
    '{'               shift, and go to state 320

    $default  reduce using rule 465 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 488
    literal                     go to state 269
    integer_literal             go to state 270
    character_literal           go to state 271
    floating_literal            go to state 272
    string_literal              go to state 273
    boolean_literal             go to state 274
    primary_expression          go to state 275
    id_expression               go to state 276
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 277
    postfix_expression          go to state 278
    unary_expression            go to state 279
    unary_operator              go to state 280
    new_expression              go to state 281
    delete_expression           go to state 282
    cast_expression             go to state 283
    pm_expression               go to state 284
    multiplicative_expression   go to state 285
    additive_expression         go to state 286
    shift_expression            go to state 287
    relational_expression       go to state 288
    equality_expression         go to state 289
    and_expression              go to state 290
    exclusive_or_expression     go to state 291
    inclusive_or_expression     go to state 292
    logical_and_expression      go to state 293
    logical_or_expression       go to state 294
    conditional_expression      go to state 295
    assignment_expression       go to state 408
    expression                  go to state 489
    statement                   go to state 779
    labeled_statement           go to state 491
    expression_statement        go to state 492
    compound_statement          go to state 493
    selection_statement         go to state 495
    iteration_statement         go to state 496
    jump_statement              go to state 497
    declaration_statement       go to state 498
    block_declaration           go to state 499
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 500
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 501
    throw_expression            go to state 301
    expression_opt              go to state 502


state 723

  148 labeled_statement: DEFAULT ':' statement .

    $default  reduce using rule 148 (labeled_statement)


state 724

  159 iteration_statement: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 780


state 725

  161 for_init_statement: expression_statement .

    $default  reduce using rule 161 (for_init_statement)


state 726

  160 iteration_statement: FOR '(' for_init_statement . condition_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 246
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 251
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 252
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    $default  reduce using rule 469 (condition_opt)

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 277
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 408
    expression                 go to state 729
    condition                  go to state 781
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 731
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301
    condition_opt              go to state 782


state 727

  162 for_init_statement: simple_declaration .

    $default  reduce using rule 162 (for_init_statement)


state 728

  166 jump_statement: GOTO identifier ';' .

    $default  reduce using rule 166 (jump_statement)


state 729

  136 expression: expression . ',' assignment_expression
  156 condition: expression .

    ','  shift, and go to state 578

    $default  reduce using rule 156 (condition)


state 730

  153 selection_statement: IF '(' condition . ')' statement
  154                    | IF '(' condition . ')' statement ELSE statement

    ')'  shift, and go to state 783


state 731

  157 condition: type_specifier_seq . declarator '=' assignment_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 167
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 55
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 168
    declarator               go to state 784
    direct_declarator        go to state 83
    ptr_operator             go to state 84
    declarator_id            go to state 86
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 732

  165 jump_statement: RETURN expression_opt ';' .

    $default  reduce using rule 165 (jump_statement)


state 733

  155 selection_statement: SWITCH '(' condition . ')' statement

    ')'  shift, and go to state 785


state 734

  439 try_block: TRY compound_statement handler_seq .

    $default  reduce using rule 439 (try_block)


state 735

  158 iteration_statement: WHILE '(' condition . ')' statement

    ')'  shift, and go to state 786


state 736

  146 labeled_statement: identifier ':' statement .

    $default  reduce using rule 146 (labeled_statement)


state 737

  305 parameter_declaration: decl_specifier_seq declarator '=' assignment_expression .

    $default  reduce using rule 305 (parameter_declaration)


state 738

  307 parameter_declaration: decl_specifier_seq abstract_declarator_opt '=' assignment_expression .

    $default  reduce using rule 307 (parameter_declaration)


state 739

  448 exception_specification: THROW '(' . type_id_list_opt ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    $default  reduce using rule 499 (type_id_list_opt)

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 787
    type_specifier_seq         go to state 298
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94
    type_id_list               go to state 788
    type_id_list_opt           go to state 789


state 740

  266 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification .

    $default  reduce using rule 266 (direct_declarator)


state 741

  350 base_specifier: COLONCOLON nested_name_specifier class_name .

    $default  reduce using rule 350 (base_specifier)


state 742

  356 base_specifier: VIRTUAL COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 790
    template_name  go to state 52
    template_id    go to state 94


state 743

  354 base_specifier: VIRTUAL access_specifier COLONCOLON . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 453 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 453 (nested_name_specifier_opt)]

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    nested_name_specifier      go to state 217
    template_id                go to state 94
    nested_name_specifier_opt  go to state 791


state 744

  355 base_specifier: VIRTUAL access_specifier nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 792
    template_name  go to state 52
    template_id    go to state 94


state 745

  357 base_specifier: VIRTUAL nested_name_specifier_opt class_name .

    $default  reduce using rule 357 (base_specifier)


state 746

  349 base_specifier_list: base_specifier_list ',' base_specifier .

    $default  reduce using rule 349 (base_specifier_list)


state 747

  360 base_specifier: access_specifier COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 793
    template_name  go to state 52
    template_id    go to state 94


state 748

  358 base_specifier: access_specifier VIRTUAL COLONCOLON . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 453 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 453 (nested_name_specifier_opt)]

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    nested_name_specifier      go to state 217
    template_id                go to state 94
    nested_name_specifier_opt  go to state 794


state 749

  359 base_specifier: access_specifier VIRTUAL nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 795
    template_name  go to state 52
    template_id    go to state 94


state 750

  361 base_specifier: access_specifier nested_name_specifier_opt class_name .

    $default  reduce using rule 361 (base_specifier)


state 751

  426 type_parameter: CLASS identifier '=' . type_id

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 796
    type_specifier_seq         go to state 298
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 752

  422 template_parameter_list: template_parameter_list . ',' template_parameter
  429 type_parameter: TEMPLATE '<' template_parameter_list . '>' CLASS identifier
  430               | TEMPLATE '<' template_parameter_list . '>' CLASS identifier '=' template_name

    '>'  shift, and go to state 797
    ','  shift, and go to state 672


state 753

  428 type_parameter: TYPENAME identifier '=' . type_id

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 798
    type_specifier_seq         go to state 298
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 754

  420 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' declaration .

    $default  reduce using rule 420 (template_declaration)


state 755

  422 template_parameter_list: template_parameter_list ',' template_parameter .

    $default  reduce using rule 422 (template_parameter_list)


state 756

  228 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>' .

    $default  reduce using rule 228 (elaborated_type_specifier)


state 757

   85 delete_expression: COLONCOLON DELETE '[' ']' cast_expression .

    $default  reduce using rule 85 (delete_expression)


state 758

   74 new_expression: COLONCOLON NEW new_placement_opt '(' type_id . ')' new_initializer_opt

    ')'  shift, and go to state 799


state 759

   72 new_expression: COLONCOLON NEW new_placement_opt new_type_id new_initializer_opt .

    $default  reduce using rule 72 (new_expression)


state 760

   52 postfix_expression: CONST_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 408
    expression                 go to state 800
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 761

   49 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 408
    expression                 go to state 801
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 762

   73 new_expression: NEW new_placement_opt '(' type_id ')' . new_initializer_opt

    '('  shift, and go to state 688

    $default  reduce using rule 461 (new_initializer_opt)

    new_initializer      go to state 689
    new_initializer_opt  go to state 802


state 763

   81 new_initializer: '(' expression_list_opt . ')'

    ')'  shift, and go to state 803


state 764

   79 direct_new_declarator: '[' expression . ']'
  136 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 804
    ','  shift, and go to state 578


state 765

   80 direct_new_declarator: direct_new_declarator '[' . constant_expression ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 330
    conditional_expression     go to state 331
    constant_expression        go to state 805
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 766

   77 new_declarator: ptr_operator new_declarator_opt .

    $default  reduce using rule 77 (new_declarator)


state 767

   51 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 408
    expression                 go to state 806
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 768

   50 postfix_expression: STATIC_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 408
    expression                 go to state 807
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 769

   43 postfix_expression: postfix_expression ARROW TEMPLATE COLONCOLON id_expression .

    $default  reduce using rule 43 (postfix_expression)


state 770

   39 postfix_expression: postfix_expression '.' TEMPLATE COLONCOLON id_expression .

    $default  reduce using rule 39 (postfix_expression)


state 771

  120 conditional_expression: logical_or_expression '?' expression ':' assignment_expression .

    $default  reduce using rule 120 (conditional_expression)


state 772

  291 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . cv_qualifier_seq exception_specification
  292                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . cv_qualifier_seq
  293                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . exception_specification
  294                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' .

    CONST     shift, and go to state 13
    THROW     shift, and go to state 646
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 294 (direct_abstract_declarator)

    cv_qualifier_seq         go to state 808
    cv_qualifier             go to state 172
    exception_specification  go to state 809


state 773

  295 direct_abstract_declarator: direct_abstract_declarator_opt '[' constant_expression_opt ']' .

    $default  reduce using rule 295 (direct_abstract_declarator)


state 774

  319 initializer_list: initializer_list ',' initializer_clause .

    $default  reduce using rule 319 (initializer_list)


state 775

  316 initializer_clause: '{' initializer_list COMMA_opt '}' .

    $default  reduce using rule 316 (initializer_clause)


state 776

  446 exception_declaration: ELLIPSIS .

    $default  reduce using rule 446 (exception_declaration)


state 777

  443 exception_declaration: type_specifier_seq . declarator
  444                      | type_specifier_seq . abstract_declarator
  445                      | type_specifier_seq .

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 167
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 504
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '('       [reduce using rule 481 (direct_abstract_declarator_opt)]
    '['       reduce using rule 481 (direct_abstract_declarator_opt)
    $default  reduce using rule 445 (exception_declaration)

    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 105
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 168
    declarator                      go to state 810
    direct_declarator               go to state 83
    ptr_operator                    go to state 506
    declarator_id                   go to state 86
    abstract_declarator             go to state 811
    direct_abstract_declarator      go to state 456
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_id                     go to state 94
    direct_abstract_declarator_opt  go to state 458


state 778

  442 handler: CATCH '(' exception_declaration . ')' compound_statement

    ')'  shift, and go to state 812


state 779

  147 labeled_statement: CASE constant_expression ':' statement .

    $default  reduce using rule 147 (labeled_statement)


state 780

  159 iteration_statement: DO statement WHILE '(' . expression ')' ';'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 408
    expression                 go to state 813
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 781

  470 condition_opt: condition .

    $default  reduce using rule 470 (condition_opt)


state 782

  160 iteration_statement: FOR '(' for_init_statement condition_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 814


state 783

  153 selection_statement: IF '(' condition ')' . statement
  154                    | IF '(' condition ')' . statement ELSE statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 246
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 475
    CASE              shift, and go to state 476
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 249
    CONTINUE          shift, and go to state 477
    DEFAULT           shift, and go to state 478
    DELETE            shift, and go to state 250
    DO                shift, and go to state 479
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 251
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 252
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 480
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 481
    IF                shift, and go to state 482
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 483
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 254
    RETURN            shift, and go to state 484
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 255
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 256
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 485
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TRY               shift, and go to state 486
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 260
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 487
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267
    '{'               shift, and go to state 320

    $default  reduce using rule 465 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 488
    literal                     go to state 269
    integer_literal             go to state 270
    character_literal           go to state 271
    floating_literal            go to state 272
    string_literal              go to state 273
    boolean_literal             go to state 274
    primary_expression          go to state 275
    id_expression               go to state 276
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 277
    postfix_expression          go to state 278
    unary_expression            go to state 279
    unary_operator              go to state 280
    new_expression              go to state 281
    delete_expression           go to state 282
    cast_expression             go to state 283
    pm_expression               go to state 284
    multiplicative_expression   go to state 285
    additive_expression         go to state 286
    shift_expression            go to state 287
    relational_expression       go to state 288
    equality_expression         go to state 289
    and_expression              go to state 290
    exclusive_or_expression     go to state 291
    inclusive_or_expression     go to state 292
    logical_and_expression      go to state 293
    logical_or_expression       go to state 294
    conditional_expression      go to state 295
    assignment_expression       go to state 408
    expression                  go to state 489
    statement                   go to state 815
    labeled_statement           go to state 491
    expression_statement        go to state 492
    compound_statement          go to state 493
    selection_statement         go to state 495
    iteration_statement         go to state 496
    jump_statement              go to state 497
    declaration_statement       go to state 498
    block_declaration           go to state 499
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 500
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 501
    throw_expression            go to state 301
    expression_opt              go to state 502


state 784

  157 condition: type_specifier_seq declarator . '=' assignment_expression

    '='  shift, and go to state 816


state 785

  155 selection_statement: SWITCH '(' condition ')' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 246
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 475
    CASE              shift, and go to state 476
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 249
    CONTINUE          shift, and go to state 477
    DEFAULT           shift, and go to state 478
    DELETE            shift, and go to state 250
    DO                shift, and go to state 479
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 251
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 252
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 480
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 481
    IF                shift, and go to state 482
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 483
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 254
    RETURN            shift, and go to state 484
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 255
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 256
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 485
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TRY               shift, and go to state 486
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 260
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 487
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267
    '{'               shift, and go to state 320

    $default  reduce using rule 465 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 488
    literal                     go to state 269
    integer_literal             go to state 270
    character_literal           go to state 271
    floating_literal            go to state 272
    string_literal              go to state 273
    boolean_literal             go to state 274
    primary_expression          go to state 275
    id_expression               go to state 276
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 277
    postfix_expression          go to state 278
    unary_expression            go to state 279
    unary_operator              go to state 280
    new_expression              go to state 281
    delete_expression           go to state 282
    cast_expression             go to state 283
    pm_expression               go to state 284
    multiplicative_expression   go to state 285
    additive_expression         go to state 286
    shift_expression            go to state 287
    relational_expression       go to state 288
    equality_expression         go to state 289
    and_expression              go to state 290
    exclusive_or_expression     go to state 291
    inclusive_or_expression     go to state 292
    logical_and_expression      go to state 293
    logical_or_expression       go to state 294
    conditional_expression      go to state 295
    assignment_expression       go to state 408
    expression                  go to state 489
    statement                   go to state 817
    labeled_statement           go to state 491
    expression_statement        go to state 492
    compound_statement          go to state 493
    selection_statement         go to state 495
    iteration_statement         go to state 496
    jump_statement              go to state 497
    declaration_statement       go to state 498
    block_declaration           go to state 499
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 500
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 501
    throw_expression            go to state 301
    expression_opt              go to state 502


state 786

  158 iteration_statement: WHILE '(' condition ')' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 246
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 475
    CASE              shift, and go to state 476
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 249
    CONTINUE          shift, and go to state 477
    DEFAULT           shift, and go to state 478
    DELETE            shift, and go to state 250
    DO                shift, and go to state 479
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 251
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 252
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 480
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 481
    IF                shift, and go to state 482
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 483
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 254
    RETURN            shift, and go to state 484
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 255
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 256
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 485
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TRY               shift, and go to state 486
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 260
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 487
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267
    '{'               shift, and go to state 320

    $default  reduce using rule 465 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 488
    literal                     go to state 269
    integer_literal             go to state 270
    character_literal           go to state 271
    floating_literal            go to state 272
    string_literal              go to state 273
    boolean_literal             go to state 274
    primary_expression          go to state 275
    id_expression               go to state 276
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 277
    postfix_expression          go to state 278
    unary_expression            go to state 279
    unary_operator              go to state 280
    new_expression              go to state 281
    delete_expression           go to state 282
    cast_expression             go to state 283
    pm_expression               go to state 284
    multiplicative_expression   go to state 285
    additive_expression         go to state 286
    shift_expression            go to state 287
    relational_expression       go to state 288
    equality_expression         go to state 289
    and_expression              go to state 290
    exclusive_or_expression     go to state 291
    inclusive_or_expression     go to state 292
    logical_and_expression      go to state 293
    logical_or_expression       go to state 294
    conditional_expression      go to state 295
    assignment_expression       go to state 408
    expression                  go to state 489
    statement                   go to state 818
    labeled_statement           go to state 491
    expression_statement        go to state 492
    compound_statement          go to state 493
    selection_statement         go to state 495
    iteration_statement         go to state 496
    jump_statement              go to state 497
    declaration_statement       go to state 498
    block_declaration           go to state 499
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 500
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 501
    throw_expression            go to state 301
    expression_opt              go to state 502


state 787

  449 type_id_list: type_id .

    $default  reduce using rule 449 (type_id_list)


state 788

  450 type_id_list: type_id_list . ',' type_id
  500 type_id_list_opt: type_id_list .

    ','  shift, and go to state 819

    $default  reduce using rule 500 (type_id_list_opt)


state 789

  448 exception_specification: THROW '(' type_id_list_opt . ')'

    ')'  shift, and go to state 820


state 790

  356 base_specifier: VIRTUAL COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 356 (base_specifier)


state 791

  354 base_specifier: VIRTUAL access_specifier COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 821
    template_name  go to state 52
    template_id    go to state 94


state 792

  355 base_specifier: VIRTUAL access_specifier nested_name_specifier_opt class_name .

    $default  reduce using rule 355 (base_specifier)


state 793

  360 base_specifier: access_specifier COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 360 (base_specifier)


state 794

  358 base_specifier: access_specifier VIRTUAL COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 822
    template_name  go to state 52
    template_id    go to state 94


state 795

  359 base_specifier: access_specifier VIRTUAL nested_name_specifier_opt class_name .

    $default  reduce using rule 359 (base_specifier)


state 796

  426 type_parameter: CLASS identifier '=' type_id .

    $default  reduce using rule 426 (type_parameter)


state 797

  429 type_parameter: TEMPLATE '<' template_parameter_list '>' . CLASS identifier
  430               | TEMPLATE '<' template_parameter_list '>' . CLASS identifier '=' template_name

    CLASS  shift, and go to state 823


state 798

  428 type_parameter: TYPENAME identifier '=' type_id .

    $default  reduce using rule 428 (type_parameter)


state 799

   74 new_expression: COLONCOLON NEW new_placement_opt '(' type_id ')' . new_initializer_opt

    '('  shift, and go to state 688

    $default  reduce using rule 461 (new_initializer_opt)

    new_initializer      go to state 689
    new_initializer_opt  go to state 824


state 800

   52 postfix_expression: CONST_CAST '<' type_id '>' '(' expression . ')'
  136 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 825
    ','  shift, and go to state 578


state 801

   49 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' expression . ')'
  136 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 826
    ','  shift, and go to state 578


state 802

   73 new_expression: NEW new_placement_opt '(' type_id ')' new_initializer_opt .

    $default  reduce using rule 73 (new_expression)


state 803

   81 new_initializer: '(' expression_list_opt ')' .

    $default  reduce using rule 81 (new_initializer)


state 804

   79 direct_new_declarator: '[' expression ']' .

    $default  reduce using rule 79 (direct_new_declarator)


state 805

   80 direct_new_declarator: direct_new_declarator '[' constant_expression . ']'

    ']'  shift, and go to state 827


state 806

   51 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' expression . ')'
  136 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 828
    ','  shift, and go to state 578


state 807

   50 postfix_expression: STATIC_CAST '<' type_id '>' '(' expression . ')'
  136 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 829
    ','  shift, and go to state 578


state 808

  291 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq . exception_specification
  292                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq .

    THROW  shift, and go to state 646

    $default  reduce using rule 292 (direct_abstract_declarator)

    exception_specification  go to state 830


state 809

  293 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' exception_specification .

    $default  reduce using rule 293 (direct_abstract_declarator)


state 810

  443 exception_declaration: type_specifier_seq declarator .

    $default  reduce using rule 443 (exception_declaration)


state 811

  444 exception_declaration: type_specifier_seq abstract_declarator .

    $default  reduce using rule 444 (exception_declaration)


state 812

  442 handler: CATCH '(' exception_declaration ')' . compound_statement

    '{'  shift, and go to state 320

    compound_statement  go to state 831


state 813

  136 expression: expression . ',' assignment_expression
  159 iteration_statement: DO statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 832
    ','  shift, and go to state 578


state 814

  160 iteration_statement: FOR '(' for_init_statement condition_opt ';' . expression_opt ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    $default  reduce using rule 465 (expression_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 408
    expression                 go to state 489
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301
    expression_opt             go to state 833


state 815

  153 selection_statement: IF '(' condition ')' statement .
  154                    | IF '(' condition ')' statement . ELSE statement

    ELSE  shift, and go to state 834

    ELSE      [reduce using rule 153 (selection_statement)]
    $default  reduce using rule 153 (selection_statement)


state 816

  157 condition: type_specifier_seq declarator '=' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 328
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    CONST_CAST        shift, and go to state 249
    DELETE            shift, and go to state 250
    DYNAMIC_CAST      shift, and go to state 251
    FALSE             shift, and go to state 252
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 254
    SIZEOF            shift, and go to state 255
    STATIC_CAST       shift, and go to state 256
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TYPEID            shift, and go to state 260
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 269
    integer_literal            go to state 270
    character_literal          go to state 271
    floating_literal           go to state 272
    string_literal             go to state 273
    boolean_literal            go to state 274
    primary_expression         go to state 275
    id_expression              go to state 276
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 329
    postfix_expression         go to state 278
    unary_expression           go to state 279
    unary_operator             go to state 280
    new_expression             go to state 281
    delete_expression          go to state 282
    cast_expression            go to state 283
    pm_expression              go to state 284
    multiplicative_expression  go to state 285
    additive_expression        go to state 286
    shift_expression           go to state 287
    relational_expression      go to state 288
    equality_expression        go to state 289
    and_expression             go to state 290
    exclusive_or_expression    go to state 291
    inclusive_or_expression    go to state 292
    logical_and_expression     go to state 293
    logical_or_expression      go to state 294
    conditional_expression     go to state 295
    assignment_expression      go to state 835
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 301


state 817

  155 selection_statement: SWITCH '(' condition ')' statement .

    $default  reduce using rule 155 (selection_statement)


state 818

  158 iteration_statement: WHILE '(' condition ')' statement .

    $default  reduce using rule 158 (iteration_statement)


state 819

  450 type_id_list: type_id_list ',' . type_id

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 836
    type_specifier_seq         go to state 298
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 820

  448 exception_specification: THROW '(' type_id_list_opt ')' .

    $default  reduce using rule 448 (exception_specification)


state 821

  354 base_specifier: VIRTUAL access_specifier COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 354 (base_specifier)


state 822

  358 base_specifier: access_specifier VIRTUAL COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 358 (base_specifier)


state 823

  429 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS . identifier
  430               | TEMPLATE '<' template_parameter_list '>' CLASS . identifier '=' template_name

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 837


state 824

   74 new_expression: COLONCOLON NEW new_placement_opt '(' type_id ')' new_initializer_opt .

    $default  reduce using rule 74 (new_expression)


state 825

   52 postfix_expression: CONST_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 52 (postfix_expression)


state 826

   49 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 49 (postfix_expression)


state 827

   80 direct_new_declarator: direct_new_declarator '[' constant_expression ']' .

    $default  reduce using rule 80 (direct_new_declarator)


state 828

   51 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 51 (postfix_expression)


state 829

   50 postfix_expression: STATIC_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 50 (postfix_expression)


state 830

  291 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification .

    $default  reduce using rule 291 (direct_abstract_declarator)


state 831

  442 handler: CATCH '(' exception_declaration ')' compound_statement .

    $default  reduce using rule 442 (handler)


state 832

  159 iteration_statement: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 838


state 833

  160 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 839


state 834

  154 selection_statement: IF '(' condition ')' statement ELSE . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 246
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 475
    CASE              shift, and go to state 476
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 249
    CONTINUE          shift, and go to state 477
    DEFAULT           shift, and go to state 478
    DELETE            shift, and go to state 250
    DO                shift, and go to state 479
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 251
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 252
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 480
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 481
    IF                shift, and go to state 482
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 483
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 254
    RETURN            shift, and go to state 484
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 255
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 256
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 485
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TRY               shift, and go to state 486
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 260
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 487
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267
    '{'               shift, and go to state 320

    $default  reduce using rule 465 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 488
    literal                     go to state 269
    integer_literal             go to state 270
    character_literal           go to state 271
    floating_literal            go to state 272
    string_literal              go to state 273
    boolean_literal             go to state 274
    primary_expression          go to state 275
    id_expression               go to state 276
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 277
    postfix_expression          go to state 278
    unary_expression            go to state 279
    unary_operator              go to state 280
    new_expression              go to state 281
    delete_expression           go to state 282
    cast_expression             go to state 283
    pm_expression               go to state 284
    multiplicative_expression   go to state 285
    additive_expression         go to state 286
    shift_expression            go to state 287
    relational_expression       go to state 288
    equality_expression         go to state 289
    and_expression              go to state 290
    exclusive_or_expression     go to state 291
    inclusive_or_expression     go to state 292
    logical_and_expression      go to state 293
    logical_or_expression       go to state 294
    conditional_expression      go to state 295
    assignment_expression       go to state 408
    expression                  go to state 489
    statement                   go to state 840
    labeled_statement           go to state 491
    expression_statement        go to state 492
    compound_statement          go to state 493
    selection_statement         go to state 495
    iteration_statement         go to state 496
    jump_statement              go to state 497
    declaration_statement       go to state 498
    block_declaration           go to state 499
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 500
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 501
    throw_expression            go to state 301
    expression_opt              go to state 502


state 835

  157 condition: type_specifier_seq declarator '=' assignment_expression .

    $default  reduce using rule 157 (condition)


state 836

  450 type_id_list: type_id_list ',' type_id .

    $default  reduce using rule 450 (type_id_list)


state 837

  429 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier .
  430               | TEMPLATE '<' template_parameter_list '>' CLASS identifier . '=' template_name

    '='  shift, and go to state 841

    $default  reduce using rule 429 (type_parameter)


state 838

  159 iteration_statement: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 159 (iteration_statement)


state 839

  160 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt ')' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 243
    FLOATING          shift, and go to state 244
    CHARACTER         shift, and go to state 245
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 246
    PLUSPLUS          shift, and go to state 247
    MINUSMINUS        shift, and go to state 248
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 475
    CASE              shift, and go to state 476
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 249
    CONTINUE          shift, and go to state 477
    DEFAULT           shift, and go to state 478
    DELETE            shift, and go to state 250
    DO                shift, and go to state 479
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 251
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 252
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 480
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 481
    IF                shift, and go to state 482
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 483
    NEW               shift, and go to state 253
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 254
    RETURN            shift, and go to state 484
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 255
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 256
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 485
    THIS              shift, and go to state 257
    THROW             shift, and go to state 258
    TRUE              shift, and go to state 259
    TRY               shift, and go to state 486
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 260
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 487
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 261
    '~'               shift, and go to state 262
    '*'               shift, and go to state 263
    '&'               shift, and go to state 264
    '+'               shift, and go to state 265
    '-'               shift, and go to state 266
    '!'               shift, and go to state 267
    '{'               shift, and go to state 320

    $default  reduce using rule 465 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 488
    literal                     go to state 269
    integer_literal             go to state 270
    character_literal           go to state 271
    floating_literal            go to state 272
    string_literal              go to state 273
    boolean_literal             go to state 274
    primary_expression          go to state 275
    id_expression               go to state 276
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 277
    postfix_expression          go to state 278
    unary_expression            go to state 279
    unary_operator              go to state 280
    new_expression              go to state 281
    delete_expression           go to state 282
    cast_expression             go to state 283
    pm_expression               go to state 284
    multiplicative_expression   go to state 285
    additive_expression         go to state 286
    shift_expression            go to state 287
    relational_expression       go to state 288
    equality_expression         go to state 289
    and_expression              go to state 290
    exclusive_or_expression     go to state 291
    inclusive_or_expression     go to state 292
    logical_and_expression      go to state 293
    logical_or_expression       go to state 294
    conditional_expression      go to state 295
    assignment_expression       go to state 408
    expression                  go to state 489
    statement                   go to state 842
    labeled_statement           go to state 491
    expression_statement        go to state 492
    compound_statement          go to state 493
    selection_statement         go to state 495
    iteration_statement         go to state 496
    jump_statement              go to state 497
    declaration_statement       go to state 498
    block_declaration           go to state 499
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 500
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 501
    throw_expression            go to state 301
    expression_opt              go to state 502


state 840

  154 selection_statement: IF '(' condition ')' statement ELSE statement .

    $default  reduce using rule 154 (selection_statement)


state 841

  430 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier '=' . template_name

    TEMPLATE_NAME  shift, and go to state 6

    template_name  go to state 843


state 842

  160 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt ')' statement .

    $default  reduce using rule 160 (iteration_statement)


state 843

  430 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier '=' template_name .

    $default  reduce using rule 430 (type_parameter)
