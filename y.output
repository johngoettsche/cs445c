State 0 conflicts: 1 shift/reduce
State 7 conflicts: 4 shift/reduce
State 32 conflicts: 1 shift/reduce
State 50 conflicts: 1 shift/reduce
State 59 conflicts: 1 shift/reduce
State 83 conflicts: 1 shift/reduce
State 100 conflicts: 4 shift/reduce
State 109 conflicts: 1 shift/reduce
State 110 conflicts: 1 shift/reduce
State 113 conflicts: 2 shift/reduce
State 136 conflicts: 1 shift/reduce
State 137 conflicts: 1 shift/reduce
State 155 conflicts: 4 shift/reduce
State 156 conflicts: 2 shift/reduce
State 173 conflicts: 3 shift/reduce
State 174 conflicts: 3 shift/reduce
State 197 conflicts: 1 shift/reduce
State 210 conflicts: 1 shift/reduce
State 214 conflicts: 1 shift/reduce
State 216 conflicts: 1 shift/reduce
State 226 conflicts: 2 shift/reduce
State 229 conflicts: 1 shift/reduce
State 247 conflicts: 2 shift/reduce
State 254 conflicts: 1 shift/reduce
State 263 conflicts: 2 shift/reduce
State 289 conflicts: 1 shift/reduce
State 299 conflicts: 1 shift/reduce
State 325 conflicts: 1 shift/reduce
State 340 conflicts: 1 shift/reduce
State 341 conflicts: 1 shift/reduce
State 342 conflicts: 1 shift/reduce
State 345 conflicts: 1 shift/reduce
State 347 conflicts: 1 shift/reduce
State 380 conflicts: 1 shift/reduce
State 391 conflicts: 1 shift/reduce
State 453 conflicts: 1 shift/reduce
State 454 conflicts: 1 shift/reduce
State 504 conflicts: 1 shift/reduce
State 506 conflicts: 1 shift/reduce
State 525 conflicts: 1 shift/reduce
State 529 conflicts: 2 shift/reduce
State 534 conflicts: 2 shift/reduce
State 536 conflicts: 1 shift/reduce
State 570 conflicts: 2 shift/reduce
State 601 conflicts: 1 shift/reduce
State 602 conflicts: 1 shift/reduce
State 659 conflicts: 2 shift/reduce
State 660 conflicts: 2 shift/reduce
State 664 conflicts: 2 shift/reduce
State 665 conflicts: 2 shift/reduce
State 670 conflicts: 1 shift/reduce
State 692 conflicts: 2 shift/reduce
State 741 conflicts: 2 shift/reduce
State 746 conflicts: 2 shift/reduce
State 775 conflicts: 1 shift/reduce
State 813 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 typedef_name: TYPEDEF_NAME

    2 namespace_name: original_namespace_name

    3 original_namespace_name: NAMESPACE_NAME

    4 class_name: CLASS_NAME
    5           | template_id

    6 enum_name: ENUM_NAME

    7 template_name: TEMPLATE_NAME

    8 identifier: IDENTIFIER

    9 literal: integer_literal
   10        | character_literal
   11        | floating_literal
   12        | string_literal
   13        | boolean_literal

   14 integer_literal: INTEGER

   15 character_literal: CHARACTER

   16 floating_literal: FLOATING

   17 string_literal: STRING

   18 boolean_literal: TRUE
   19                | FALSE

   20 translation_unit: declaration_seq_opt

   21 primary_expression: literal
   22                   | THIS
   23                   | '(' expression ')'
   24                   | id_expression

   25 id_expression: unqualified_id
   26              | qualified_id

   27 unqualified_id: identifier
   28               | operator_function_id
   29               | conversion_function_id
   30               | '~' class_name

   31 qualified_id: nested_name_specifier unqualified_id
   32             | nested_name_specifier TEMPLATE unqualified_id

   33 nested_name_specifier: class_name COLONCOLON nested_name_specifier
   34                      | namespace_name COLONCOLON nested_name_specifier
   35                      | class_name COLONCOLON
   36                      | namespace_name COLONCOLON

   37 postfix_expression: primary_expression
   38                   | postfix_expression '[' expression ']'
   39                   | postfix_expression '(' expression_list_opt ')'
   40                   | postfix_expression '.' TEMPLATE COLONCOLON id_expression
   41                   | postfix_expression '.' TEMPLATE id_expression
   42                   | postfix_expression '.' COLONCOLON id_expression
   43                   | postfix_expression '.' id_expression
   44                   | postfix_expression ARROW TEMPLATE COLONCOLON id_expression
   45                   | postfix_expression ARROW TEMPLATE id_expression
   46                   | postfix_expression ARROW COLONCOLON id_expression
   47                   | postfix_expression ARROW id_expression
   48                   | postfix_expression PLUSPLUS
   49                   | postfix_expression MINUSMINUS
   50                   | DYNAMIC_CAST '<' type_id '>' '(' expression ')'
   51                   | STATIC_CAST '<' type_id '>' '(' expression ')'
   52                   | REINTERPRET_CAST '<' type_id '>' '(' expression ')'
   53                   | CONST_CAST '<' type_id '>' '(' expression ')'
   54                   | TYPEID '(' expression ')'
   55                   | TYPEID '(' type_id ')'

   56 expression_list: assignment_expression
   57                | expression_list ',' assignment_expression

   58 unary_expression: postfix_expression
   59                 | PLUSPLUS cast_expression
   60                 | MINUSMINUS cast_expression
   61                 | '*' cast_expression
   62                 | '&' cast_expression
   63                 | unary_operator cast_expression
   64                 | SIZEOF unary_expression
   65                 | SIZEOF '(' type_id ')'
   66                 | new_expression
   67                 | delete_expression

   68 unary_operator: '+'
   69               | '-'
   70               | '!'
   71               | '~'

   72 new_expression: NEW new_placement_opt new_type_id new_initializer_opt
   73               | COLONCOLON NEW new_placement_opt new_type_id new_initializer_opt
   74               | NEW new_placement_opt '(' type_id ')' new_initializer_opt
   75               | COLONCOLON NEW new_placement_opt '(' type_id ')' new_initializer_opt

   76 new_placement: '(' expression_list ')'

   77 new_type_id: type_specifier_seq new_declarator_opt

   78 new_declarator: ptr_operator new_declarator_opt
   79               | direct_new_declarator

   80 direct_new_declarator: '[' expression ']'
   81                      | direct_new_declarator '[' constant_expression ']'

   82 new_initializer: '(' expression_list_opt ')'

   83 delete_expression: DELETE cast_expression
   84                  | COLONCOLON DELETE cast_expression
   85                  | DELETE '[' ']' cast_expression
   86                  | COLONCOLON DELETE '[' ']' cast_expression

   87 cast_expression: unary_expression
   88                | '(' type_id ')' cast_expression

   89 pm_expression: cast_expression
   90              | pm_expression DOTSTAR cast_expression
   91              | pm_expression ARROWSTAR cast_expression

   92 multiplicative_expression: pm_expression
   93                          | multiplicative_expression '*' pm_expression
   94                          | multiplicative_expression '/' pm_expression
   95                          | multiplicative_expression '%' pm_expression

   96 additive_expression: multiplicative_expression
   97                    | additive_expression '+' multiplicative_expression
   98                    | additive_expression '-' multiplicative_expression

   99 shift_expression: additive_expression
  100                 | shift_expression SL additive_expression
  101                 | shift_expression SR additive_expression

  102 relational_expression: shift_expression
  103                      | relational_expression '<' shift_expression
  104                      | relational_expression '>' shift_expression
  105                      | relational_expression LTEQ shift_expression
  106                      | relational_expression GTEQ shift_expression

  107 equality_expression: relational_expression
  108                    | equality_expression EQ relational_expression
  109                    | equality_expression NOTEQ relational_expression

  110 and_expression: equality_expression
  111               | and_expression '&' equality_expression

  112 exclusive_or_expression: and_expression
  113                        | exclusive_or_expression '^' and_expression

  114 inclusive_or_expression: exclusive_or_expression
  115                        | inclusive_or_expression '|' exclusive_or_expression

  116 logical_and_expression: inclusive_or_expression
  117                       | logical_and_expression ANDAND inclusive_or_expression

  118 logical_or_expression: logical_and_expression
  119                      | logical_or_expression OROR logical_and_expression

  120 conditional_expression: logical_or_expression
  121                       | logical_or_expression '?' expression ':' assignment_expression

  122 assignment_expression: conditional_expression
  123                      | logical_or_expression assignment_operator assignment_expression
  124                      | throw_expression

  125 assignment_operator: '='
  126                    | MULEQ
  127                    | DIVEQ
  128                    | MODEQ
  129                    | ADDEQ
  130                    | SUBEQ
  131                    | SREQ
  132                    | SLEQ
  133                    | ANDEQ
  134                    | XOREQ
  135                    | OREQ

  136 expression: assignment_expression
  137           | expression ',' assignment_expression

  138 constant_expression: conditional_expression

  139 statement: labeled_statement
  140          | expression_statement
  141          | compound_statement
  142          | selection_statement
  143          | iteration_statement
  144          | jump_statement
  145          | declaration_statement
  146          | try_block

  147 labeled_statement: identifier ':' statement
  148                  | CASE constant_expression ':' statement
  149                  | DEFAULT ':' statement

  150 expression_statement: expression_opt ';'

  151 compound_statement: '{' statement_seq_opt '}'

  152 statement_seq: statement
  153              | statement_seq statement

  154 selection_statement: IF '(' condition ')' statement
  155                    | IF '(' condition ')' statement ELSE statement
  156                    | SWITCH '(' condition ')' statement

  157 condition: expression
  158          | type_specifier_seq declarator '=' assignment_expression

  159 iteration_statement: WHILE '(' condition ')' statement
  160                    | DO statement WHILE '(' expression ')' ';'
  161                    | FOR '(' for_init_statement condition_opt ';' expression_opt ')' statement

  162 for_init_statement: expression_statement
  163                   | simple_declaration

  164 jump_statement: BREAK ';'
  165               | CONTINUE ';'
  166               | RETURN expression_opt ';'
  167               | GOTO identifier ';'

  168 declaration_statement: block_declaration

  169 declaration_seq: declaration
  170                | declaration_seq declaration

  171 declaration: block_declaration
  172            | function_definition
  173            | template_declaration
  174            | explicit_instantiation
  175            | explicit_specialization
  176            | linkage_specification
  177            | namespace_definition

  178 block_declaration: simple_declaration
  179                  | asm_definition
  180                  | namespace_alias_definition
  181                  | using_declaration
  182                  | using_directive

  183 simple_declaration: decl_specifier_seq init_declarator_list ';'
  184                   | decl_specifier_seq ';'

  185 decl_specifier: storage_class_specifier
  186               | type_specifier
  187               | function_specifier
  188               | FRIEND
  189               | TYPEDEF

  190 decl_specifier_seq: decl_specifier
  191                   | decl_specifier_seq decl_specifier

  192 storage_class_specifier: AUTO
  193                        | REGISTER
  194                        | STATIC
  195                        | EXTERN
  196                        | MUTABLE

  197 function_specifier: INLINE
  198                   | VIRTUAL
  199                   | EXPLICIT

  200 type_specifier: simple_type_specifier
  201               | class_specifier
  202               | enum_specifier
  203               | elaborated_type_specifier
  204               | cv_qualifier

  205 simple_type_specifier: type_name
  206                      | nested_name_specifier type_name
  207                      | COLONCOLON nested_name_specifier_opt type_name
  208                      | CHAR
  209                      | WCHAR_T
  210                      | BOOL
  211                      | SHORT
  212                      | INT
  213                      | LONG
  214                      | SIGNED
  215                      | UNSIGNED
  216                      | FLOAT
  217                      | DOUBLE
  218                      | VOID
  219                      | STR_TYPE

  220 type_name: class_name
  221          | enum_name
  222          | typedef_name

  223 elaborated_type_specifier: class_key COLONCOLON nested_name_specifier identifier
  224                          | class_key COLONCOLON identifier
  225                          | ENUM COLONCOLON nested_name_specifier identifier
  226                          | ENUM COLONCOLON identifier
  227                          | ENUM nested_name_specifier identifier
  228                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier
  229                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'

  230 enum_specifier: ENUM identifier '{' enumerator_list_opt '}'

  231 enumerator_list: enumerator_definition
  232                | enumerator_list ',' enumerator_definition

  233 enumerator_definition: enumerator
  234                      | enumerator '=' constant_expression

  235 enumerator: identifier

  236 namespace_definition: named_namespace_definition
  237                     | unnamed_namespace_definition

  238 named_namespace_definition: original_namespace_definition
  239                           | extension_namespace_definition

  240 original_namespace_definition: NAMESPACE identifier '{' namespace_body '}'

  241 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body '}'

  242 unnamed_namespace_definition: NAMESPACE '{' namespace_body '}'

  243 namespace_body: declaration_seq_opt

  244 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier ';'

  245 qualified_namespace_specifier: COLONCOLON nested_name_specifier namespace_name
  246                              | COLONCOLON namespace_name
  247                              | nested_name_specifier namespace_name
  248                              | namespace_name

  249 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier unqualified_id ';'
  250                  | USING TYPENAME nested_name_specifier unqualified_id ';'
  251                  | USING COLONCOLON nested_name_specifier unqualified_id ';'
  252                  | USING nested_name_specifier unqualified_id ';'
  253                  | USING COLONCOLON unqualified_id ';'

  254 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier namespace_name ';'
  255                | USING NAMESPACE COLONCOLON namespace_name ';'
  256                | USING NAMESPACE nested_name_specifier namespace_name ';'
  257                | USING NAMESPACE namespace_name ';'

  258 asm_definition: ASM '(' string_literal ')' ';'

  259 linkage_specification: EXTERN string_literal '{' declaration_seq_opt '}'
  260                      | EXTERN string_literal declaration

  261 init_declarator_list: init_declarator
  262                     | init_declarator_list ',' init_declarator

  263 init_declarator: declarator initializer_opt

  264 declarator: direct_declarator
  265           | ptr_operator declarator

  266 direct_declarator: declarator_id
  267                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  268                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq
  269                  | direct_declarator '(' parameter_declaration_clause ')' exception_specification
  270                  | direct_declarator '(' parameter_declaration_clause ')'
  271                  | direct_declarator '[' constant_expression_opt ']'
  272                  | '(' declarator ')'

  273 ptr_operator: '*'
  274             | '*' cv_qualifier_seq
  275             | '&'
  276             | nested_name_specifier '*'
  277             | nested_name_specifier '*' cv_qualifier_seq
  278             | COLONCOLON nested_name_specifier '*'
  279             | COLONCOLON nested_name_specifier '*' cv_qualifier_seq

  280 cv_qualifier_seq: cv_qualifier
  281                 | cv_qualifier cv_qualifier_seq

  282 cv_qualifier: CONST
  283             | VOLATILE

  284 declarator_id: id_expression
  285              | COLONCOLON id_expression
  286              | COLONCOLON nested_name_specifier type_name
  287              | COLONCOLON type_name

  288 type_id: type_specifier_seq abstract_declarator_opt

  289 type_specifier_seq: type_specifier type_specifier_seq_opt

  290 abstract_declarator: ptr_operator abstract_declarator_opt
  291                    | direct_abstract_declarator

  292 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  293                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq
  294                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' exception_specification
  295                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')'
  296                           | direct_abstract_declarator_opt '[' constant_expression_opt ']'
  297                           | '(' abstract_declarator ')'

  298 parameter_declaration_clause: parameter_declaration_list ELLIPSIS
  299                             | parameter_declaration_list
  300                             | ELLIPSIS
  301                             | /* empty */
  302                             | parameter_declaration_list ',' ELLIPSIS

  303 parameter_declaration_list: parameter_declaration
  304                           | parameter_declaration_list ',' parameter_declaration

  305 parameter_declaration: decl_specifier_seq declarator
  306                      | decl_specifier_seq declarator '=' assignment_expression
  307                      | decl_specifier_seq abstract_declarator_opt
  308                      | decl_specifier_seq abstract_declarator_opt '=' assignment_expression

  309 function_definition: declarator ctor_initializer_opt function_body
  310                    | decl_specifier_seq declarator ctor_initializer_opt function_body
  311                    | declarator function_try_block
  312                    | decl_specifier_seq declarator function_try_block

  313 function_body: compound_statement

  314 initializer: '=' initializer_clause
  315            | '(' expression_list ')'

  316 initializer_clause: assignment_expression
  317                   | '{' initializer_list COMMA_opt '}'
  318                   | '{' '}'

  319 initializer_list: initializer_clause
  320                 | initializer_list ',' initializer_clause

  321 class_specifier: class_head '{' member_specification_opt '}'

  322 class_head: class_key identifier
  323           | class_key identifier base_clause
  324           | class_key nested_name_specifier identifier
  325           | class_key nested_name_specifier identifier base_clause

  326 class_key: CLASS
  327          | STRUCT
  328          | UNION

  329 member_specification: member_declaration member_specification_opt
  330                     | access_specifier ':' member_specification_opt

  331 member_declaration: decl_specifier_seq member_declarator_list ';'
  332                   | decl_specifier_seq ';'
  333                   | member_declarator_list ';'
  334                   | ';'
  335                   | function_definition SEMICOLON_opt
  336                   | qualified_id ';'
  337                   | using_declaration
  338                   | template_declaration

  339 member_declarator_list: member_declarator
  340                       | member_declarator_list ',' member_declarator

  341 member_declarator: /* empty */
  342                  | declarator
  343                  | declarator pure_specifier
  344                  | declarator constant_initializer
  345                  | identifier ':' constant_expression

  346 pure_specifier: '=' '0'

  347 constant_initializer: '=' constant_expression

  348 base_clause: ':' base_specifier_list

  349 base_specifier_list: base_specifier
  350                    | base_specifier_list ',' base_specifier

  351 base_specifier: COLONCOLON nested_name_specifier class_name
  352               | COLONCOLON class_name
  353               | nested_name_specifier class_name
  354               | class_name
  355               | VIRTUAL access_specifier COLONCOLON nested_name_specifier_opt class_name
  356               | VIRTUAL access_specifier nested_name_specifier_opt class_name
  357               | VIRTUAL COLONCOLON nested_name_specifier_opt class_name
  358               | VIRTUAL nested_name_specifier_opt class_name
  359               | access_specifier VIRTUAL COLONCOLON nested_name_specifier_opt class_name
  360               | access_specifier VIRTUAL nested_name_specifier_opt class_name
  361               | access_specifier COLONCOLON nested_name_specifier_opt class_name
  362               | access_specifier nested_name_specifier_opt class_name

  363 access_specifier: PRIVATE
  364                 | PROTECTED
  365                 | PUBLIC

  366 conversion_function_id: OPERATOR conversion_type_id

  367 conversion_type_id: type_specifier_seq conversion_declarator_opt

  368 conversion_declarator: ptr_operator conversion_declarator_opt

  369 ctor_initializer: ':' mem_initializer_list

  370 mem_initializer_list: mem_initializer
  371                     | mem_initializer ',' mem_initializer_list

  372 mem_initializer: mem_initializer_id '(' expression_list_opt ')'

  373 mem_initializer_id: COLONCOLON nested_name_specifier class_name
  374                   | COLONCOLON class_name
  375                   | nested_name_specifier class_name
  376                   | class_name
  377                   | identifier

  378 operator_function_id: OPERATOR operator

  379 operator: NEW
  380         | DELETE
  381         | NEW '[' ']'
  382         | DELETE '[' ']'
  383         | '+'
  384         | '_'
  385         | '*'
  386         | '/'
  387         | '%'
  388         | '^'
  389         | '&'
  390         | '|'
  391         | '~'
  392         | '!'
  393         | '='
  394         | '<'
  395         | '>'
  396         | ADDEQ
  397         | SUBEQ
  398         | MULEQ
  399         | DIVEQ
  400         | MODEQ
  401         | XOREQ
  402         | ANDEQ
  403         | OREQ
  404         | SL
  405         | SR
  406         | SREQ
  407         | SLEQ
  408         | EQ
  409         | NOTEQ
  410         | LTEQ
  411         | GTEQ
  412         | ANDAND
  413         | OROR
  414         | PLUSPLUS
  415         | MINUSMINUS
  416         | ','
  417         | ARROWSTAR
  418         | ARROW
  419         | '(' ')'
  420         | '[' ']'

  421 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' declaration

  422 template_parameter_list: template_parameter
  423                        | template_parameter_list ',' template_parameter

  424 template_parameter: type_parameter
  425                   | parameter_declaration

  426 type_parameter: CLASS identifier
  427               | CLASS identifier '=' type_id
  428               | TYPENAME identifier
  429               | TYPENAME identifier '=' type_id
  430               | TEMPLATE '<' template_parameter_list '>' CLASS identifier
  431               | TEMPLATE '<' template_parameter_list '>' CLASS identifier '=' template_name

  432 template_id: template_name '<' template_argument_list '>'

  433 template_argument_list: template_argument
  434                       | template_argument_list ',' template_argument

  435 template_argument: assignment_expression
  436                  | type_id
  437                  | template_name

  438 explicit_instantiation: TEMPLATE declaration

  439 explicit_specialization: TEMPLATE '<' '>' declaration

  440 try_block: TRY compound_statement handler_seq

  441 function_try_block: TRY ctor_initializer_opt function_body handler_seq

  442 handler_seq: handler handler_seq_opt

  443 handler: CATCH '(' exception_declaration ')' compound_statement

  444 exception_declaration: type_specifier_seq declarator
  445                      | type_specifier_seq abstract_declarator
  446                      | type_specifier_seq
  447                      | ELLIPSIS

  448 throw_expression: THROW assignment_expression_opt

  449 exception_specification: THROW '(' type_id_list_opt ')'

  450 type_id_list: type_id
  451             | type_id_list ',' type_id

  452 declaration_seq_opt: /* empty */
  453                    | declaration_seq

  454 nested_name_specifier_opt: /* empty */
  455                          | nested_name_specifier

  456 expression_list_opt: /* empty */
  457                    | expression_list

  458 COLONCOLON_opt: /* empty */
  459               | COLONCOLON

  460 new_placement_opt: /* empty */
  461                  | new_placement

  462 new_initializer_opt: /* empty */
  463                    | new_initializer

  464 new_declarator_opt: /* empty */
  465                   | new_declarator

  466 expression_opt: /* empty */
  467               | expression

  468 statement_seq_opt: /* empty */
  469                  | statement_seq

  470 condition_opt: /* empty */
  471              | condition

  472 enumerator_list_opt: /* empty */
  473                    | enumerator_list

  474 initializer_opt: /* empty */
  475                | initializer

  476 constant_expression_opt: /* empty */
  477                        | constant_expression

  478 abstract_declarator_opt: /* empty */
  479                        | abstract_declarator

  480 type_specifier_seq_opt: /* empty */
  481                       | type_specifier_seq

  482 direct_abstract_declarator_opt: /* empty */
  483                               | direct_abstract_declarator

  484 ctor_initializer_opt: /* empty */
  485                     | ctor_initializer

  486 COMMA_opt: /* empty */
  487          | ','

  488 member_specification_opt: /* empty */
  489                         | member_specification

  490 SEMICOLON_opt: /* empty */
  491              | ';'

  492 conversion_declarator_opt: /* empty */
  493                          | conversion_declarator

  494 EXPORT_opt: /* empty */
  495           | EXPORT

  496 handler_seq_opt: /* empty */
  497                | handler_seq

  498 assignment_expression_opt: /* empty */
  499                          | assignment_expression

  500 type_id_list_opt: /* empty */
  501                 | type_id_list


Terminals, with rules where they appear

$end (0) 0
'!' (33) 70 392
'%' (37) 95 387
'&' (38) 62 111 275 389
'(' (40) 23 39 50 51 52 53 54 55 65 74 75 76 82 88 154 155 156 159
    160 161 258 267 268 269 270 272 292 293 294 295 297 315 372 419
    443 449
')' (41) 23 39 50 51 52 53 54 55 65 74 75 76 82 88 154 155 156 159
    160 161 258 267 268 269 270 272 292 293 294 295 297 315 372 419
    443 449
'*' (42) 61 93 273 274 276 277 278 279 385
'+' (43) 68 97 383
',' (44) 57 137 232 262 302 304 320 340 350 371 416 423 434 451 487
'-' (45) 69 98
'.' (46) 40 41 42 43
'/' (47) 94 386
'0' (48) 346
':' (58) 121 147 148 149 330 345 348 369
';' (59) 150 160 161 164 165 166 167 183 184 244 249 250 251 252 253
    254 255 256 257 258 331 332 333 334 336 491
'<' (60) 50 51 52 53 103 229 394 421 430 431 432 439
'=' (61) 125 158 234 244 306 308 314 346 347 393 427 429 431
'>' (62) 50 51 52 53 104 229 395 421 430 431 432 439
'?' (63) 121
'[' (91) 38 80 81 85 86 271 296 381 382 420
']' (93) 38 80 81 85 86 271 296 381 382 420
'^' (94) 113 388
'_' (95) 384
'{' (123) 151 230 240 241 242 259 317 318 321
'|' (124) 115 390
'}' (125) 151 230 240 241 242 259 317 318 321
'~' (126) 30 71 391
error (256)
IDENTIFIER (258) 8
INTEGER (259) 14
FLOATING (260) 16
CHARACTER (261) 15
STRING (262) 17
TYPEDEF_NAME (263) 1
NAMESPACE_NAME (264) 3
CLASS_NAME (265) 4
ENUM_NAME (266) 6
TEMPLATE_NAME (267) 7
ELLIPSIS (268) 298 300 302 447
COLONCOLON (269) 33 34 35 36 40 42 44 46 73 75 84 86 207 223 224 225
    226 245 246 249 251 253 254 255 278 279 285 286 287 351 352 355
    357 359 361 373 374 459
DOTSTAR (270) 90
ADDEQ (271) 129 396
SUBEQ (272) 130 397
MULEQ (273) 126 398
DIVEQ (274) 127 399
MODEQ (275) 128 400
XOREQ (276) 134 401
ANDEQ (277) 133 402
OREQ (278) 135 403
SL (279) 100 404
SR (280) 101 405
SREQ (281) 131 406
SLEQ (282) 132 407
EQ (283) 108 408
NOTEQ (284) 109 409
LTEQ (285) 105 410
GTEQ (286) 106 411
ANDAND (287) 117 412
OROR (288) 119 413
PLUSPLUS (289) 48 59 414
MINUSMINUS (290) 49 60 415
ARROWSTAR (291) 91 417
ARROW (292) 44 45 46 47 418
ASM (293) 258
AUTO (294) 192
BOOL (295) 210
BREAK (296) 164
CASE (297) 148
CATCH (298) 443
CHAR (299) 208
CLASS (300) 326 426 427 430 431
CONST (301) 282
CONST_CAST (302) 53
CONTINUE (303) 165
DEFAULT (304) 149
DELETE (305) 83 84 85 86 380 382
DO (306) 160
DOUBLE (307) 217
DYNAMIC_CAST (308) 50
ELSE (309) 155
ENUM (310) 225 226 227 230
EXPLICIT (311) 199
EXPORT (312) 495
EXTERN (313) 195 259 260
FALSE (314) 19
FLOAT (315) 216
FOR (316) 161
FRIEND (317) 188
GOTO (318) 167
IF (319) 154 155
INLINE (320) 197
INT (321) 212
LONG (322) 213
MUTABLE (323) 196
NAMESPACE (324) 240 241 242 244 254 255 256 257
NEW (325) 72 73 74 75 379 381
OPERATOR (326) 366 378
PRIVATE (327) 363
PROTECTED (328) 364
PUBLIC (329) 365
REGISTER (330) 193
REINTERPRET_CAST (331) 52
RETURN (332) 166
SHORT (333) 211
SIGNED (334) 214
SIZEOF (335) 64 65
STATIC (336) 194
STATIC_CAST (337) 51
STRUCT (338) 327
SWITCH (339) 156
TEMPLATE (340) 32 40 41 44 45 421 430 431 438 439
THIS (341) 22
THROW (342) 448 449
TRUE (343) 18
TRY (344) 440 441
TYPEDEF (345) 189
TYPEID (346) 54 55
TYPENAME (347) 228 229 249 250 428 429
UNION (348) 328
UNSIGNED (349) 215
USING (350) 249 250 251 252 253 254 255 256 257
VIRTUAL (351) 198 355 356 357 358 359 360
VOID (352) 218
VOLATILE (353) 283
WCHAR_T (354) 209
WHILE (355) 159 160
STR_TYPE (356) 219


Nonterminals, with rules where they appear

$accept (128)
    on left: 0
typedef_name (129)
    on left: 1, on right: 222
namespace_name (130)
    on left: 2, on right: 34 36 245 246 247 248 254 255 256 257
original_namespace_name (131)
    on left: 3, on right: 2 241
class_name (132)
    on left: 4 5, on right: 30 33 35 220 351 352 353 354 355 356 357
    358 359 360 361 362 373 374 375 376
enum_name (133)
    on left: 6, on right: 221
template_name (134)
    on left: 7, on right: 431 432 437
identifier (135)
    on left: 8, on right: 27 147 167 223 224 225 226 227 228 229 230
    235 240 244 322 323 324 325 345 377 426 427 428 429 430 431
literal (136)
    on left: 9 10 11 12 13, on right: 21
integer_literal (137)
    on left: 14, on right: 9
character_literal (138)
    on left: 15, on right: 10
floating_literal (139)
    on left: 16, on right: 11
string_literal (140)
    on left: 17, on right: 12 258 259 260
boolean_literal (141)
    on left: 18 19, on right: 13
translation_unit (142)
    on left: 20, on right: 0
primary_expression (143)
    on left: 21 22 23 24, on right: 37
id_expression (144)
    on left: 25 26, on right: 24 40 41 42 43 44 45 46 47 284 285
unqualified_id (145)
    on left: 27 28 29 30, on right: 25 31 32 249 250 251 252 253
qualified_id (146)
    on left: 31 32, on right: 26 336
nested_name_specifier (147)
    on left: 33 34 35 36, on right: 31 32 33 34 206 223 225 227 228
    229 245 247 249 250 251 252 254 256 276 277 278 279 286 324 325
    351 353 373 375 455
postfix_expression (148)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
    55, on right: 38 39 40 41 42 43 44 45 46 47 48 49 58
expression_list (149)
    on left: 56 57, on right: 57 76 315 457
unary_expression (150)
    on left: 58 59 60 61 62 63 64 65 66 67, on right: 64 87
unary_operator (151)
    on left: 68 69 70 71, on right: 63
new_expression (152)
    on left: 72 73 74 75, on right: 66
new_placement (153)
    on left: 76, on right: 461
new_type_id (154)
    on left: 77, on right: 72 73
new_declarator (155)
    on left: 78 79, on right: 465
direct_new_declarator (156)
    on left: 80 81, on right: 79 81
new_initializer (157)
    on left: 82, on right: 463
delete_expression (158)
    on left: 83 84 85 86, on right: 67
cast_expression (159)
    on left: 87 88, on right: 59 60 61 62 63 83 84 85 86 88 89 90 91
pm_expression (160)
    on left: 89 90 91, on right: 90 91 92 93 94 95
multiplicative_expression (161)
    on left: 92 93 94 95, on right: 93 94 95 96 97 98
additive_expression (162)
    on left: 96 97 98, on right: 97 98 99 100 101
shift_expression (163)
    on left: 99 100 101, on right: 100 101 102 103 104 105 106
relational_expression (164)
    on left: 102 103 104 105 106, on right: 103 104 105 106 107 108
    109
equality_expression (165)
    on left: 107 108 109, on right: 108 109 110 111
and_expression (166)
    on left: 110 111, on right: 111 112 113
exclusive_or_expression (167)
    on left: 112 113, on right: 113 114 115
inclusive_or_expression (168)
    on left: 114 115, on right: 115 116 117
logical_and_expression (169)
    on left: 116 117, on right: 117 118 119
logical_or_expression (170)
    on left: 118 119, on right: 119 120 121 123
conditional_expression (171)
    on left: 120 121, on right: 122 138
assignment_expression (172)
    on left: 122 123 124, on right: 56 57 121 123 136 137 158 306 308
    316 435 499
assignment_operator (173)
    on left: 125 126 127 128 129 130 131 132 133 134 135, on right:
    123
expression (174)
    on left: 136 137, on right: 23 38 50 51 52 53 54 80 121 137 157
    160 467
constant_expression (175)
    on left: 138, on right: 81 148 234 345 347 477
statement (176)
    on left: 139 140 141 142 143 144 145 146, on right: 147 148 149
    152 153 154 155 156 159 160 161
labeled_statement (177)
    on left: 147 148 149, on right: 139
expression_statement (178)
    on left: 150, on right: 140 162
compound_statement (179)
    on left: 151, on right: 141 313 440 443
statement_seq (180)
    on left: 152 153, on right: 153 469
selection_statement (181)
    on left: 154 155 156, on right: 142
condition (182)
    on left: 157 158, on right: 154 155 156 159 471
iteration_statement (183)
    on left: 159 160 161, on right: 143
for_init_statement (184)
    on left: 162 163, on right: 161
jump_statement (185)
    on left: 164 165 166 167, on right: 144
declaration_statement (186)
    on left: 168, on right: 145
declaration_seq (187)
    on left: 169 170, on right: 170 453
declaration (188)
    on left: 171 172 173 174 175 176 177, on right: 169 170 260 421
    438 439
block_declaration (189)
    on left: 178 179 180 181 182, on right: 168 171
simple_declaration (190)
    on left: 183 184, on right: 163 178
decl_specifier (191)
    on left: 185 186 187 188 189, on right: 190 191
decl_specifier_seq (192)
    on left: 190 191, on right: 183 184 191 305 306 307 308 310 312
    331 332
storage_class_specifier (193)
    on left: 192 193 194 195 196, on right: 185
function_specifier (194)
    on left: 197 198 199, on right: 187
type_specifier (195)
    on left: 200 201 202 203 204, on right: 186 289
simple_type_specifier (196)
    on left: 205 206 207 208 209 210 211 212 213 214 215 216 217 218
    219, on right: 200
type_name (197)
    on left: 220 221 222, on right: 205 206 207 286 287
elaborated_type_specifier (198)
    on left: 223 224 225 226 227 228 229, on right: 203
enum_specifier (199)
    on left: 230, on right: 202
enumerator_list (200)
    on left: 231 232, on right: 232 473
enumerator_definition (201)
    on left: 233 234, on right: 231 232
enumerator (202)
    on left: 235, on right: 233 234
namespace_definition (203)
    on left: 236 237, on right: 177
named_namespace_definition (204)
    on left: 238 239, on right: 236
original_namespace_definition (205)
    on left: 240, on right: 238
extension_namespace_definition (206)
    on left: 241, on right: 239
unnamed_namespace_definition (207)
    on left: 242, on right: 237
namespace_body (208)
    on left: 243, on right: 240 241 242
namespace_alias_definition (209)
    on left: 244, on right: 180
qualified_namespace_specifier (210)
    on left: 245 246 247 248, on right: 244
using_declaration (211)
    on left: 249 250 251 252 253, on right: 181 337
using_directive (212)
    on left: 254 255 256 257, on right: 182
asm_definition (213)
    on left: 258, on right: 179
linkage_specification (214)
    on left: 259 260, on right: 176
init_declarator_list (215)
    on left: 261 262, on right: 183 262
init_declarator (216)
    on left: 263, on right: 261 262
declarator (217)
    on left: 264 265, on right: 158 263 265 272 305 306 309 310 311
    312 342 343 344 444
direct_declarator (218)
    on left: 266 267 268 269 270 271 272, on right: 264 267 268 269
    270 271
ptr_operator (219)
    on left: 273 274 275 276 277 278 279, on right: 78 265 290 368
cv_qualifier_seq (220)
    on left: 280 281, on right: 267 268 274 277 279 281 292 293
cv_qualifier (221)
    on left: 282 283, on right: 204 280 281
declarator_id (222)
    on left: 284 285 286 287, on right: 266
type_id (223)
    on left: 288, on right: 50 51 52 53 55 65 74 75 88 427 429 436
    450 451
type_specifier_seq (224)
    on left: 289, on right: 77 158 288 367 444 445 446 481
abstract_declarator (225)
    on left: 290 291, on right: 297 445 479
direct_abstract_declarator (226)
    on left: 292 293 294 295 296 297, on right: 291 483
parameter_declaration_clause (227)
    on left: 298 299 300 301 302, on right: 267 268 269 270 292 293
    294 295
parameter_declaration_list (228)
    on left: 303 304, on right: 298 299 302 304
parameter_declaration (229)
    on left: 305 306 307 308, on right: 303 304 425
function_definition (230)
    on left: 309 310 311 312, on right: 172 335
function_body (231)
    on left: 313, on right: 309 310 441
initializer (232)
    on left: 314 315, on right: 475
initializer_clause (233)
    on left: 316 317 318, on right: 314 319 320
initializer_list (234)
    on left: 319 320, on right: 317 320
class_specifier (235)
    on left: 321, on right: 201
class_head (236)
    on left: 322 323 324 325, on right: 321
class_key (237)
    on left: 326 327 328, on right: 223 224 322 323 324 325
member_specification (238)
    on left: 329 330, on right: 489
member_declaration (239)
    on left: 331 332 333 334 335 336 337 338, on right: 329
member_declarator_list (240)
    on left: 339 340, on right: 331 333 340
member_declarator (241)
    on left: 341 342 343 344 345, on right: 339 340
pure_specifier (242)
    on left: 346, on right: 343
constant_initializer (243)
    on left: 347, on right: 344
base_clause (244)
    on left: 348, on right: 323 325
base_specifier_list (245)
    on left: 349 350, on right: 348 350
base_specifier (246)
    on left: 351 352 353 354 355 356 357 358 359 360 361 362, on right:
    349 350
access_specifier (247)
    on left: 363 364 365, on right: 330 355 356 359 360 361 362
conversion_function_id (248)
    on left: 366, on right: 29
conversion_type_id (249)
    on left: 367, on right: 366
conversion_declarator (250)
    on left: 368, on right: 493
ctor_initializer (251)
    on left: 369, on right: 485
mem_initializer_list (252)
    on left: 370 371, on right: 369 371
mem_initializer (253)
    on left: 372, on right: 370 371
mem_initializer_id (254)
    on left: 373 374 375 376 377, on right: 372
operator_function_id (255)
    on left: 378, on right: 28
operator (256)
    on left: 379 380 381 382 383 384 385 386 387 388 389 390 391 392
    393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408
    409 410 411 412 413 414 415 416 417 418 419 420, on right: 378
template_declaration (257)
    on left: 421, on right: 173 338
template_parameter_list (258)
    on left: 422 423, on right: 421 423 430 431
template_parameter (259)
    on left: 424 425, on right: 422 423
type_parameter (260)
    on left: 426 427 428 429 430 431, on right: 424
template_id (261)
    on left: 432, on right: 5
template_argument_list (262)
    on left: 433 434, on right: 229 432 434
template_argument (263)
    on left: 435 436 437, on right: 433 434
explicit_instantiation (264)
    on left: 438, on right: 174
explicit_specialization (265)
    on left: 439, on right: 175
try_block (266)
    on left: 440, on right: 146
function_try_block (267)
    on left: 441, on right: 311 312
handler_seq (268)
    on left: 442, on right: 440 441 497
handler (269)
    on left: 443, on right: 442
exception_declaration (270)
    on left: 444 445 446 447, on right: 443
throw_expression (271)
    on left: 448, on right: 124
exception_specification (272)
    on left: 449, on right: 267 269 292 294
type_id_list (273)
    on left: 450 451, on right: 451 501
declaration_seq_opt (274)
    on left: 452 453, on right: 20 243 259
nested_name_specifier_opt (275)
    on left: 454 455, on right: 207 355 356 357 358 359 360 361 362
expression_list_opt (276)
    on left: 456 457, on right: 39 82 372
COLONCOLON_opt (277)
    on left: 458 459, on right: 228 229
new_placement_opt (278)
    on left: 460 461, on right: 72 73 74 75
new_initializer_opt (279)
    on left: 462 463, on right: 72 73 74 75
new_declarator_opt (280)
    on left: 464 465, on right: 77 78
expression_opt (281)
    on left: 466 467, on right: 150 161 166
statement_seq_opt (282)
    on left: 468 469, on right: 151
condition_opt (283)
    on left: 470 471, on right: 161
enumerator_list_opt (284)
    on left: 472 473, on right: 230
initializer_opt (285)
    on left: 474 475, on right: 263
constant_expression_opt (286)
    on left: 476 477, on right: 271 296
abstract_declarator_opt (287)
    on left: 478 479, on right: 288 290 307 308
type_specifier_seq_opt (288)
    on left: 480 481, on right: 289
direct_abstract_declarator_opt (289)
    on left: 482 483, on right: 292 293 294 295 296
ctor_initializer_opt (290)
    on left: 484 485, on right: 309 310 441
COMMA_opt (291)
    on left: 486 487, on right: 317
member_specification_opt (292)
    on left: 488 489, on right: 321 329 330
SEMICOLON_opt (293)
    on left: 490 491, on right: 335
conversion_declarator_opt (294)
    on left: 492 493, on right: 367 368
EXPORT_opt (295)
    on left: 494 495, on right: 421
handler_seq_opt (296)
    on left: 496 497, on right: 442
assignment_expression_opt (297)
    on left: 498 499, on right: 448
type_id_list_opt (298)
    on left: 500 501, on right: 449


state 0

    0 $accept: . translation_unit $end

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 494 (EXPORT_opt)]
    $default  reduce using rule 452 (declaration_seq_opt)

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    translation_unit                go to state 54
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration_seq                 go to state 59
    declaration                     go to state 60
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    declaration_seq_opt             go to state 97
    EXPORT_opt                      go to state 98


state 1

    8 identifier: IDENTIFIER .

    $default  reduce using rule 8 (identifier)


state 2

    1 typedef_name: TYPEDEF_NAME .

    $default  reduce using rule 1 (typedef_name)


state 3

    3 original_namespace_name: NAMESPACE_NAME .

    $default  reduce using rule 3 (original_namespace_name)


state 4

    4 class_name: CLASS_NAME .

    $default  reduce using rule 4 (class_name)


state 5

    6 enum_name: ENUM_NAME .

    $default  reduce using rule 6 (enum_name)


state 6

    7 template_name: TEMPLATE_NAME .

    $default  reduce using rule 7 (template_name)


state 7

  207 simple_type_specifier: COLONCOLON . nested_name_specifier_opt type_name
  278 ptr_operator: COLONCOLON . nested_name_specifier '*'
  279             | COLONCOLON . nested_name_specifier '*' cv_qualifier_seq
  285 declarator_id: COLONCOLON . id_expression
  286              | COLONCOLON . nested_name_specifier type_name
  287              | COLONCOLON . type_name

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    TYPEDEF_NAME   [reduce using rule 454 (nested_name_specifier_opt)]
    CLASS_NAME     [reduce using rule 454 (nested_name_specifier_opt)]
    ENUM_NAME      [reduce using rule 454 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 454 (nested_name_specifier_opt)]

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    id_expression              go to state 99
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 100
    type_name                  go to state 101
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    nested_name_specifier_opt  go to state 102


state 8

  258 asm_definition: ASM . '(' string_literal ')' ';'

    '('  shift, and go to state 103


state 9

  192 storage_class_specifier: AUTO .

    $default  reduce using rule 192 (storage_class_specifier)


state 10

  210 simple_type_specifier: BOOL .

    $default  reduce using rule 210 (simple_type_specifier)


state 11

  208 simple_type_specifier: CHAR .

    $default  reduce using rule 208 (simple_type_specifier)


state 12

  326 class_key: CLASS .

    $default  reduce using rule 326 (class_key)


state 13

  282 cv_qualifier: CONST .

    $default  reduce using rule 282 (cv_qualifier)


state 14

  217 simple_type_specifier: DOUBLE .

    $default  reduce using rule 217 (simple_type_specifier)


state 15

  225 elaborated_type_specifier: ENUM . COLONCOLON nested_name_specifier identifier
  226                          | ENUM . COLONCOLON identifier
  227                          | ENUM . nested_name_specifier identifier
  230 enum_specifier: ENUM . identifier '{' enumerator_list_opt '}'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 104

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 106
    nested_name_specifier    go to state 107
    template_id              go to state 94


state 16

  199 function_specifier: EXPLICIT .

    $default  reduce using rule 199 (function_specifier)


state 17

  495 EXPORT_opt: EXPORT .

    $default  reduce using rule 495 (EXPORT_opt)


state 18

  195 storage_class_specifier: EXTERN .
  259 linkage_specification: EXTERN . string_literal '{' declaration_seq_opt '}'
  260                      | EXTERN . string_literal declaration

    STRING  shift, and go to state 108

    $default  reduce using rule 195 (storage_class_specifier)

    string_literal  go to state 109


state 19

  216 simple_type_specifier: FLOAT .

    $default  reduce using rule 216 (simple_type_specifier)


state 20

  188 decl_specifier: FRIEND .

    $default  reduce using rule 188 (decl_specifier)


state 21

  197 function_specifier: INLINE .

    $default  reduce using rule 197 (function_specifier)


state 22

  212 simple_type_specifier: INT .

    $default  reduce using rule 212 (simple_type_specifier)


state 23

  213 simple_type_specifier: LONG .

    $default  reduce using rule 213 (simple_type_specifier)


state 24

  196 storage_class_specifier: MUTABLE .

    $default  reduce using rule 196 (storage_class_specifier)


state 25

  240 original_namespace_definition: NAMESPACE . identifier '{' namespace_body '}'
  241 extension_namespace_definition: NAMESPACE . original_namespace_name '{' namespace_body '}'
  242 unnamed_namespace_definition: NAMESPACE . '{' namespace_body '}'
  244 namespace_alias_definition: NAMESPACE . identifier '=' qualified_namespace_specifier ';'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    '{'             shift, and go to state 110

    original_namespace_name  go to state 111
    identifier               go to state 112


state 26

  366 conversion_function_id: OPERATOR . conversion_type_id
  378 operator_function_id: OPERATOR . operator

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    ADDEQ           shift, and go to state 114
    SUBEQ           shift, and go to state 115
    MULEQ           shift, and go to state 116
    DIVEQ           shift, and go to state 117
    MODEQ           shift, and go to state 118
    XOREQ           shift, and go to state 119
    ANDEQ           shift, and go to state 120
    OREQ            shift, and go to state 121
    SL              shift, and go to state 122
    SR              shift, and go to state 123
    SREQ            shift, and go to state 124
    SLEQ            shift, and go to state 125
    EQ              shift, and go to state 126
    NOTEQ           shift, and go to state 127
    LTEQ            shift, and go to state 128
    GTEQ            shift, and go to state 129
    ANDAND          shift, and go to state 130
    OROR            shift, and go to state 131
    PLUSPLUS        shift, and go to state 132
    MINUSMINUS      shift, and go to state 133
    ARROWSTAR       shift, and go to state 134
    ARROW           shift, and go to state 135
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DELETE          shift, and go to state 136
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    NEW             shift, and go to state 137
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 138
    '~'             shift, and go to state 139
    '['             shift, and go to state 140
    '<'             shift, and go to state 141
    '>'             shift, and go to state 142
    ','             shift, and go to state 143
    '*'             shift, and go to state 144
    '&'             shift, and go to state 145
    '+'             shift, and go to state 146
    '!'             shift, and go to state 147
    '/'             shift, and go to state 148
    '%'             shift, and go to state 149
    '^'             shift, and go to state 150
    '|'             shift, and go to state 151
    '='             shift, and go to state 152
    '_'             shift, and go to state 153

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 156
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_type_id         go to state 157
    operator                   go to state 158
    template_id                go to state 94


state 27

  193 storage_class_specifier: REGISTER .

    $default  reduce using rule 193 (storage_class_specifier)


state 28

  211 simple_type_specifier: SHORT .

    $default  reduce using rule 211 (simple_type_specifier)


state 29

  214 simple_type_specifier: SIGNED .

    $default  reduce using rule 214 (simple_type_specifier)


state 30

  194 storage_class_specifier: STATIC .

    $default  reduce using rule 194 (storage_class_specifier)


state 31

  327 class_key: STRUCT .

    $default  reduce using rule 327 (class_key)


state 32

  438 explicit_instantiation: TEMPLATE . declaration
  439 explicit_specialization: TEMPLATE . '<' '>' declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '<'             shift, and go to state 159
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 494 (EXPORT_opt)]

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration                     go to state 160
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    EXPORT_opt                      go to state 98


state 33

  189 decl_specifier: TYPEDEF .

    $default  reduce using rule 189 (decl_specifier)


state 34

  228 elaborated_type_specifier: TYPENAME . COLONCOLON_opt nested_name_specifier identifier
  229                          | TYPENAME . COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'

    COLONCOLON  shift, and go to state 161

    $default  reduce using rule 458 (COLONCOLON_opt)

    COLONCOLON_opt  go to state 162


state 35

  328 class_key: UNION .

    $default  reduce using rule 328 (class_key)


state 36

  215 simple_type_specifier: UNSIGNED .

    $default  reduce using rule 215 (simple_type_specifier)


state 37

  249 using_declaration: USING . TYPENAME COLONCOLON nested_name_specifier unqualified_id ';'
  250                  | USING . TYPENAME nested_name_specifier unqualified_id ';'
  251                  | USING . COLONCOLON nested_name_specifier unqualified_id ';'
  252                  | USING . nested_name_specifier unqualified_id ';'
  253                  | USING . COLONCOLON unqualified_id ';'
  254 using_directive: USING . NAMESPACE COLONCOLON nested_name_specifier namespace_name ';'
  255                | USING . NAMESPACE COLONCOLON namespace_name ';'
  256                | USING . NAMESPACE nested_name_specifier namespace_name ';'
  257                | USING . NAMESPACE namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 163
    NAMESPACE       shift, and go to state 164
    TYPENAME        shift, and go to state 165

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 166
    template_id              go to state 94


state 38

  198 function_specifier: VIRTUAL .

    $default  reduce using rule 198 (function_specifier)


state 39

  218 simple_type_specifier: VOID .

    $default  reduce using rule 218 (simple_type_specifier)


state 40

  283 cv_qualifier: VOLATILE .

    $default  reduce using rule 283 (cv_qualifier)


state 41

  209 simple_type_specifier: WCHAR_T .

    $default  reduce using rule 209 (simple_type_specifier)


state 42

  219 simple_type_specifier: STR_TYPE .

    $default  reduce using rule 219 (simple_type_specifier)


state 43

  272 direct_declarator: '(' . declarator ')'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 167
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 55
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 168
    declarator               go to state 169
    direct_declarator        go to state 83
    ptr_operator             go to state 84
    declarator_id            go to state 86
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 44

   30 unqualified_id: '~' . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 170
    template_name  go to state 52
    template_id    go to state 94


state 45

  273 ptr_operator: '*' .
  274             | '*' . cv_qualifier_seq

    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 273 (ptr_operator)

    cv_qualifier_seq  go to state 171
    cv_qualifier      go to state 172


state 46

  275 ptr_operator: '&' .

    $default  reduce using rule 275 (ptr_operator)


state 47

  222 type_name: typedef_name .

    $default  reduce using rule 222 (type_name)


state 48

   34 nested_name_specifier: namespace_name . COLONCOLON nested_name_specifier
   36                      | namespace_name . COLONCOLON

    COLONCOLON  shift, and go to state 173


state 49

    2 namespace_name: original_namespace_name .

    $default  reduce using rule 2 (namespace_name)


state 50

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON
  220 type_name: class_name .

    COLONCOLON  shift, and go to state 174

    COLONCOLON  [reduce using rule 220 (type_name)]
    $default    reduce using rule 220 (type_name)


state 51

  221 type_name: enum_name .

    $default  reduce using rule 221 (type_name)


state 52

  432 template_id: template_name . '<' template_argument_list '>'

    '<'  shift, and go to state 175


state 53

   27 unqualified_id: identifier .

    $default  reduce using rule 27 (unqualified_id)


state 54

    0 $accept: translation_unit . $end

    $end  shift, and go to state 176


state 55

  284 declarator_id: id_expression .

    $default  reduce using rule 284 (declarator_id)


state 56

   25 id_expression: unqualified_id .

    $default  reduce using rule 25 (id_expression)


state 57

   26 id_expression: qualified_id .

    $default  reduce using rule 26 (id_expression)


state 58

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  206 simple_type_specifier: nested_name_specifier . type_name
  276 ptr_operator: nested_name_specifier . '*'
  277             | nested_name_specifier . '*' cv_qualifier_seq

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 4
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 177
    '~'            shift, and go to state 44
    '*'            shift, and go to state 178

    typedef_name            go to state 47
    class_name              go to state 179
    enum_name               go to state 51
    template_name           go to state 52
    identifier              go to state 53
    unqualified_id          go to state 180
    type_name               go to state 181
    conversion_function_id  go to state 91
    operator_function_id    go to state 92
    template_id             go to state 94


state 59

  170 declaration_seq: declaration_seq . declaration
  453 declaration_seq_opt: declaration_seq .

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 494 (EXPORT_opt)]
    $default  reduce using rule 453 (declaration_seq_opt)

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration                     go to state 182
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    EXPORT_opt                      go to state 98


state 60

  169 declaration_seq: declaration .

    $default  reduce using rule 169 (declaration_seq)


state 61

  171 declaration: block_declaration .

    $default  reduce using rule 171 (declaration)


state 62

  178 block_declaration: simple_declaration .

    $default  reduce using rule 178 (block_declaration)


state 63

  190 decl_specifier_seq: decl_specifier .

    $default  reduce using rule 190 (decl_specifier_seq)


state 64

  183 simple_declaration: decl_specifier_seq . init_declarator_list ';'
  184                   | decl_specifier_seq . ';'
  191 decl_specifier_seq: decl_specifier_seq . decl_specifier
  310 function_definition: decl_specifier_seq . declarator ctor_initializer_opt function_body
  312                    | decl_specifier_seq . declarator function_try_block

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46
    ';'             shift, and go to state 184

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    id_expression              go to state 55
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 58
    decl_specifier             go to state 185
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    init_declarator_list       go to state 186
    init_declarator            go to state 187
    declarator                 go to state 188
    direct_declarator          go to state 83
    ptr_operator               go to state 84
    cv_qualifier               go to state 85
    declarator_id              go to state 86
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 65

  185 decl_specifier: storage_class_specifier .

    $default  reduce using rule 185 (decl_specifier)


state 66

  187 decl_specifier: function_specifier .

    $default  reduce using rule 187 (decl_specifier)


state 67

  186 decl_specifier: type_specifier .

    $default  reduce using rule 186 (decl_specifier)


state 68

  200 type_specifier: simple_type_specifier .

    $default  reduce using rule 200 (type_specifier)


state 69

  205 simple_type_specifier: type_name .

    $default  reduce using rule 205 (simple_type_specifier)


state 70

  203 type_specifier: elaborated_type_specifier .

    $default  reduce using rule 203 (type_specifier)


state 71

  202 type_specifier: enum_specifier .

    $default  reduce using rule 202 (type_specifier)


state 72

  177 declaration: namespace_definition .

    $default  reduce using rule 177 (declaration)


state 73

  236 namespace_definition: named_namespace_definition .

    $default  reduce using rule 236 (namespace_definition)


state 74

  238 named_namespace_definition: original_namespace_definition .

    $default  reduce using rule 238 (named_namespace_definition)


state 75

  239 named_namespace_definition: extension_namespace_definition .

    $default  reduce using rule 239 (named_namespace_definition)


state 76

  237 namespace_definition: unnamed_namespace_definition .

    $default  reduce using rule 237 (namespace_definition)


state 77

  180 block_declaration: namespace_alias_definition .

    $default  reduce using rule 180 (block_declaration)


state 78

  181 block_declaration: using_declaration .

    $default  reduce using rule 181 (block_declaration)


state 79

  182 block_declaration: using_directive .

    $default  reduce using rule 182 (block_declaration)


state 80

  179 block_declaration: asm_definition .

    $default  reduce using rule 179 (block_declaration)


state 81

  176 declaration: linkage_specification .

    $default  reduce using rule 176 (declaration)


state 82

  309 function_definition: declarator . ctor_initializer_opt function_body
  311                    | declarator . function_try_block

    TRY  shift, and go to state 189
    ':'  shift, and go to state 190

    $default  reduce using rule 484 (ctor_initializer_opt)

    ctor_initializer      go to state 191
    function_try_block    go to state 192
    ctor_initializer_opt  go to state 193


state 83

  264 declarator: direct_declarator .
  267 direct_declarator: direct_declarator . '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  268                  | direct_declarator . '(' parameter_declaration_clause ')' cv_qualifier_seq
  269                  | direct_declarator . '(' parameter_declaration_clause ')' exception_specification
  270                  | direct_declarator . '(' parameter_declaration_clause ')'
  271                  | direct_declarator . '[' constant_expression_opt ']'

    '('  shift, and go to state 194
    '['  shift, and go to state 195

    '('       [reduce using rule 264 (declarator)]
    $default  reduce using rule 264 (declarator)


state 84

  265 declarator: ptr_operator . declarator

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 167
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 55
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 168
    declarator               go to state 196
    direct_declarator        go to state 83
    ptr_operator             go to state 84
    declarator_id            go to state 86
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 85

  204 type_specifier: cv_qualifier .

    $default  reduce using rule 204 (type_specifier)


state 86

  266 direct_declarator: declarator_id .

    $default  reduce using rule 266 (direct_declarator)


state 87

  172 declaration: function_definition .

    $default  reduce using rule 172 (declaration)


state 88

  201 type_specifier: class_specifier .

    $default  reduce using rule 201 (type_specifier)


state 89

  321 class_specifier: class_head . '{' member_specification_opt '}'

    '{'  shift, and go to state 197


state 90

  223 elaborated_type_specifier: class_key . COLONCOLON nested_name_specifier identifier
  224                          | class_key . COLONCOLON identifier
  322 class_head: class_key . identifier
  323           | class_key . identifier base_clause
  324           | class_key . nested_name_specifier identifier
  325           | class_key . nested_name_specifier identifier base_clause

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 198

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 199
    nested_name_specifier    go to state 200
    template_id              go to state 94


state 91

   29 unqualified_id: conversion_function_id .

    $default  reduce using rule 29 (unqualified_id)


state 92

   28 unqualified_id: operator_function_id .

    $default  reduce using rule 28 (unqualified_id)


state 93

  173 declaration: template_declaration .

    $default  reduce using rule 173 (declaration)


state 94

    5 class_name: template_id .

    $default  reduce using rule 5 (class_name)


state 95

  174 declaration: explicit_instantiation .

    $default  reduce using rule 174 (declaration)


state 96

  175 declaration: explicit_specialization .

    $default  reduce using rule 175 (declaration)


state 97

   20 translation_unit: declaration_seq_opt .

    $default  reduce using rule 20 (translation_unit)


state 98

  421 template_declaration: EXPORT_opt . TEMPLATE '<' template_parameter_list '>' declaration

    TEMPLATE  shift, and go to state 201


state 99

  285 declarator_id: COLONCOLON id_expression .

    $default  reduce using rule 285 (declarator_id)


state 100

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  278 ptr_operator: COLONCOLON nested_name_specifier . '*'
  279             | COLONCOLON nested_name_specifier . '*' cv_qualifier_seq
  286 declarator_id: COLONCOLON nested_name_specifier . type_name
  455 nested_name_specifier_opt: nested_name_specifier .

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 4
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 177
    '~'            shift, and go to state 44
    '*'            shift, and go to state 202

    TYPEDEF_NAME   [reduce using rule 455 (nested_name_specifier_opt)]
    CLASS_NAME     [reduce using rule 455 (nested_name_specifier_opt)]
    ENUM_NAME      [reduce using rule 455 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 455 (nested_name_specifier_opt)]

    typedef_name            go to state 47
    class_name              go to state 179
    enum_name               go to state 51
    template_name           go to state 52
    identifier              go to state 53
    unqualified_id          go to state 180
    type_name               go to state 203
    conversion_function_id  go to state 91
    operator_function_id    go to state 92
    template_id             go to state 94


state 101

  287 declarator_id: COLONCOLON type_name .

    $default  reduce using rule 287 (declarator_id)


state 102

  207 simple_type_specifier: COLONCOLON nested_name_specifier_opt . type_name

    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 4
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6

    typedef_name   go to state 47
    class_name     go to state 179
    enum_name      go to state 51
    template_name  go to state 52
    type_name      go to state 204
    template_id    go to state 94


state 103

  258 asm_definition: ASM '(' . string_literal ')' ';'

    STRING  shift, and go to state 108

    string_literal  go to state 205


state 104

  225 elaborated_type_specifier: ENUM COLONCOLON . nested_name_specifier identifier
  226                          | ENUM COLONCOLON . identifier

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 206
    nested_name_specifier    go to state 207
    template_id              go to state 94


state 105

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON

    COLONCOLON  shift, and go to state 174


state 106

  230 enum_specifier: ENUM identifier . '{' enumerator_list_opt '}'

    '{'  shift, and go to state 208


state 107

  227 elaborated_type_specifier: ENUM nested_name_specifier . identifier

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 209


state 108

   17 string_literal: STRING .

    $default  reduce using rule 17 (string_literal)


state 109

  259 linkage_specification: EXTERN string_literal . '{' declaration_seq_opt '}'
  260                      | EXTERN string_literal . declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46
    '{'             shift, and go to state 210

    TEMPLATE  [reduce using rule 494 (EXPORT_opt)]

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration                     go to state 211
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    EXPORT_opt                      go to state 98


state 110

  242 unnamed_namespace_definition: NAMESPACE '{' . namespace_body '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 494 (EXPORT_opt)]
    $default  reduce using rule 452 (declaration_seq_opt)

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration_seq                 go to state 59
    declaration                     go to state 60
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_body                  go to state 212
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    declaration_seq_opt             go to state 213
    EXPORT_opt                      go to state 98


state 111

  241 extension_namespace_definition: NAMESPACE original_namespace_name . '{' namespace_body '}'

    '{'  shift, and go to state 214


state 112

  240 original_namespace_definition: NAMESPACE identifier . '{' namespace_body '}'
  244 namespace_alias_definition: NAMESPACE identifier . '=' qualified_namespace_specifier ';'

    '='  shift, and go to state 215
    '{'  shift, and go to state 216


state 113

  207 simple_type_specifier: COLONCOLON . nested_name_specifier_opt type_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 454 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 454 (nested_name_specifier_opt)]
    $default       reduce using rule 454 (nested_name_specifier_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    nested_name_specifier      go to state 217
    template_id                go to state 94
    nested_name_specifier_opt  go to state 102


state 114

  396 operator: ADDEQ .

    $default  reduce using rule 396 (operator)


state 115

  397 operator: SUBEQ .

    $default  reduce using rule 397 (operator)


state 116

  398 operator: MULEQ .

    $default  reduce using rule 398 (operator)


state 117

  399 operator: DIVEQ .

    $default  reduce using rule 399 (operator)


state 118

  400 operator: MODEQ .

    $default  reduce using rule 400 (operator)


state 119

  401 operator: XOREQ .

    $default  reduce using rule 401 (operator)


state 120

  402 operator: ANDEQ .

    $default  reduce using rule 402 (operator)


state 121

  403 operator: OREQ .

    $default  reduce using rule 403 (operator)


state 122

  404 operator: SL .

    $default  reduce using rule 404 (operator)


state 123

  405 operator: SR .

    $default  reduce using rule 405 (operator)


state 124

  406 operator: SREQ .

    $default  reduce using rule 406 (operator)


state 125

  407 operator: SLEQ .

    $default  reduce using rule 407 (operator)


state 126

  408 operator: EQ .

    $default  reduce using rule 408 (operator)


state 127

  409 operator: NOTEQ .

    $default  reduce using rule 409 (operator)


state 128

  410 operator: LTEQ .

    $default  reduce using rule 410 (operator)


state 129

  411 operator: GTEQ .

    $default  reduce using rule 411 (operator)


state 130

  412 operator: ANDAND .

    $default  reduce using rule 412 (operator)


state 131

  413 operator: OROR .

    $default  reduce using rule 413 (operator)


state 132

  414 operator: PLUSPLUS .

    $default  reduce using rule 414 (operator)


state 133

  415 operator: MINUSMINUS .

    $default  reduce using rule 415 (operator)


state 134

  417 operator: ARROWSTAR .

    $default  reduce using rule 417 (operator)


state 135

  418 operator: ARROW .

    $default  reduce using rule 418 (operator)


state 136

  380 operator: DELETE .
  382         | DELETE . '[' ']'

    '['  shift, and go to state 218

    '['       [reduce using rule 380 (operator)]
    $default  reduce using rule 380 (operator)


state 137

  379 operator: NEW .
  381         | NEW . '[' ']'

    '['  shift, and go to state 219

    '['       [reduce using rule 379 (operator)]
    $default  reduce using rule 379 (operator)


state 138

  419 operator: '(' . ')'

    ')'  shift, and go to state 220


state 139

  391 operator: '~' .

    $default  reduce using rule 391 (operator)


state 140

  420 operator: '[' . ']'

    ']'  shift, and go to state 221


state 141

  394 operator: '<' .

    $default  reduce using rule 394 (operator)


state 142

  395 operator: '>' .

    $default  reduce using rule 395 (operator)


state 143

  416 operator: ',' .

    $default  reduce using rule 416 (operator)


state 144

  385 operator: '*' .

    $default  reduce using rule 385 (operator)


state 145

  389 operator: '&' .

    $default  reduce using rule 389 (operator)


state 146

  383 operator: '+' .

    $default  reduce using rule 383 (operator)


state 147

  392 operator: '!' .

    $default  reduce using rule 392 (operator)


state 148

  386 operator: '/' .

    $default  reduce using rule 386 (operator)


state 149

  387 operator: '%' .

    $default  reduce using rule 387 (operator)


state 150

  388 operator: '^' .

    $default  reduce using rule 388 (operator)


state 151

  390 operator: '|' .

    $default  reduce using rule 390 (operator)


state 152

  393 operator: '=' .

    $default  reduce using rule 393 (operator)


state 153

  384 operator: '_' .

    $default  reduce using rule 384 (operator)


state 154

  206 simple_type_specifier: nested_name_specifier . type_name

    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 4
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6

    typedef_name   go to state 47
    class_name     go to state 179
    enum_name      go to state 51
    template_name  go to state 52
    type_name      go to state 181
    template_id    go to state 94


state 155

  289 type_specifier_seq: type_specifier . type_specifier_seq_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    NAMESPACE_NAME  [reduce using rule 480 (type_specifier_seq_opt)]
    CLASS_NAME      [reduce using rule 480 (type_specifier_seq_opt)]
    TEMPLATE_NAME   [reduce using rule 480 (type_specifier_seq_opt)]
    COLONCOLON      [reduce using rule 480 (type_specifier_seq_opt)]
    $default        reduce using rule 480 (type_specifier_seq_opt)

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 222
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94
    type_specifier_seq_opt     go to state 223


state 156

  367 conversion_type_id: type_specifier_seq . conversion_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 224
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '*'       [reduce using rule 492 (conversion_declarator_opt)]
    '&'       [reduce using rule 492 (conversion_declarator_opt)]
    $default  reduce using rule 492 (conversion_declarator_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    nested_name_specifier      go to state 225
    ptr_operator               go to state 226
    conversion_declarator      go to state 227
    template_id                go to state 94
    conversion_declarator_opt  go to state 228


state 157

  366 conversion_function_id: OPERATOR conversion_type_id .

    $default  reduce using rule 366 (conversion_function_id)


state 158

  378 operator_function_id: OPERATOR operator .

    $default  reduce using rule 378 (operator_function_id)


state 159

  439 explicit_specialization: TEMPLATE '<' . '>' declaration

    '>'  shift, and go to state 229


state 160

  438 explicit_instantiation: TEMPLATE declaration .

    $default  reduce using rule 438 (explicit_instantiation)


state 161

  459 COLONCOLON_opt: COLONCOLON .

    $default  reduce using rule 459 (COLONCOLON_opt)


state 162

  228 elaborated_type_specifier: TYPENAME COLONCOLON_opt . nested_name_specifier identifier
  229                          | TYPENAME COLONCOLON_opt . nested_name_specifier identifier '<' template_argument_list '>'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 230
    template_id              go to state 94


state 163

  251 using_declaration: USING COLONCOLON . nested_name_specifier unqualified_id ';'
  253                  | USING COLONCOLON . unqualified_id ';'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    unqualified_id           go to state 231
    nested_name_specifier    go to state 232
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 164

  254 using_directive: USING NAMESPACE . COLONCOLON nested_name_specifier namespace_name ';'
  255                | USING NAMESPACE . COLONCOLON namespace_name ';'
  256                | USING NAMESPACE . nested_name_specifier namespace_name ';'
  257                | USING NAMESPACE . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 233

    namespace_name           go to state 234
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 235
    template_id              go to state 94


state 165

  249 using_declaration: USING TYPENAME . COLONCOLON nested_name_specifier unqualified_id ';'
  250                  | USING TYPENAME . nested_name_specifier unqualified_id ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 236

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 237
    template_id              go to state 94


state 166

  252 using_declaration: USING nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 44

    identifier              go to state 53
    unqualified_id          go to state 238
    conversion_function_id  go to state 91
    operator_function_id    go to state 92


state 167

  278 ptr_operator: COLONCOLON . nested_name_specifier '*'
  279             | COLONCOLON . nested_name_specifier '*' cv_qualifier_seq
  285 declarator_id: COLONCOLON . id_expression
  286              | COLONCOLON . nested_name_specifier type_name
  287              | COLONCOLON . type_name

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    typedef_name             go to state 47
    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 50
    enum_name                go to state 51
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 99
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 239
    type_name                go to state 101
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 168

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  276 ptr_operator: nested_name_specifier . '*'
  277             | nested_name_specifier . '*' cv_qualifier_seq

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    TEMPLATE    shift, and go to state 177
    '~'         shift, and go to state 44
    '*'         shift, and go to state 178

    identifier              go to state 53
    unqualified_id          go to state 180
    conversion_function_id  go to state 91
    operator_function_id    go to state 92


state 169

  272 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 240


state 170

   30 unqualified_id: '~' class_name .

    $default  reduce using rule 30 (unqualified_id)


state 171

  274 ptr_operator: '*' cv_qualifier_seq .

    $default  reduce using rule 274 (ptr_operator)


state 172

  280 cv_qualifier_seq: cv_qualifier .
  281                 | cv_qualifier . cv_qualifier_seq

    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 280 (cv_qualifier_seq)

    cv_qualifier_seq  go to state 241
    cv_qualifier      go to state 172


state 173

   34 nested_name_specifier: namespace_name COLONCOLON . nested_name_specifier
   36                      | namespace_name COLONCOLON .

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    NAMESPACE_NAME  [reduce using rule 36 (nested_name_specifier)]
    CLASS_NAME      [reduce using rule 36 (nested_name_specifier)]
    TEMPLATE_NAME   [reduce using rule 36 (nested_name_specifier)]
    $default        reduce using rule 36 (nested_name_specifier)

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 242
    template_id              go to state 94


state 174

   33 nested_name_specifier: class_name COLONCOLON . nested_name_specifier
   35                      | class_name COLONCOLON .

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    NAMESPACE_NAME  [reduce using rule 35 (nested_name_specifier)]
    CLASS_NAME      [reduce using rule 35 (nested_name_specifier)]
    TEMPLATE_NAME   [reduce using rule 35 (nested_name_specifier)]
    $default        reduce using rule 35 (nested_name_specifier)

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 243
    template_id              go to state 94


state 175

  432 template_id: template_name '<' . template_argument_list '>'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 247
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 252
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 253
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 269
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 278
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 297
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 298
    type_specifier_seq         go to state 299
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    template_argument_list     go to state 300
    template_argument          go to state 301
    throw_expression           go to state 302


state 176

    0 $accept: translation_unit $end .

    $default  accept


state 177

   32 qualified_id: nested_name_specifier TEMPLATE . unqualified_id

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 44

    identifier              go to state 53
    unqualified_id          go to state 303
    conversion_function_id  go to state 91
    operator_function_id    go to state 92


state 178

  276 ptr_operator: nested_name_specifier '*' .
  277             | nested_name_specifier '*' . cv_qualifier_seq

    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 276 (ptr_operator)

    cv_qualifier_seq  go to state 304
    cv_qualifier      go to state 172


state 179

  220 type_name: class_name .

    $default  reduce using rule 220 (type_name)


state 180

   31 qualified_id: nested_name_specifier unqualified_id .

    $default  reduce using rule 31 (qualified_id)


state 181

  206 simple_type_specifier: nested_name_specifier type_name .

    $default  reduce using rule 206 (simple_type_specifier)


state 182

  170 declaration_seq: declaration_seq declaration .

    $default  reduce using rule 170 (declaration_seq)


state 183

  195 storage_class_specifier: EXTERN .

    $default  reduce using rule 195 (storage_class_specifier)


state 184

  184 simple_declaration: decl_specifier_seq ';' .

    $default  reduce using rule 184 (simple_declaration)


state 185

  191 decl_specifier_seq: decl_specifier_seq decl_specifier .

    $default  reduce using rule 191 (decl_specifier_seq)


state 186

  183 simple_declaration: decl_specifier_seq init_declarator_list . ';'
  262 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 305
    ';'  shift, and go to state 306


state 187

  261 init_declarator_list: init_declarator .

    $default  reduce using rule 261 (init_declarator_list)


state 188

  263 init_declarator: declarator . initializer_opt
  310 function_definition: decl_specifier_seq declarator . ctor_initializer_opt function_body
  312                    | decl_specifier_seq declarator . function_try_block

    TRY  shift, and go to state 189
    '('  shift, and go to state 307
    ':'  shift, and go to state 190
    '='  shift, and go to state 308

    '{'       reduce using rule 484 (ctor_initializer_opt)
    $default  reduce using rule 474 (initializer_opt)

    initializer           go to state 309
    ctor_initializer      go to state 191
    function_try_block    go to state 310
    initializer_opt       go to state 311
    ctor_initializer_opt  go to state 312


state 189

  441 function_try_block: TRY . ctor_initializer_opt function_body handler_seq

    ':'  shift, and go to state 190

    $default  reduce using rule 484 (ctor_initializer_opt)

    ctor_initializer      go to state 191
    ctor_initializer_opt  go to state 313


state 190

  369 ctor_initializer: ':' . mem_initializer_list

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 314

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 315
    template_name            go to state 52
    identifier               go to state 316
    nested_name_specifier    go to state 317
    mem_initializer_list     go to state 318
    mem_initializer          go to state 319
    mem_initializer_id       go to state 320
    template_id              go to state 94


state 191

  485 ctor_initializer_opt: ctor_initializer .

    $default  reduce using rule 485 (ctor_initializer_opt)


state 192

  311 function_definition: declarator function_try_block .

    $default  reduce using rule 311 (function_definition)


state 193

  309 function_definition: declarator ctor_initializer_opt . function_body

    '{'  shift, and go to state 321

    compound_statement  go to state 322
    function_body       go to state 323


state 194

  267 direct_declarator: direct_declarator '(' . parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  268                  | direct_declarator '(' . parameter_declaration_clause ')' cv_qualifier_seq
  269                  | direct_declarator '(' . parameter_declaration_clause ')' exception_specification
  270                  | direct_declarator '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 324
    COLONCOLON      shift, and go to state 113
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    $default  reduce using rule 301 (parameter_declaration_clause)

    typedef_name                  go to state 47
    namespace_name                go to state 48
    original_namespace_name       go to state 49
    class_name                    go to state 50
    enum_name                     go to state 51
    template_name                 go to state 52
    nested_name_specifier         go to state 154
    decl_specifier                go to state 63
    decl_specifier_seq            go to state 325
    storage_class_specifier       go to state 65
    function_specifier            go to state 66
    type_specifier                go to state 67
    simple_type_specifier         go to state 68
    type_name                     go to state 69
    elaborated_type_specifier     go to state 70
    enum_specifier                go to state 71
    cv_qualifier                  go to state 85
    parameter_declaration_clause  go to state 326
    parameter_declaration_list    go to state 327
    parameter_declaration         go to state 328
    class_specifier               go to state 88
    class_head                    go to state 89
    class_key                     go to state 90
    template_id                   go to state 94


state 195

  271 direct_declarator: direct_declarator '[' . constant_expression_opt ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    $default  reduce using rule 476 (constant_expression_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 331
    conditional_expression     go to state 332
    constant_expression        go to state 333
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    constant_expression_opt    go to state 334


state 196

  265 declarator: ptr_operator declarator .

    $default  reduce using rule 265 (declarator)


state 197

  321 class_specifier: class_head '{' . member_specification_opt '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    PRIVATE         shift, and go to state 335
    PROTECTED       shift, and go to state 336
    PUBLIC          shift, and go to state 337
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 338
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46
    ';'             shift, and go to state 339

    TEMPLATE  reduce using rule 494 (EXPORT_opt)
    ';'       [reduce using rule 341 (member_declarator)]
    '}'       reduce using rule 488 (member_specification_opt)
    $default  reduce using rule 341 (member_declarator)

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 340
    id_expression              go to state 55
    unqualified_id             go to state 56
    qualified_id               go to state 341
    nested_name_specifier      go to state 58
    decl_specifier             go to state 63
    decl_specifier_seq         go to state 342
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    using_declaration          go to state 343
    declarator                 go to state 344
    direct_declarator          go to state 83
    ptr_operator               go to state 84
    cv_qualifier               go to state 85
    declarator_id              go to state 86
    function_definition        go to state 345
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    member_specification       go to state 346
    member_declaration         go to state 347
    member_declarator_list     go to state 348
    member_declarator          go to state 349
    access_specifier           go to state 350
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_declaration       go to state 351
    template_id                go to state 94
    member_specification_opt   go to state 352
    EXPORT_opt                 go to state 98


state 198

  223 elaborated_type_specifier: class_key COLONCOLON . nested_name_specifier identifier
  224                          | class_key COLONCOLON . identifier

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 353
    nested_name_specifier    go to state 354
    template_id              go to state 94


state 199

  322 class_head: class_key identifier .
  323           | class_key identifier . base_clause

    ':'  shift, and go to state 355

    $default  reduce using rule 322 (class_head)

    base_clause  go to state 356


state 200

  324 class_head: class_key nested_name_specifier . identifier
  325           | class_key nested_name_specifier . identifier base_clause

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 357


state 201

  421 template_declaration: EXPORT_opt TEMPLATE . '<' template_parameter_list '>' declaration

    '<'  shift, and go to state 358


state 202

  278 ptr_operator: COLONCOLON nested_name_specifier '*' .
  279             | COLONCOLON nested_name_specifier '*' . cv_qualifier_seq

    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 278 (ptr_operator)

    cv_qualifier_seq  go to state 359
    cv_qualifier      go to state 172


state 203

  286 declarator_id: COLONCOLON nested_name_specifier type_name .

    $default  reduce using rule 286 (declarator_id)


state 204

  207 simple_type_specifier: COLONCOLON nested_name_specifier_opt type_name .

    $default  reduce using rule 207 (simple_type_specifier)


state 205

  258 asm_definition: ASM '(' string_literal . ')' ';'

    ')'  shift, and go to state 360


state 206

  226 elaborated_type_specifier: ENUM COLONCOLON identifier .

    $default  reduce using rule 226 (elaborated_type_specifier)


state 207

  225 elaborated_type_specifier: ENUM COLONCOLON nested_name_specifier . identifier

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 361


state 208

  230 enum_specifier: ENUM identifier '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 472 (enumerator_list_opt)

    identifier             go to state 362
    enumerator_list        go to state 363
    enumerator_definition  go to state 364
    enumerator             go to state 365
    enumerator_list_opt    go to state 366


state 209

  227 elaborated_type_specifier: ENUM nested_name_specifier identifier .

    $default  reduce using rule 227 (elaborated_type_specifier)


state 210

  259 linkage_specification: EXTERN string_literal '{' . declaration_seq_opt '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 494 (EXPORT_opt)]
    $default  reduce using rule 452 (declaration_seq_opt)

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration_seq                 go to state 59
    declaration                     go to state 60
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    declaration_seq_opt             go to state 367
    EXPORT_opt                      go to state 98


state 211

  260 linkage_specification: EXTERN string_literal declaration .

    $default  reduce using rule 260 (linkage_specification)


state 212

  242 unnamed_namespace_definition: NAMESPACE '{' namespace_body . '}'

    '}'  shift, and go to state 368


state 213

  243 namespace_body: declaration_seq_opt .

    $default  reduce using rule 243 (namespace_body)


state 214

  241 extension_namespace_definition: NAMESPACE original_namespace_name '{' . namespace_body '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 494 (EXPORT_opt)]
    $default  reduce using rule 452 (declaration_seq_opt)

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration_seq                 go to state 59
    declaration                     go to state 60
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_body                  go to state 369
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    declaration_seq_opt             go to state 213
    EXPORT_opt                      go to state 98


state 215

  244 namespace_alias_definition: NAMESPACE identifier '=' . qualified_namespace_specifier ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 370

    namespace_name                 go to state 371
    original_namespace_name        go to state 49
    class_name                     go to state 105
    template_name                  go to state 52
    nested_name_specifier          go to state 372
    qualified_namespace_specifier  go to state 373
    template_id                    go to state 94


state 216

  240 original_namespace_definition: NAMESPACE identifier '{' . namespace_body '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 494 (EXPORT_opt)]
    $default  reduce using rule 452 (declaration_seq_opt)

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration_seq                 go to state 59
    declaration                     go to state 60
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_body                  go to state 374
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    declaration_seq_opt             go to state 213
    EXPORT_opt                      go to state 98


state 217

  455 nested_name_specifier_opt: nested_name_specifier .

    $default  reduce using rule 455 (nested_name_specifier_opt)


state 218

  382 operator: DELETE '[' . ']'

    ']'  shift, and go to state 375


state 219

  381 operator: NEW '[' . ']'

    ']'  shift, and go to state 376


state 220

  419 operator: '(' ')' .

    $default  reduce using rule 419 (operator)


state 221

  420 operator: '[' ']' .

    $default  reduce using rule 420 (operator)


state 222

  481 type_specifier_seq_opt: type_specifier_seq .

    $default  reduce using rule 481 (type_specifier_seq_opt)


state 223

  289 type_specifier_seq: type_specifier type_specifier_seq_opt .

    $default  reduce using rule 289 (type_specifier_seq)


state 224

  278 ptr_operator: COLONCOLON . nested_name_specifier '*'
  279             | COLONCOLON . nested_name_specifier '*' cv_qualifier_seq

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 377
    template_id              go to state 94


state 225

  276 ptr_operator: nested_name_specifier . '*'
  277             | nested_name_specifier . '*' cv_qualifier_seq

    '*'  shift, and go to state 178


state 226

  368 conversion_declarator: ptr_operator . conversion_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 224
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '*'       [reduce using rule 492 (conversion_declarator_opt)]
    '&'       [reduce using rule 492 (conversion_declarator_opt)]
    $default  reduce using rule 492 (conversion_declarator_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    nested_name_specifier      go to state 225
    ptr_operator               go to state 226
    conversion_declarator      go to state 227
    template_id                go to state 94
    conversion_declarator_opt  go to state 378


state 227

  493 conversion_declarator_opt: conversion_declarator .

    $default  reduce using rule 493 (conversion_declarator_opt)


state 228

  367 conversion_type_id: type_specifier_seq conversion_declarator_opt .

    $default  reduce using rule 367 (conversion_type_id)


state 229

  439 explicit_specialization: TEMPLATE '<' '>' . declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 494 (EXPORT_opt)]

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration                     go to state 379
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    EXPORT_opt                      go to state 98


state 230

  228 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier . identifier
  229                          | TYPENAME COLONCOLON_opt nested_name_specifier . identifier '<' template_argument_list '>'

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 380


state 231

  253 using_declaration: USING COLONCOLON unqualified_id . ';'

    ';'  shift, and go to state 381


state 232

  251 using_declaration: USING COLONCOLON nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 44

    identifier              go to state 53
    unqualified_id          go to state 382
    conversion_function_id  go to state 91
    operator_function_id    go to state 92


state 233

  254 using_directive: USING NAMESPACE COLONCOLON . nested_name_specifier namespace_name ';'
  255                | USING NAMESPACE COLONCOLON . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 383
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 384
    template_id              go to state 94


state 234

   34 nested_name_specifier: namespace_name . COLONCOLON nested_name_specifier
   36                      | namespace_name . COLONCOLON
  257 using_directive: USING NAMESPACE namespace_name . ';'

    COLONCOLON  shift, and go to state 173
    ';'         shift, and go to state 385


state 235

  256 using_directive: USING NAMESPACE nested_name_specifier . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 386
    original_namespace_name  go to state 49


state 236

  249 using_declaration: USING TYPENAME COLONCOLON . nested_name_specifier unqualified_id ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 387
    template_id              go to state 94


state 237

  250 using_declaration: USING TYPENAME nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 44

    identifier              go to state 53
    unqualified_id          go to state 388
    conversion_function_id  go to state 91
    operator_function_id    go to state 92


state 238

  252 using_declaration: USING nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 389


state 239

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  278 ptr_operator: COLONCOLON nested_name_specifier . '*'
  279             | COLONCOLON nested_name_specifier . '*' cv_qualifier_seq
  286 declarator_id: COLONCOLON nested_name_specifier . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 4
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 177
    '~'            shift, and go to state 44
    '*'            shift, and go to state 202

    typedef_name            go to state 47
    class_name              go to state 179
    enum_name               go to state 51
    template_name           go to state 52
    identifier              go to state 53
    unqualified_id          go to state 180
    type_name               go to state 203
    conversion_function_id  go to state 91
    operator_function_id    go to state 92
    template_id             go to state 94


state 240

  272 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 272 (direct_declarator)


state 241

  281 cv_qualifier_seq: cv_qualifier cv_qualifier_seq .

    $default  reduce using rule 281 (cv_qualifier_seq)


state 242

   34 nested_name_specifier: namespace_name COLONCOLON nested_name_specifier .

    $default  reduce using rule 34 (nested_name_specifier)


state 243

   33 nested_name_specifier: class_name COLONCOLON nested_name_specifier .

    $default  reduce using rule 33 (nested_name_specifier)


state 244

   14 integer_literal: INTEGER .

    $default  reduce using rule 14 (integer_literal)


state 245

   16 floating_literal: FLOATING .

    $default  reduce using rule 16 (floating_literal)


state 246

   15 character_literal: CHARACTER .

    $default  reduce using rule 15 (character_literal)


state 247

   73 new_expression: COLONCOLON . NEW new_placement_opt new_type_id new_initializer_opt
   75               | COLONCOLON . NEW new_placement_opt '(' type_id ')' new_initializer_opt
   84 delete_expression: COLONCOLON . DELETE cast_expression
   86                  | COLONCOLON . DELETE '[' ']' cast_expression
  207 simple_type_specifier: COLONCOLON . nested_name_specifier_opt type_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    DELETE          shift, and go to state 390
    NEW             shift, and go to state 391

    CLASS_NAME     [reduce using rule 454 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 454 (nested_name_specifier_opt)]
    $default       reduce using rule 454 (nested_name_specifier_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    nested_name_specifier      go to state 217
    template_id                go to state 94
    nested_name_specifier_opt  go to state 102


state 248

   59 unary_expression: PLUSPLUS . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 270
    integer_literal          go to state 271
    character_literal        go to state 272
    floating_literal         go to state 273
    string_literal           go to state 274
    boolean_literal          go to state 275
    primary_expression       go to state 276
    id_expression            go to state 277
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 330
    postfix_expression       go to state 279
    unary_expression         go to state 280
    unary_operator           go to state 281
    new_expression           go to state 282
    delete_expression        go to state 283
    cast_expression          go to state 392
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 249

   60 unary_expression: MINUSMINUS . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 270
    integer_literal          go to state 271
    character_literal        go to state 272
    floating_literal         go to state 273
    string_literal           go to state 274
    boolean_literal          go to state 275
    primary_expression       go to state 276
    id_expression            go to state 277
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 330
    postfix_expression       go to state 279
    unary_expression         go to state 280
    unary_operator           go to state 281
    new_expression           go to state 282
    delete_expression        go to state 283
    cast_expression          go to state 393
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 250

   53 postfix_expression: CONST_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 394


state 251

   83 delete_expression: DELETE . cast_expression
   85                  | DELETE . '[' ']' cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '['               shift, and go to state 395
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 270
    integer_literal          go to state 271
    character_literal        go to state 272
    floating_literal         go to state 273
    string_literal           go to state 274
    boolean_literal          go to state 275
    primary_expression       go to state 276
    id_expression            go to state 277
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 330
    postfix_expression       go to state 279
    unary_expression         go to state 280
    unary_operator           go to state 281
    new_expression           go to state 282
    delete_expression        go to state 283
    cast_expression          go to state 396
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 252

   50 postfix_expression: DYNAMIC_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 397


state 253

   19 boolean_literal: FALSE .

    $default  reduce using rule 19 (boolean_literal)


state 254

   72 new_expression: NEW . new_placement_opt new_type_id new_initializer_opt
   74               | NEW . new_placement_opt '(' type_id ')' new_initializer_opt

    '('  shift, and go to state 398

    '('       [reduce using rule 460 (new_placement_opt)]
    $default  reduce using rule 460 (new_placement_opt)

    new_placement      go to state 399
    new_placement_opt  go to state 400


state 255

   52 postfix_expression: REINTERPRET_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 401


state 256

   64 unary_expression: SIZEOF . unary_expression
   65                 | SIZEOF . '(' type_id ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 402
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 270
    integer_literal          go to state 271
    character_literal        go to state 272
    floating_literal         go to state 273
    string_literal           go to state 274
    boolean_literal          go to state 275
    primary_expression       go to state 276
    id_expression            go to state 277
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 330
    postfix_expression       go to state 279
    unary_expression         go to state 403
    unary_operator           go to state 281
    new_expression           go to state 282
    delete_expression        go to state 283
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 257

   51 postfix_expression: STATIC_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 404


state 258

   22 primary_expression: THIS .

    $default  reduce using rule 22 (primary_expression)


state 259

  448 throw_expression: THROW . assignment_expression_opt

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    $default  reduce using rule 498 (assignment_expression_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 405
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302
    assignment_expression_opt  go to state 406


state 260

   18 boolean_literal: TRUE .

    $default  reduce using rule 18 (boolean_literal)


state 261

   54 postfix_expression: TYPEID . '(' expression ')'
   55                   | TYPEID . '(' type_id ')'

    '('  shift, and go to state 407


state 262

   23 primary_expression: '(' . expression ')'
   88 cast_expression: '(' . type_id ')' cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 247
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 252
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 253
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 278
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 408
    expression                 go to state 409
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 410
    type_specifier_seq         go to state 299
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 263

   30 unqualified_id: '~' . class_name
   71 unary_operator: '~' .

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    CLASS_NAME     [reduce using rule 71 (unary_operator)]
    TEMPLATE_NAME  [reduce using rule 71 (unary_operator)]
    $default       reduce using rule 71 (unary_operator)

    class_name     go to state 170
    template_name  go to state 52
    template_id    go to state 94


state 264

   61 unary_expression: '*' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 270
    integer_literal          go to state 271
    character_literal        go to state 272
    floating_literal         go to state 273
    string_literal           go to state 274
    boolean_literal          go to state 275
    primary_expression       go to state 276
    id_expression            go to state 277
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 330
    postfix_expression       go to state 279
    unary_expression         go to state 280
    unary_operator           go to state 281
    new_expression           go to state 282
    delete_expression        go to state 283
    cast_expression          go to state 411
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 265

   62 unary_expression: '&' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 270
    integer_literal          go to state 271
    character_literal        go to state 272
    floating_literal         go to state 273
    string_literal           go to state 274
    boolean_literal          go to state 275
    primary_expression       go to state 276
    id_expression            go to state 277
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 330
    postfix_expression       go to state 279
    unary_expression         go to state 280
    unary_operator           go to state 281
    new_expression           go to state 282
    delete_expression        go to state 283
    cast_expression          go to state 412
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 266

   68 unary_operator: '+' .

    $default  reduce using rule 68 (unary_operator)


state 267

   69 unary_operator: '-' .

    $default  reduce using rule 69 (unary_operator)


state 268

   70 unary_operator: '!' .

    $default  reduce using rule 70 (unary_operator)


state 269

  432 template_id: template_name . '<' template_argument_list '>'
  437 template_argument: template_name .

    '<'  shift, and go to state 175

    $default  reduce using rule 437 (template_argument)


state 270

   21 primary_expression: literal .

    $default  reduce using rule 21 (primary_expression)


state 271

    9 literal: integer_literal .

    $default  reduce using rule 9 (literal)


state 272

   10 literal: character_literal .

    $default  reduce using rule 10 (literal)


state 273

   11 literal: floating_literal .

    $default  reduce using rule 11 (literal)


state 274

   12 literal: string_literal .

    $default  reduce using rule 12 (literal)


state 275

   13 literal: boolean_literal .

    $default  reduce using rule 13 (literal)


state 276

   37 postfix_expression: primary_expression .

    $default  reduce using rule 37 (postfix_expression)


state 277

   24 primary_expression: id_expression .

    $default  reduce using rule 24 (primary_expression)


state 278

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  206 simple_type_specifier: nested_name_specifier . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 4
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 177
    '~'            shift, and go to state 44

    typedef_name            go to state 47
    class_name              go to state 179
    enum_name               go to state 51
    template_name           go to state 52
    identifier              go to state 53
    unqualified_id          go to state 180
    type_name               go to state 181
    conversion_function_id  go to state 91
    operator_function_id    go to state 92
    template_id             go to state 94


state 279

   38 postfix_expression: postfix_expression . '[' expression ']'
   39                   | postfix_expression . '(' expression_list_opt ')'
   40                   | postfix_expression . '.' TEMPLATE COLONCOLON id_expression
   41                   | postfix_expression . '.' TEMPLATE id_expression
   42                   | postfix_expression . '.' COLONCOLON id_expression
   43                   | postfix_expression . '.' id_expression
   44                   | postfix_expression . ARROW TEMPLATE COLONCOLON id_expression
   45                   | postfix_expression . ARROW TEMPLATE id_expression
   46                   | postfix_expression . ARROW COLONCOLON id_expression
   47                   | postfix_expression . ARROW id_expression
   48                   | postfix_expression . PLUSPLUS
   49                   | postfix_expression . MINUSMINUS
   58 unary_expression: postfix_expression .

    PLUSPLUS    shift, and go to state 413
    MINUSMINUS  shift, and go to state 414
    ARROW       shift, and go to state 415
    '('         shift, and go to state 416
    '['         shift, and go to state 417
    '.'         shift, and go to state 418

    $default  reduce using rule 58 (unary_expression)


state 280

   87 cast_expression: unary_expression .

    $default  reduce using rule 87 (cast_expression)


state 281

   63 unary_expression: unary_operator . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 270
    integer_literal          go to state 271
    character_literal        go to state 272
    floating_literal         go to state 273
    string_literal           go to state 274
    boolean_literal          go to state 275
    primary_expression       go to state 276
    id_expression            go to state 277
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 330
    postfix_expression       go to state 279
    unary_expression         go to state 280
    unary_operator           go to state 281
    new_expression           go to state 282
    delete_expression        go to state 283
    cast_expression          go to state 419
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 282

   66 unary_expression: new_expression .

    $default  reduce using rule 66 (unary_expression)


state 283

   67 unary_expression: delete_expression .

    $default  reduce using rule 67 (unary_expression)


state 284

   89 pm_expression: cast_expression .

    $default  reduce using rule 89 (pm_expression)


state 285

   90 pm_expression: pm_expression . DOTSTAR cast_expression
   91              | pm_expression . ARROWSTAR cast_expression
   92 multiplicative_expression: pm_expression .

    DOTSTAR    shift, and go to state 420
    ARROWSTAR  shift, and go to state 421

    $default  reduce using rule 92 (multiplicative_expression)


state 286

   93 multiplicative_expression: multiplicative_expression . '*' pm_expression
   94                          | multiplicative_expression . '/' pm_expression
   95                          | multiplicative_expression . '%' pm_expression
   96 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 422
    '/'  shift, and go to state 423
    '%'  shift, and go to state 424

    $default  reduce using rule 96 (additive_expression)


state 287

   97 additive_expression: additive_expression . '+' multiplicative_expression
   98                    | additive_expression . '-' multiplicative_expression
   99 shift_expression: additive_expression .

    '+'  shift, and go to state 425
    '-'  shift, and go to state 426

    $default  reduce using rule 99 (shift_expression)


state 288

  100 shift_expression: shift_expression . SL additive_expression
  101                 | shift_expression . SR additive_expression
  102 relational_expression: shift_expression .

    SL  shift, and go to state 427
    SR  shift, and go to state 428

    $default  reduce using rule 102 (relational_expression)


state 289

  103 relational_expression: relational_expression . '<' shift_expression
  104                      | relational_expression . '>' shift_expression
  105                      | relational_expression . LTEQ shift_expression
  106                      | relational_expression . GTEQ shift_expression
  107 equality_expression: relational_expression .

    LTEQ  shift, and go to state 429
    GTEQ  shift, and go to state 430
    '<'   shift, and go to state 431
    '>'   shift, and go to state 432

    '>'       [reduce using rule 107 (equality_expression)]
    $default  reduce using rule 107 (equality_expression)


state 290

  108 equality_expression: equality_expression . EQ relational_expression
  109                    | equality_expression . NOTEQ relational_expression
  110 and_expression: equality_expression .

    EQ     shift, and go to state 433
    NOTEQ  shift, and go to state 434

    $default  reduce using rule 110 (and_expression)


state 291

  111 and_expression: and_expression . '&' equality_expression
  112 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 435

    $default  reduce using rule 112 (exclusive_or_expression)


state 292

  113 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  114 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 436

    $default  reduce using rule 114 (inclusive_or_expression)


state 293

  115 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  116 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 437

    $default  reduce using rule 116 (logical_and_expression)


state 294

  117 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression
  118 logical_or_expression: logical_and_expression .

    ANDAND  shift, and go to state 438

    $default  reduce using rule 118 (logical_or_expression)


state 295

  119 logical_or_expression: logical_or_expression . OROR logical_and_expression
  120 conditional_expression: logical_or_expression .
  121                       | logical_or_expression . '?' expression ':' assignment_expression
  123 assignment_expression: logical_or_expression . assignment_operator assignment_expression

    ADDEQ  shift, and go to state 439
    SUBEQ  shift, and go to state 440
    MULEQ  shift, and go to state 441
    DIVEQ  shift, and go to state 442
    MODEQ  shift, and go to state 443
    XOREQ  shift, and go to state 444
    ANDEQ  shift, and go to state 445
    OREQ   shift, and go to state 446
    SREQ   shift, and go to state 447
    SLEQ   shift, and go to state 448
    OROR   shift, and go to state 449
    '?'    shift, and go to state 450
    '='    shift, and go to state 451

    $default  reduce using rule 120 (conditional_expression)

    assignment_operator  go to state 452


state 296

  122 assignment_expression: conditional_expression .

    $default  reduce using rule 122 (assignment_expression)


state 297

  435 template_argument: assignment_expression .

    $default  reduce using rule 435 (template_argument)


state 298

  436 template_argument: type_id .

    $default  reduce using rule 436 (template_argument)


state 299

  288 type_id: type_specifier_seq . abstract_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 224
    '('             shift, and go to state 453
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '('       [reduce using rule 482 (direct_abstract_declarator_opt)]
    '['       reduce using rule 482 (direct_abstract_declarator_opt)
    $default  reduce using rule 478 (abstract_declarator_opt)

    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 105
    template_name                   go to state 52
    nested_name_specifier           go to state 225
    ptr_operator                    go to state 454
    abstract_declarator             go to state 455
    direct_abstract_declarator      go to state 456
    template_id                     go to state 94
    abstract_declarator_opt         go to state 457
    direct_abstract_declarator_opt  go to state 458


state 300

  432 template_id: template_name '<' template_argument_list . '>'
  434 template_argument_list: template_argument_list . ',' template_argument

    '>'  shift, and go to state 459
    ','  shift, and go to state 460


state 301

  433 template_argument_list: template_argument .

    $default  reduce using rule 433 (template_argument_list)


state 302

  124 assignment_expression: throw_expression .

    $default  reduce using rule 124 (assignment_expression)


state 303

   32 qualified_id: nested_name_specifier TEMPLATE unqualified_id .

    $default  reduce using rule 32 (qualified_id)


state 304

  277 ptr_operator: nested_name_specifier '*' cv_qualifier_seq .

    $default  reduce using rule 277 (ptr_operator)


state 305

  262 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 167
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 55
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 168
    init_declarator          go to state 461
    declarator               go to state 462
    direct_declarator        go to state 83
    ptr_operator             go to state 84
    declarator_id            go to state 86
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 306

  183 simple_declaration: decl_specifier_seq init_declarator_list ';' .

    $default  reduce using rule 183 (simple_declaration)


state 307

  315 initializer: '(' . expression_list ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    expression_list            go to state 463
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 464
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 308

  314 initializer: '=' . initializer_clause

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268
    '{'               shift, and go to state 465

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 466
    initializer_clause         go to state 467
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 309

  475 initializer_opt: initializer .

    $default  reduce using rule 475 (initializer_opt)


state 310

  312 function_definition: decl_specifier_seq declarator function_try_block .

    $default  reduce using rule 312 (function_definition)


state 311

  263 init_declarator: declarator initializer_opt .

    $default  reduce using rule 263 (init_declarator)


state 312

  310 function_definition: decl_specifier_seq declarator ctor_initializer_opt . function_body

    '{'  shift, and go to state 321

    compound_statement  go to state 322
    function_body       go to state 468


state 313

  441 function_try_block: TRY ctor_initializer_opt . function_body handler_seq

    '{'  shift, and go to state 321

    compound_statement  go to state 322
    function_body       go to state 469


state 314

  373 mem_initializer_id: COLONCOLON . nested_name_specifier class_name
  374                   | COLONCOLON . class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 470
    template_name            go to state 52
    nested_name_specifier    go to state 471
    template_id              go to state 94


state 315

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON
  376 mem_initializer_id: class_name .

    COLONCOLON  shift, and go to state 174

    $default  reduce using rule 376 (mem_initializer_id)


state 316

  377 mem_initializer_id: identifier .

    $default  reduce using rule 377 (mem_initializer_id)


state 317

  375 mem_initializer_id: nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 472
    template_name  go to state 52
    template_id    go to state 94


state 318

  369 ctor_initializer: ':' mem_initializer_list .

    $default  reduce using rule 369 (ctor_initializer)


state 319

  370 mem_initializer_list: mem_initializer .
  371                     | mem_initializer . ',' mem_initializer_list

    ','  shift, and go to state 473

    $default  reduce using rule 370 (mem_initializer_list)


state 320

  372 mem_initializer: mem_initializer_id . '(' expression_list_opt ')'

    '('  shift, and go to state 474


state 321

  151 compound_statement: '{' . statement_seq_opt '}'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 247
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 475
    CASE              shift, and go to state 476
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 250
    CONTINUE          shift, and go to state 477
    DEFAULT           shift, and go to state 478
    DELETE            shift, and go to state 251
    DO                shift, and go to state 479
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 252
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 253
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 480
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 481
    IF                shift, and go to state 482
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 483
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 255
    RETURN            shift, and go to state 484
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 256
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 257
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 485
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TRY               shift, and go to state 486
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 261
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 487
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268
    '{'               shift, and go to state 321

    '}'       reduce using rule 468 (statement_seq_opt)
    $default  reduce using rule 466 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 488
    literal                     go to state 270
    integer_literal             go to state 271
    character_literal           go to state 272
    floating_literal            go to state 273
    string_literal              go to state 274
    boolean_literal             go to state 275
    primary_expression          go to state 276
    id_expression               go to state 277
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 278
    postfix_expression          go to state 279
    unary_expression            go to state 280
    unary_operator              go to state 281
    new_expression              go to state 282
    delete_expression           go to state 283
    cast_expression             go to state 284
    pm_expression               go to state 285
    multiplicative_expression   go to state 286
    additive_expression         go to state 287
    shift_expression            go to state 288
    relational_expression       go to state 289
    equality_expression         go to state 290
    and_expression              go to state 291
    exclusive_or_expression     go to state 292
    inclusive_or_expression     go to state 293
    logical_and_expression      go to state 294
    logical_or_expression       go to state 295
    conditional_expression      go to state 296
    assignment_expression       go to state 408
    expression                  go to state 489
    statement                   go to state 490
    labeled_statement           go to state 491
    expression_statement        go to state 492
    compound_statement          go to state 493
    statement_seq               go to state 494
    selection_statement         go to state 495
    iteration_statement         go to state 496
    jump_statement              go to state 497
    declaration_statement       go to state 498
    block_declaration           go to state 499
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 500
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 501
    throw_expression            go to state 302
    expression_opt              go to state 502
    statement_seq_opt           go to state 503


state 322

  313 function_body: compound_statement .

    $default  reduce using rule 313 (function_body)


state 323

  309 function_definition: declarator ctor_initializer_opt function_body .

    $default  reduce using rule 309 (function_definition)


state 324

  300 parameter_declaration_clause: ELLIPSIS .

    $default  reduce using rule 300 (parameter_declaration_clause)


state 325

  191 decl_specifier_seq: decl_specifier_seq . decl_specifier
  305 parameter_declaration: decl_specifier_seq . declarator
  306                      | decl_specifier_seq . declarator '=' assignment_expression
  307                      | decl_specifier_seq . abstract_declarator_opt
  308                      | decl_specifier_seq . abstract_declarator_opt '=' assignment_expression

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 504
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '('       [reduce using rule 482 (direct_abstract_declarator_opt)]
    '['       reduce using rule 482 (direct_abstract_declarator_opt)
    $default  reduce using rule 478 (abstract_declarator_opt)

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    decl_specifier                  go to state 185
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    declarator                      go to state 505
    direct_declarator               go to state 83
    ptr_operator                    go to state 506
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    abstract_declarator             go to state 455
    direct_abstract_declarator      go to state 456
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_id                     go to state 94
    abstract_declarator_opt         go to state 507
    direct_abstract_declarator_opt  go to state 458


state 326

  267 direct_declarator: direct_declarator '(' parameter_declaration_clause . ')' cv_qualifier_seq exception_specification
  268                  | direct_declarator '(' parameter_declaration_clause . ')' cv_qualifier_seq
  269                  | direct_declarator '(' parameter_declaration_clause . ')' exception_specification
  270                  | direct_declarator '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 508


state 327

  298 parameter_declaration_clause: parameter_declaration_list . ELLIPSIS
  299                             | parameter_declaration_list .
  302                             | parameter_declaration_list . ',' ELLIPSIS
  304 parameter_declaration_list: parameter_declaration_list . ',' parameter_declaration

    ELLIPSIS  shift, and go to state 509
    ','       shift, and go to state 510

    $default  reduce using rule 299 (parameter_declaration_clause)


state 328

  303 parameter_declaration_list: parameter_declaration .

    $default  reduce using rule 303 (parameter_declaration_list)


state 329

   73 new_expression: COLONCOLON . NEW new_placement_opt new_type_id new_initializer_opt
   75               | COLONCOLON . NEW new_placement_opt '(' type_id ')' new_initializer_opt
   84 delete_expression: COLONCOLON . DELETE cast_expression
   86                  | COLONCOLON . DELETE '[' ']' cast_expression

    DELETE  shift, and go to state 390
    NEW     shift, and go to state 391


state 330

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    TEMPLATE    shift, and go to state 177
    '~'         shift, and go to state 44

    identifier              go to state 53
    unqualified_id          go to state 180
    conversion_function_id  go to state 91
    operator_function_id    go to state 92


state 331

  119 logical_or_expression: logical_or_expression . OROR logical_and_expression
  120 conditional_expression: logical_or_expression .
  121                       | logical_or_expression . '?' expression ':' assignment_expression

    OROR  shift, and go to state 449
    '?'   shift, and go to state 450

    $default  reduce using rule 120 (conditional_expression)


state 332

  138 constant_expression: conditional_expression .

    $default  reduce using rule 138 (constant_expression)


state 333

  477 constant_expression_opt: constant_expression .

    $default  reduce using rule 477 (constant_expression_opt)


state 334

  271 direct_declarator: direct_declarator '[' constant_expression_opt . ']'

    ']'  shift, and go to state 511


state 335

  363 access_specifier: PRIVATE .

    $default  reduce using rule 363 (access_specifier)


state 336

  364 access_specifier: PROTECTED .

    $default  reduce using rule 364 (access_specifier)


state 337

  365 access_specifier: PUBLIC .

    $default  reduce using rule 365 (access_specifier)


state 338

  249 using_declaration: USING . TYPENAME COLONCOLON nested_name_specifier unqualified_id ';'
  250                  | USING . TYPENAME nested_name_specifier unqualified_id ';'
  251                  | USING . COLONCOLON nested_name_specifier unqualified_id ';'
  252                  | USING . nested_name_specifier unqualified_id ';'
  253                  | USING . COLONCOLON unqualified_id ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 163
    TYPENAME        shift, and go to state 165

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 166
    template_id              go to state 94


state 339

  334 member_declaration: ';' .

    $default  reduce using rule 334 (member_declaration)


state 340

   27 unqualified_id: identifier .
  345 member_declarator: identifier . ':' constant_expression

    ':'  shift, and go to state 512

    ':'       [reduce using rule 27 (unqualified_id)]
    $default  reduce using rule 27 (unqualified_id)


state 341

   26 id_expression: qualified_id .
  336 member_declaration: qualified_id . ';'

    ';'  shift, and go to state 513

    ';'       [reduce using rule 26 (id_expression)]
    $default  reduce using rule 26 (id_expression)


state 342

  191 decl_specifier_seq: decl_specifier_seq . decl_specifier
  310 function_definition: decl_specifier_seq . declarator ctor_initializer_opt function_body
  312                    | decl_specifier_seq . declarator function_try_block
  331 member_declaration: decl_specifier_seq . member_declarator_list ';'
  332                   | decl_specifier_seq . ';'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46
    ';'             shift, and go to state 514

    ';'       [reduce using rule 341 (member_declarator)]
    $default  reduce using rule 341 (member_declarator)

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 340
    id_expression              go to state 55
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 58
    decl_specifier             go to state 185
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    declarator                 go to state 515
    direct_declarator          go to state 83
    ptr_operator               go to state 84
    cv_qualifier               go to state 85
    declarator_id              go to state 86
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    member_declarator_list     go to state 516
    member_declarator          go to state 349
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 343

  337 member_declaration: using_declaration .

    $default  reduce using rule 337 (member_declaration)


state 344

  309 function_definition: declarator . ctor_initializer_opt function_body
  311                    | declarator . function_try_block
  342 member_declarator: declarator .
  343                  | declarator . pure_specifier
  344                  | declarator . constant_initializer

    TRY  shift, and go to state 189
    ':'  shift, and go to state 190
    '='  shift, and go to state 517

    '{'       reduce using rule 484 (ctor_initializer_opt)
    $default  reduce using rule 342 (member_declarator)

    pure_specifier        go to state 518
    constant_initializer  go to state 519
    ctor_initializer      go to state 191
    function_try_block    go to state 192
    ctor_initializer_opt  go to state 193


state 345

  335 member_declaration: function_definition . SEMICOLON_opt

    ';'  shift, and go to state 520

    ';'       [reduce using rule 490 (SEMICOLON_opt)]
    $default  reduce using rule 490 (SEMICOLON_opt)

    SEMICOLON_opt  go to state 521


state 346

  489 member_specification_opt: member_specification .

    $default  reduce using rule 489 (member_specification_opt)


state 347

  329 member_specification: member_declaration . member_specification_opt

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    PRIVATE         shift, and go to state 335
    PROTECTED       shift, and go to state 336
    PUBLIC          shift, and go to state 337
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 338
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46
    ';'             shift, and go to state 339

    TEMPLATE  reduce using rule 494 (EXPORT_opt)
    ';'       [reduce using rule 341 (member_declarator)]
    '}'       reduce using rule 488 (member_specification_opt)
    $default  reduce using rule 341 (member_declarator)

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 340
    id_expression              go to state 55
    unqualified_id             go to state 56
    qualified_id               go to state 341
    nested_name_specifier      go to state 58
    decl_specifier             go to state 63
    decl_specifier_seq         go to state 342
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    using_declaration          go to state 343
    declarator                 go to state 344
    direct_declarator          go to state 83
    ptr_operator               go to state 84
    cv_qualifier               go to state 85
    declarator_id              go to state 86
    function_definition        go to state 345
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    member_specification       go to state 346
    member_declaration         go to state 347
    member_declarator_list     go to state 348
    member_declarator          go to state 349
    access_specifier           go to state 350
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_declaration       go to state 351
    template_id                go to state 94
    member_specification_opt   go to state 522
    EXPORT_opt                 go to state 98


state 348

  333 member_declaration: member_declarator_list . ';'
  340 member_declarator_list: member_declarator_list . ',' member_declarator

    ','  shift, and go to state 523
    ';'  shift, and go to state 524


state 349

  339 member_declarator_list: member_declarator .

    $default  reduce using rule 339 (member_declarator_list)


state 350

  330 member_specification: access_specifier . ':' member_specification_opt

    ':'  shift, and go to state 525


state 351

  338 member_declaration: template_declaration .

    $default  reduce using rule 338 (member_declaration)


state 352

  321 class_specifier: class_head '{' member_specification_opt . '}'

    '}'  shift, and go to state 526


state 353

  224 elaborated_type_specifier: class_key COLONCOLON identifier .

    $default  reduce using rule 224 (elaborated_type_specifier)


state 354

  223 elaborated_type_specifier: class_key COLONCOLON nested_name_specifier . identifier

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 527


state 355

  348 base_clause: ':' . base_specifier_list

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 528
    PRIVATE         shift, and go to state 335
    PROTECTED       shift, and go to state 336
    PUBLIC          shift, and go to state 337
    VIRTUAL         shift, and go to state 529

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 530
    template_name            go to state 52
    nested_name_specifier    go to state 531
    base_specifier_list      go to state 532
    base_specifier           go to state 533
    access_specifier         go to state 534
    template_id              go to state 94


state 356

  323 class_head: class_key identifier base_clause .

    $default  reduce using rule 323 (class_head)


state 357

  324 class_head: class_key nested_name_specifier identifier .
  325           | class_key nested_name_specifier identifier . base_clause

    ':'  shift, and go to state 355

    $default  reduce using rule 324 (class_head)

    base_clause  go to state 535


state 358

  421 template_declaration: EXPORT_opt TEMPLATE '<' . template_parameter_list '>' declaration

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 536
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 537
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 538
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    decl_specifier             go to state 63
    decl_specifier_seq         go to state 325
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    parameter_declaration      go to state 539
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_parameter_list    go to state 540
    template_parameter         go to state 541
    type_parameter             go to state 542
    template_id                go to state 94


state 359

  279 ptr_operator: COLONCOLON nested_name_specifier '*' cv_qualifier_seq .

    $default  reduce using rule 279 (ptr_operator)


state 360

  258 asm_definition: ASM '(' string_literal ')' . ';'

    ';'  shift, and go to state 543


state 361

  225 elaborated_type_specifier: ENUM COLONCOLON nested_name_specifier identifier .

    $default  reduce using rule 225 (elaborated_type_specifier)


state 362

  235 enumerator: identifier .

    $default  reduce using rule 235 (enumerator)


state 363

  232 enumerator_list: enumerator_list . ',' enumerator_definition
  473 enumerator_list_opt: enumerator_list .

    ','  shift, and go to state 544

    $default  reduce using rule 473 (enumerator_list_opt)


state 364

  231 enumerator_list: enumerator_definition .

    $default  reduce using rule 231 (enumerator_list)


state 365

  233 enumerator_definition: enumerator .
  234                      | enumerator . '=' constant_expression

    '='  shift, and go to state 545

    $default  reduce using rule 233 (enumerator_definition)


state 366

  230 enum_specifier: ENUM identifier '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 546


state 367

  259 linkage_specification: EXTERN string_literal '{' declaration_seq_opt . '}'

    '}'  shift, and go to state 547


state 368

  242 unnamed_namespace_definition: NAMESPACE '{' namespace_body '}' .

    $default  reduce using rule 242 (unnamed_namespace_definition)


state 369

  241 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body . '}'

    '}'  shift, and go to state 548


state 370

  245 qualified_namespace_specifier: COLONCOLON . nested_name_specifier namespace_name
  246                              | COLONCOLON . namespace_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 549
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 550
    template_id              go to state 94


state 371

   34 nested_name_specifier: namespace_name . COLONCOLON nested_name_specifier
   36                      | namespace_name . COLONCOLON
  248 qualified_namespace_specifier: namespace_name .

    COLONCOLON  shift, and go to state 173

    $default  reduce using rule 248 (qualified_namespace_specifier)


state 372

  247 qualified_namespace_specifier: nested_name_specifier . namespace_name

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 551
    original_namespace_name  go to state 49


state 373

  244 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier . ';'

    ';'  shift, and go to state 552


state 374

  240 original_namespace_definition: NAMESPACE identifier '{' namespace_body . '}'

    '}'  shift, and go to state 553


state 375

  382 operator: DELETE '[' ']' .

    $default  reduce using rule 382 (operator)


state 376

  381 operator: NEW '[' ']' .

    $default  reduce using rule 381 (operator)


state 377

  278 ptr_operator: COLONCOLON nested_name_specifier . '*'
  279             | COLONCOLON nested_name_specifier . '*' cv_qualifier_seq

    '*'  shift, and go to state 202


state 378

  368 conversion_declarator: ptr_operator conversion_declarator_opt .

    $default  reduce using rule 368 (conversion_declarator)


state 379

  439 explicit_specialization: TEMPLATE '<' '>' declaration .

    $default  reduce using rule 439 (explicit_specialization)


state 380

  228 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier .
  229                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier . '<' template_argument_list '>'

    '<'  shift, and go to state 554

    '<'       [reduce using rule 228 (elaborated_type_specifier)]
    $default  reduce using rule 228 (elaborated_type_specifier)


state 381

  253 using_declaration: USING COLONCOLON unqualified_id ';' .

    $default  reduce using rule 253 (using_declaration)


state 382

  251 using_declaration: USING COLONCOLON nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 555


state 383

   34 nested_name_specifier: namespace_name . COLONCOLON nested_name_specifier
   36                      | namespace_name . COLONCOLON
  255 using_directive: USING NAMESPACE COLONCOLON namespace_name . ';'

    COLONCOLON  shift, and go to state 173
    ';'         shift, and go to state 556


state 384

  254 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 557
    original_namespace_name  go to state 49


state 385

  257 using_directive: USING NAMESPACE namespace_name ';' .

    $default  reduce using rule 257 (using_directive)


state 386

  256 using_directive: USING NAMESPACE nested_name_specifier namespace_name . ';'

    ';'  shift, and go to state 558


state 387

  249 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 44

    identifier              go to state 53
    unqualified_id          go to state 559
    conversion_function_id  go to state 91
    operator_function_id    go to state 92


state 388

  250 using_declaration: USING TYPENAME nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 560


state 389

  252 using_declaration: USING nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 252 (using_declaration)


state 390

   84 delete_expression: COLONCOLON DELETE . cast_expression
   86                  | COLONCOLON DELETE . '[' ']' cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '['               shift, and go to state 561
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 270
    integer_literal          go to state 271
    character_literal        go to state 272
    floating_literal         go to state 273
    string_literal           go to state 274
    boolean_literal          go to state 275
    primary_expression       go to state 276
    id_expression            go to state 277
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 330
    postfix_expression       go to state 279
    unary_expression         go to state 280
    unary_operator           go to state 281
    new_expression           go to state 282
    delete_expression        go to state 283
    cast_expression          go to state 562
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 391

   73 new_expression: COLONCOLON NEW . new_placement_opt new_type_id new_initializer_opt
   75               | COLONCOLON NEW . new_placement_opt '(' type_id ')' new_initializer_opt

    '('  shift, and go to state 398

    '('       [reduce using rule 460 (new_placement_opt)]
    $default  reduce using rule 460 (new_placement_opt)

    new_placement      go to state 399
    new_placement_opt  go to state 563


state 392

   59 unary_expression: PLUSPLUS cast_expression .

    $default  reduce using rule 59 (unary_expression)


state 393

   60 unary_expression: MINUSMINUS cast_expression .

    $default  reduce using rule 60 (unary_expression)


state 394

   53 postfix_expression: CONST_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 564
    type_specifier_seq         go to state 299
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 395

   85 delete_expression: DELETE '[' . ']' cast_expression

    ']'  shift, and go to state 565


state 396

   83 delete_expression: DELETE cast_expression .

    $default  reduce using rule 83 (delete_expression)


state 397

   50 postfix_expression: DYNAMIC_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 566
    type_specifier_seq         go to state 299
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 398

   76 new_placement: '(' . expression_list ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    expression_list            go to state 567
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 464
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 399

  461 new_placement_opt: new_placement .

    $default  reduce using rule 461 (new_placement_opt)


state 400

   72 new_expression: NEW new_placement_opt . new_type_id new_initializer_opt
   74               | NEW new_placement_opt . '(' type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 568

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    new_type_id                go to state 569
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 570
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 401

   52 postfix_expression: REINTERPRET_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 571
    type_specifier_seq         go to state 299
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 402

   23 primary_expression: '(' . expression ')'
   65 unary_expression: SIZEOF '(' . type_id ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 247
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 252
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 253
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 278
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 408
    expression                 go to state 409
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 572
    type_specifier_seq         go to state 299
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 403

   64 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 64 (unary_expression)


state 404

   51 postfix_expression: STATIC_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 573
    type_specifier_seq         go to state 299
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 405

  499 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 499 (assignment_expression_opt)


state 406

  448 throw_expression: THROW assignment_expression_opt .

    $default  reduce using rule 448 (throw_expression)


state 407

   54 postfix_expression: TYPEID '(' . expression ')'
   55                   | TYPEID '(' . type_id ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 247
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 252
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 253
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 278
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 408
    expression                 go to state 574
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 575
    type_specifier_seq         go to state 299
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 408

  136 expression: assignment_expression .

    $default  reduce using rule 136 (expression)


state 409

   23 primary_expression: '(' expression . ')'
  137 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 576
    ','  shift, and go to state 577


state 410

   88 cast_expression: '(' type_id . ')' cast_expression

    ')'  shift, and go to state 578


state 411

   61 unary_expression: '*' cast_expression .

    $default  reduce using rule 61 (unary_expression)


state 412

   62 unary_expression: '&' cast_expression .

    $default  reduce using rule 62 (unary_expression)


state 413

   48 postfix_expression: postfix_expression PLUSPLUS .

    $default  reduce using rule 48 (postfix_expression)


state 414

   49 postfix_expression: postfix_expression MINUSMINUS .

    $default  reduce using rule 49 (postfix_expression)


state 415

   44 postfix_expression: postfix_expression ARROW . TEMPLATE COLONCOLON id_expression
   45                   | postfix_expression ARROW . TEMPLATE id_expression
   46                   | postfix_expression ARROW . COLONCOLON id_expression
   47                   | postfix_expression ARROW . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 579
    OPERATOR        shift, and go to state 26
    TEMPLATE        shift, and go to state 580
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 581
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 330
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 416

   39 postfix_expression: postfix_expression '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    $default  reduce using rule 456 (expression_list_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    expression_list            go to state 582
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 464
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302
    expression_list_opt        go to state 583


state 417

   38 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 408
    expression                 go to state 584
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 418

   40 postfix_expression: postfix_expression '.' . TEMPLATE COLONCOLON id_expression
   41                   | postfix_expression '.' . TEMPLATE id_expression
   42                   | postfix_expression '.' . COLONCOLON id_expression
   43                   | postfix_expression '.' . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 585
    OPERATOR        shift, and go to state 26
    TEMPLATE        shift, and go to state 586
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 587
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 330
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 419

   63 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 63 (unary_expression)


state 420

   90 pm_expression: pm_expression DOTSTAR . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 270
    integer_literal          go to state 271
    character_literal        go to state 272
    floating_literal         go to state 273
    string_literal           go to state 274
    boolean_literal          go to state 275
    primary_expression       go to state 276
    id_expression            go to state 277
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 330
    postfix_expression       go to state 279
    unary_expression         go to state 280
    unary_operator           go to state 281
    new_expression           go to state 282
    delete_expression        go to state 283
    cast_expression          go to state 588
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 421

   91 pm_expression: pm_expression ARROWSTAR . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 270
    integer_literal          go to state 271
    character_literal        go to state 272
    floating_literal         go to state 273
    string_literal           go to state 274
    boolean_literal          go to state 275
    primary_expression       go to state 276
    id_expression            go to state 277
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 330
    postfix_expression       go to state 279
    unary_expression         go to state 280
    unary_operator           go to state 281
    new_expression           go to state 282
    delete_expression        go to state 283
    cast_expression          go to state 589
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 422

   93 multiplicative_expression: multiplicative_expression '*' . pm_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 270
    integer_literal          go to state 271
    character_literal        go to state 272
    floating_literal         go to state 273
    string_literal           go to state 274
    boolean_literal          go to state 275
    primary_expression       go to state 276
    id_expression            go to state 277
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 330
    postfix_expression       go to state 279
    unary_expression         go to state 280
    unary_operator           go to state 281
    new_expression           go to state 282
    delete_expression        go to state 283
    cast_expression          go to state 284
    pm_expression            go to state 590
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 423

   94 multiplicative_expression: multiplicative_expression '/' . pm_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 270
    integer_literal          go to state 271
    character_literal        go to state 272
    floating_literal         go to state 273
    string_literal           go to state 274
    boolean_literal          go to state 275
    primary_expression       go to state 276
    id_expression            go to state 277
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 330
    postfix_expression       go to state 279
    unary_expression         go to state 280
    unary_operator           go to state 281
    new_expression           go to state 282
    delete_expression        go to state 283
    cast_expression          go to state 284
    pm_expression            go to state 591
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 424

   95 multiplicative_expression: multiplicative_expression '%' . pm_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 270
    integer_literal          go to state 271
    character_literal        go to state 272
    floating_literal         go to state 273
    string_literal           go to state 274
    boolean_literal          go to state 275
    primary_expression       go to state 276
    id_expression            go to state 277
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 330
    postfix_expression       go to state 279
    unary_expression         go to state 280
    unary_operator           go to state 281
    new_expression           go to state 282
    delete_expression        go to state 283
    cast_expression          go to state 284
    pm_expression            go to state 592
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 425

   97 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 593
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 426

   98 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 594
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 427

  100 shift_expression: shift_expression SL . additive_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 595
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 428

  101 shift_expression: shift_expression SR . additive_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 596
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 429

  105 relational_expression: relational_expression LTEQ . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 597
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 430

  106 relational_expression: relational_expression GTEQ . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 598
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 431

  103 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 599
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 432

  104 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 600
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 433

  108 equality_expression: equality_expression EQ . relational_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 601
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 434

  109 equality_expression: equality_expression NOTEQ . relational_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 602
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 435

  111 and_expression: and_expression '&' . equality_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 603
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 436

  113 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 604
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 437

  115 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 605
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 438

  117 logical_and_expression: logical_and_expression ANDAND . inclusive_or_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 606
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 439

  129 assignment_operator: ADDEQ .

    $default  reduce using rule 129 (assignment_operator)


state 440

  130 assignment_operator: SUBEQ .

    $default  reduce using rule 130 (assignment_operator)


state 441

  126 assignment_operator: MULEQ .

    $default  reduce using rule 126 (assignment_operator)


state 442

  127 assignment_operator: DIVEQ .

    $default  reduce using rule 127 (assignment_operator)


state 443

  128 assignment_operator: MODEQ .

    $default  reduce using rule 128 (assignment_operator)


state 444

  134 assignment_operator: XOREQ .

    $default  reduce using rule 134 (assignment_operator)


state 445

  133 assignment_operator: ANDEQ .

    $default  reduce using rule 133 (assignment_operator)


state 446

  135 assignment_operator: OREQ .

    $default  reduce using rule 135 (assignment_operator)


state 447

  131 assignment_operator: SREQ .

    $default  reduce using rule 131 (assignment_operator)


state 448

  132 assignment_operator: SLEQ .

    $default  reduce using rule 132 (assignment_operator)


state 449

  119 logical_or_expression: logical_or_expression OROR . logical_and_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 607
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 450

  121 conditional_expression: logical_or_expression '?' . expression ':' assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 408
    expression                 go to state 608
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 451

  125 assignment_operator: '=' .

    $default  reduce using rule 125 (assignment_operator)


state 452

  123 assignment_expression: logical_or_expression assignment_operator . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 609
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 453

  297 direct_abstract_declarator: '(' . abstract_declarator ')'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 224
    '('             shift, and go to state 453
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '('       [reduce using rule 482 (direct_abstract_declarator_opt)]
    $default  reduce using rule 482 (direct_abstract_declarator_opt)

    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 105
    template_name                   go to state 52
    nested_name_specifier           go to state 225
    ptr_operator                    go to state 454
    abstract_declarator             go to state 610
    direct_abstract_declarator      go to state 456
    template_id                     go to state 94
    direct_abstract_declarator_opt  go to state 458


state 454

  290 abstract_declarator: ptr_operator . abstract_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 224
    '('             shift, and go to state 453
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '('       [reduce using rule 482 (direct_abstract_declarator_opt)]
    '['       reduce using rule 482 (direct_abstract_declarator_opt)
    $default  reduce using rule 478 (abstract_declarator_opt)

    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 105
    template_name                   go to state 52
    nested_name_specifier           go to state 225
    ptr_operator                    go to state 454
    abstract_declarator             go to state 455
    direct_abstract_declarator      go to state 456
    template_id                     go to state 94
    abstract_declarator_opt         go to state 611
    direct_abstract_declarator_opt  go to state 458


state 455

  479 abstract_declarator_opt: abstract_declarator .

    $default  reduce using rule 479 (abstract_declarator_opt)


state 456

  291 abstract_declarator: direct_abstract_declarator .
  483 direct_abstract_declarator_opt: direct_abstract_declarator .

    '('       reduce using rule 483 (direct_abstract_declarator_opt)
    '['       reduce using rule 483 (direct_abstract_declarator_opt)
    $default  reduce using rule 291 (abstract_declarator)


state 457

  288 type_id: type_specifier_seq abstract_declarator_opt .

    $default  reduce using rule 288 (type_id)


state 458

  292 direct_abstract_declarator: direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  293                           | direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' cv_qualifier_seq
  294                           | direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' exception_specification
  295                           | direct_abstract_declarator_opt . '(' parameter_declaration_clause ')'
  296                           | direct_abstract_declarator_opt . '[' constant_expression_opt ']'

    '('  shift, and go to state 612
    '['  shift, and go to state 613


state 459

  432 template_id: template_name '<' template_argument_list '>' .

    $default  reduce using rule 432 (template_id)


state 460

  434 template_argument_list: template_argument_list ',' . template_argument

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 247
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 252
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 253
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 269
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 278
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 297
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 298
    type_specifier_seq         go to state 299
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    template_argument          go to state 614
    throw_expression           go to state 302


state 461

  262 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 262 (init_declarator_list)


state 462

  263 init_declarator: declarator . initializer_opt

    '('  shift, and go to state 307
    '='  shift, and go to state 308

    $default  reduce using rule 474 (initializer_opt)

    initializer      go to state 309
    initializer_opt  go to state 311


state 463

   57 expression_list: expression_list . ',' assignment_expression
  315 initializer: '(' expression_list . ')'

    ')'  shift, and go to state 615
    ','  shift, and go to state 616


state 464

   56 expression_list: assignment_expression .

    $default  reduce using rule 56 (expression_list)


state 465

  317 initializer_clause: '{' . initializer_list COMMA_opt '}'
  318                   | '{' . '}'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268
    '{'               shift, and go to state 465
    '}'               shift, and go to state 617

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 466
    initializer_clause         go to state 618
    initializer_list           go to state 619
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 466

  316 initializer_clause: assignment_expression .

    $default  reduce using rule 316 (initializer_clause)


state 467

  314 initializer: '=' initializer_clause .

    $default  reduce using rule 314 (initializer)


state 468

  310 function_definition: decl_specifier_seq declarator ctor_initializer_opt function_body .

    $default  reduce using rule 310 (function_definition)


state 469

  441 function_try_block: TRY ctor_initializer_opt function_body . handler_seq

    CATCH  shift, and go to state 620

    handler_seq  go to state 621
    handler      go to state 622


state 470

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON
  374 mem_initializer_id: COLONCOLON class_name .

    COLONCOLON  shift, and go to state 174

    $default  reduce using rule 374 (mem_initializer_id)


state 471

  373 mem_initializer_id: COLONCOLON nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 623
    template_name  go to state 52
    template_id    go to state 94


state 472

  375 mem_initializer_id: nested_name_specifier class_name .

    $default  reduce using rule 375 (mem_initializer_id)


state 473

  371 mem_initializer_list: mem_initializer ',' . mem_initializer_list

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 314

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 315
    template_name            go to state 52
    identifier               go to state 316
    nested_name_specifier    go to state 317
    mem_initializer_list     go to state 624
    mem_initializer          go to state 319
    mem_initializer_id       go to state 320
    template_id              go to state 94


state 474

  372 mem_initializer: mem_initializer_id '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    $default  reduce using rule 456 (expression_list_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    expression_list            go to state 582
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 464
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302
    expression_list_opt        go to state 625


state 475

  164 jump_statement: BREAK . ';'

    ';'  shift, and go to state 626


state 476

  148 labeled_statement: CASE . constant_expression ':' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 331
    conditional_expression     go to state 332
    constant_expression        go to state 627
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 477

  165 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 628


state 478

  149 labeled_statement: DEFAULT . ':' statement

    ':'  shift, and go to state 629


state 479

  160 iteration_statement: DO . statement WHILE '(' expression ')' ';'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 247
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 475
    CASE              shift, and go to state 476
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 250
    CONTINUE          shift, and go to state 477
    DEFAULT           shift, and go to state 478
    DELETE            shift, and go to state 251
    DO                shift, and go to state 479
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 252
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 253
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 480
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 481
    IF                shift, and go to state 482
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 483
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 255
    RETURN            shift, and go to state 484
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 256
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 257
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 485
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TRY               shift, and go to state 486
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 261
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 487
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268
    '{'               shift, and go to state 321

    $default  reduce using rule 466 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 488
    literal                     go to state 270
    integer_literal             go to state 271
    character_literal           go to state 272
    floating_literal            go to state 273
    string_literal              go to state 274
    boolean_literal             go to state 275
    primary_expression          go to state 276
    id_expression               go to state 277
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 278
    postfix_expression          go to state 279
    unary_expression            go to state 280
    unary_operator              go to state 281
    new_expression              go to state 282
    delete_expression           go to state 283
    cast_expression             go to state 284
    pm_expression               go to state 285
    multiplicative_expression   go to state 286
    additive_expression         go to state 287
    shift_expression            go to state 288
    relational_expression       go to state 289
    equality_expression         go to state 290
    and_expression              go to state 291
    exclusive_or_expression     go to state 292
    inclusive_or_expression     go to state 293
    logical_and_expression      go to state 294
    logical_or_expression       go to state 295
    conditional_expression      go to state 296
    assignment_expression       go to state 408
    expression                  go to state 489
    statement                   go to state 630
    labeled_statement           go to state 491
    expression_statement        go to state 492
    compound_statement          go to state 493
    selection_statement         go to state 495
    iteration_statement         go to state 496
    jump_statement              go to state 497
    declaration_statement       go to state 498
    block_declaration           go to state 499
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 500
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 501
    throw_expression            go to state 302
    expression_opt              go to state 502


state 480

  161 iteration_statement: FOR . '(' for_init_statement condition_opt ';' expression_opt ')' statement

    '('  shift, and go to state 631


state 481

  167 jump_statement: GOTO . identifier ';'

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 632


state 482

  154 selection_statement: IF . '(' condition ')' statement
  155                    | IF . '(' condition ')' statement ELSE statement

    '('  shift, and go to state 633


state 483

  244 namespace_alias_definition: NAMESPACE . identifier '=' qualified_namespace_specifier ';'

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 634


state 484

  166 jump_statement: RETURN . expression_opt ';'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    $default  reduce using rule 466 (expression_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 408
    expression                 go to state 489
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302
    expression_opt             go to state 635


state 485

  156 selection_statement: SWITCH . '(' condition ')' statement

    '('  shift, and go to state 636


state 486

  440 try_block: TRY . compound_statement handler_seq

    '{'  shift, and go to state 321

    compound_statement  go to state 637


state 487

  159 iteration_statement: WHILE . '(' condition ')' statement

    '('  shift, and go to state 638


state 488

   27 unqualified_id: identifier .
  147 labeled_statement: identifier . ':' statement

    ':'  shift, and go to state 639

    $default  reduce using rule 27 (unqualified_id)


state 489

  137 expression: expression . ',' assignment_expression
  467 expression_opt: expression .

    ','  shift, and go to state 577

    $default  reduce using rule 467 (expression_opt)


state 490

  152 statement_seq: statement .

    $default  reduce using rule 152 (statement_seq)


state 491

  139 statement: labeled_statement .

    $default  reduce using rule 139 (statement)


state 492

  140 statement: expression_statement .

    $default  reduce using rule 140 (statement)


state 493

  141 statement: compound_statement .

    $default  reduce using rule 141 (statement)


state 494

  153 statement_seq: statement_seq . statement
  469 statement_seq_opt: statement_seq .

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 247
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 475
    CASE              shift, and go to state 476
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 250
    CONTINUE          shift, and go to state 477
    DEFAULT           shift, and go to state 478
    DELETE            shift, and go to state 251
    DO                shift, and go to state 479
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 252
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 253
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 480
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 481
    IF                shift, and go to state 482
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 483
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 255
    RETURN            shift, and go to state 484
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 256
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 257
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 485
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TRY               shift, and go to state 486
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 261
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 487
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268
    '{'               shift, and go to state 321

    '}'       reduce using rule 469 (statement_seq_opt)
    $default  reduce using rule 466 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 488
    literal                     go to state 270
    integer_literal             go to state 271
    character_literal           go to state 272
    floating_literal            go to state 273
    string_literal              go to state 274
    boolean_literal             go to state 275
    primary_expression          go to state 276
    id_expression               go to state 277
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 278
    postfix_expression          go to state 279
    unary_expression            go to state 280
    unary_operator              go to state 281
    new_expression              go to state 282
    delete_expression           go to state 283
    cast_expression             go to state 284
    pm_expression               go to state 285
    multiplicative_expression   go to state 286
    additive_expression         go to state 287
    shift_expression            go to state 288
    relational_expression       go to state 289
    equality_expression         go to state 290
    and_expression              go to state 291
    exclusive_or_expression     go to state 292
    inclusive_or_expression     go to state 293
    logical_and_expression      go to state 294
    logical_or_expression       go to state 295
    conditional_expression      go to state 296
    assignment_expression       go to state 408
    expression                  go to state 489
    statement                   go to state 640
    labeled_statement           go to state 491
    expression_statement        go to state 492
    compound_statement          go to state 493
    selection_statement         go to state 495
    iteration_statement         go to state 496
    jump_statement              go to state 497
    declaration_statement       go to state 498
    block_declaration           go to state 499
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 500
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 501
    throw_expression            go to state 302
    expression_opt              go to state 502


state 495

  142 statement: selection_statement .

    $default  reduce using rule 142 (statement)


state 496

  143 statement: iteration_statement .

    $default  reduce using rule 143 (statement)


state 497

  144 statement: jump_statement .

    $default  reduce using rule 144 (statement)


state 498

  145 statement: declaration_statement .

    $default  reduce using rule 145 (statement)


state 499

  168 declaration_statement: block_declaration .

    $default  reduce using rule 168 (declaration_statement)


state 500

  183 simple_declaration: decl_specifier_seq . init_declarator_list ';'
  184                   | decl_specifier_seq . ';'
  191 decl_specifier_seq: decl_specifier_seq . decl_specifier

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46
    ';'             shift, and go to state 184

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    id_expression              go to state 55
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 58
    decl_specifier             go to state 185
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    init_declarator_list       go to state 186
    init_declarator            go to state 187
    declarator                 go to state 462
    direct_declarator          go to state 83
    ptr_operator               go to state 84
    cv_qualifier               go to state 85
    declarator_id              go to state 86
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 501

  146 statement: try_block .

    $default  reduce using rule 146 (statement)


state 502

  150 expression_statement: expression_opt . ';'

    ';'  shift, and go to state 641


state 503

  151 compound_statement: '{' statement_seq_opt . '}'

    '}'  shift, and go to state 642


state 504

  272 direct_declarator: '(' . declarator ')'
  297 direct_abstract_declarator: '(' . abstract_declarator ')'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 167
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 504
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '('       [reduce using rule 482 (direct_abstract_declarator_opt)]
    $default  reduce using rule 482 (direct_abstract_declarator_opt)

    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 105
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 168
    declarator                      go to state 169
    direct_declarator               go to state 83
    ptr_operator                    go to state 506
    declarator_id                   go to state 86
    abstract_declarator             go to state 610
    direct_abstract_declarator      go to state 456
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_id                     go to state 94
    direct_abstract_declarator_opt  go to state 458


state 505

  305 parameter_declaration: decl_specifier_seq declarator .
  306                      | decl_specifier_seq declarator . '=' assignment_expression

    '='  shift, and go to state 643

    $default  reduce using rule 305 (parameter_declaration)


state 506

  265 declarator: ptr_operator . declarator
  290 abstract_declarator: ptr_operator . abstract_declarator_opt

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 167
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 504
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '('       [reduce using rule 482 (direct_abstract_declarator_opt)]
    '['       reduce using rule 482 (direct_abstract_declarator_opt)
    $default  reduce using rule 478 (abstract_declarator_opt)

    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 105
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 168
    declarator                      go to state 196
    direct_declarator               go to state 83
    ptr_operator                    go to state 506
    declarator_id                   go to state 86
    abstract_declarator             go to state 455
    direct_abstract_declarator      go to state 456
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_id                     go to state 94
    abstract_declarator_opt         go to state 611
    direct_abstract_declarator_opt  go to state 458


state 507

  307 parameter_declaration: decl_specifier_seq abstract_declarator_opt .
  308                      | decl_specifier_seq abstract_declarator_opt . '=' assignment_expression

    '='  shift, and go to state 644

    $default  reduce using rule 307 (parameter_declaration)


state 508

  267 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' . cv_qualifier_seq exception_specification
  268                  | direct_declarator '(' parameter_declaration_clause ')' . cv_qualifier_seq
  269                  | direct_declarator '(' parameter_declaration_clause ')' . exception_specification
  270                  | direct_declarator '(' parameter_declaration_clause ')' .

    CONST     shift, and go to state 13
    THROW     shift, and go to state 645
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 270 (direct_declarator)

    cv_qualifier_seq         go to state 646
    cv_qualifier             go to state 172
    exception_specification  go to state 647


state 509

  298 parameter_declaration_clause: parameter_declaration_list ELLIPSIS .

    $default  reduce using rule 298 (parameter_declaration_clause)


state 510

  302 parameter_declaration_clause: parameter_declaration_list ',' . ELLIPSIS
  304 parameter_declaration_list: parameter_declaration_list ',' . parameter_declaration

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 648
    COLONCOLON      shift, and go to state 113
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    decl_specifier             go to state 63
    decl_specifier_seq         go to state 325
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    parameter_declaration      go to state 649
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 511

  271 direct_declarator: direct_declarator '[' constant_expression_opt ']' .

    $default  reduce using rule 271 (direct_declarator)


state 512

  345 member_declarator: identifier ':' . constant_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 331
    conditional_expression     go to state 332
    constant_expression        go to state 650
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 513

  336 member_declaration: qualified_id ';' .

    $default  reduce using rule 336 (member_declaration)


state 514

  332 member_declaration: decl_specifier_seq ';' .

    $default  reduce using rule 332 (member_declaration)


state 515

  310 function_definition: decl_specifier_seq declarator . ctor_initializer_opt function_body
  312                    | decl_specifier_seq declarator . function_try_block
  342 member_declarator: declarator .
  343                  | declarator . pure_specifier
  344                  | declarator . constant_initializer

    TRY  shift, and go to state 189
    ':'  shift, and go to state 190
    '='  shift, and go to state 517

    '{'       reduce using rule 484 (ctor_initializer_opt)
    $default  reduce using rule 342 (member_declarator)

    pure_specifier        go to state 518
    constant_initializer  go to state 519
    ctor_initializer      go to state 191
    function_try_block    go to state 310
    ctor_initializer_opt  go to state 312


state 516

  331 member_declaration: decl_specifier_seq member_declarator_list . ';'
  340 member_declarator_list: member_declarator_list . ',' member_declarator

    ','  shift, and go to state 523
    ';'  shift, and go to state 651


state 517

  346 pure_specifier: '=' . '0'
  347 constant_initializer: '=' . constant_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268
    '0'               shift, and go to state 652

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 331
    conditional_expression     go to state 332
    constant_expression        go to state 653
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 518

  343 member_declarator: declarator pure_specifier .

    $default  reduce using rule 343 (member_declarator)


state 519

  344 member_declarator: declarator constant_initializer .

    $default  reduce using rule 344 (member_declarator)


state 520

  491 SEMICOLON_opt: ';' .

    $default  reduce using rule 491 (SEMICOLON_opt)


state 521

  335 member_declaration: function_definition SEMICOLON_opt .

    $default  reduce using rule 335 (member_declaration)


state 522

  329 member_specification: member_declaration member_specification_opt .

    $default  reduce using rule 329 (member_specification)


state 523

  340 member_declarator_list: member_declarator_list ',' . member_declarator

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 167
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    $default  reduce using rule 341 (member_declarator)

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 340
    id_expression            go to state 55
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 168
    declarator               go to state 654
    direct_declarator        go to state 83
    ptr_operator             go to state 84
    declarator_id            go to state 86
    member_declarator        go to state 655
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 524

  333 member_declaration: member_declarator_list ';' .

    $default  reduce using rule 333 (member_declaration)


state 525

  330 member_specification: access_specifier ':' . member_specification_opt

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    PRIVATE         shift, and go to state 335
    PROTECTED       shift, and go to state 336
    PUBLIC          shift, and go to state 337
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 338
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46
    ';'             shift, and go to state 339

    TEMPLATE  reduce using rule 494 (EXPORT_opt)
    ';'       [reduce using rule 341 (member_declarator)]
    '}'       reduce using rule 488 (member_specification_opt)
    $default  reduce using rule 341 (member_declarator)

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 340
    id_expression              go to state 55
    unqualified_id             go to state 56
    qualified_id               go to state 341
    nested_name_specifier      go to state 58
    decl_specifier             go to state 63
    decl_specifier_seq         go to state 342
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    using_declaration          go to state 343
    declarator                 go to state 344
    direct_declarator          go to state 83
    ptr_operator               go to state 84
    cv_qualifier               go to state 85
    declarator_id              go to state 86
    function_definition        go to state 345
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    member_specification       go to state 346
    member_declaration         go to state 347
    member_declarator_list     go to state 348
    member_declarator          go to state 349
    access_specifier           go to state 350
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_declaration       go to state 351
    template_id                go to state 94
    member_specification_opt   go to state 656
    EXPORT_opt                 go to state 98


state 526

  321 class_specifier: class_head '{' member_specification_opt '}' .

    $default  reduce using rule 321 (class_specifier)


state 527

  223 elaborated_type_specifier: class_key COLONCOLON nested_name_specifier identifier .

    $default  reduce using rule 223 (elaborated_type_specifier)


state 528

  351 base_specifier: COLONCOLON . nested_name_specifier class_name
  352               | COLONCOLON . class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 657
    template_name            go to state 52
    nested_name_specifier    go to state 658
    template_id              go to state 94


state 529

  355 base_specifier: VIRTUAL . access_specifier COLONCOLON nested_name_specifier_opt class_name
  356               | VIRTUAL . access_specifier nested_name_specifier_opt class_name
  357               | VIRTUAL . COLONCOLON nested_name_specifier_opt class_name
  358               | VIRTUAL . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 659
    PRIVATE         shift, and go to state 335
    PROTECTED       shift, and go to state 336
    PUBLIC          shift, and go to state 337

    CLASS_NAME     [reduce using rule 454 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 454 (nested_name_specifier_opt)]

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    nested_name_specifier      go to state 217
    access_specifier           go to state 660
    template_id                go to state 94
    nested_name_specifier_opt  go to state 661


state 530

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON
  354 base_specifier: class_name .

    COLONCOLON  shift, and go to state 174

    $default  reduce using rule 354 (base_specifier)


state 531

  353 base_specifier: nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 662
    template_name  go to state 52
    template_id    go to state 94


state 532

  348 base_clause: ':' base_specifier_list .
  350 base_specifier_list: base_specifier_list . ',' base_specifier

    ','  shift, and go to state 663

    $default  reduce using rule 348 (base_clause)


state 533

  349 base_specifier_list: base_specifier .

    $default  reduce using rule 349 (base_specifier_list)


state 534

  359 base_specifier: access_specifier . VIRTUAL COLONCOLON nested_name_specifier_opt class_name
  360               | access_specifier . VIRTUAL nested_name_specifier_opt class_name
  361               | access_specifier . COLONCOLON nested_name_specifier_opt class_name
  362               | access_specifier . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 664
    VIRTUAL         shift, and go to state 665

    CLASS_NAME     [reduce using rule 454 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 454 (nested_name_specifier_opt)]

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    nested_name_specifier      go to state 217
    template_id                go to state 94
    nested_name_specifier_opt  go to state 666


state 535

  325 class_head: class_key nested_name_specifier identifier base_clause .

    $default  reduce using rule 325 (class_head)


state 536

  326 class_key: CLASS .
  426 type_parameter: CLASS . identifier
  427               | CLASS . identifier '=' type_id

    IDENTIFIER  shift, and go to state 1

    IDENTIFIER  [reduce using rule 326 (class_key)]
    $default    reduce using rule 326 (class_key)

    identifier  go to state 667


state 537

  430 type_parameter: TEMPLATE . '<' template_parameter_list '>' CLASS identifier
  431               | TEMPLATE . '<' template_parameter_list '>' CLASS identifier '=' template_name

    '<'  shift, and go to state 668


state 538

  228 elaborated_type_specifier: TYPENAME . COLONCOLON_opt nested_name_specifier identifier
  229                          | TYPENAME . COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'
  428 type_parameter: TYPENAME . identifier
  429               | TYPENAME . identifier '=' type_id

    IDENTIFIER  shift, and go to state 1
    COLONCOLON  shift, and go to state 161

    $default  reduce using rule 458 (COLONCOLON_opt)

    identifier      go to state 669
    COLONCOLON_opt  go to state 162


state 539

  425 template_parameter: parameter_declaration .

    $default  reduce using rule 425 (template_parameter)


state 540

  421 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list . '>' declaration
  423 template_parameter_list: template_parameter_list . ',' template_parameter

    '>'  shift, and go to state 670
    ','  shift, and go to state 671


state 541

  422 template_parameter_list: template_parameter .

    $default  reduce using rule 422 (template_parameter_list)


state 542

  424 template_parameter: type_parameter .

    $default  reduce using rule 424 (template_parameter)


state 543

  258 asm_definition: ASM '(' string_literal ')' ';' .

    $default  reduce using rule 258 (asm_definition)


state 544

  232 enumerator_list: enumerator_list ',' . enumerator_definition

    IDENTIFIER  shift, and go to state 1

    identifier             go to state 362
    enumerator_definition  go to state 672
    enumerator             go to state 365


state 545

  234 enumerator_definition: enumerator '=' . constant_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 331
    conditional_expression     go to state 332
    constant_expression        go to state 673
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 546

  230 enum_specifier: ENUM identifier '{' enumerator_list_opt '}' .

    $default  reduce using rule 230 (enum_specifier)


state 547

  259 linkage_specification: EXTERN string_literal '{' declaration_seq_opt '}' .

    $default  reduce using rule 259 (linkage_specification)


state 548

  241 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body '}' .

    $default  reduce using rule 241 (extension_namespace_definition)


state 549

   34 nested_name_specifier: namespace_name . COLONCOLON nested_name_specifier
   36                      | namespace_name . COLONCOLON
  246 qualified_namespace_specifier: COLONCOLON namespace_name .

    COLONCOLON  shift, and go to state 173

    $default  reduce using rule 246 (qualified_namespace_specifier)


state 550

  245 qualified_namespace_specifier: COLONCOLON nested_name_specifier . namespace_name

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 674
    original_namespace_name  go to state 49


state 551

  247 qualified_namespace_specifier: nested_name_specifier namespace_name .

    $default  reduce using rule 247 (qualified_namespace_specifier)


state 552

  244 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier ';' .

    $default  reduce using rule 244 (namespace_alias_definition)


state 553

  240 original_namespace_definition: NAMESPACE identifier '{' namespace_body '}' .

    $default  reduce using rule 240 (original_namespace_definition)


state 554

  229 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' . template_argument_list '>'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 247
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 252
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 253
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 269
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 278
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 297
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 298
    type_specifier_seq         go to state 299
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    template_argument_list     go to state 675
    template_argument          go to state 301
    throw_expression           go to state 302


state 555

  251 using_declaration: USING COLONCOLON nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 251 (using_declaration)


state 556

  255 using_directive: USING NAMESPACE COLONCOLON namespace_name ';' .

    $default  reduce using rule 255 (using_directive)


state 557

  254 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier namespace_name . ';'

    ';'  shift, and go to state 676


state 558

  256 using_directive: USING NAMESPACE nested_name_specifier namespace_name ';' .

    $default  reduce using rule 256 (using_directive)


state 559

  249 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 677


state 560

  250 using_declaration: USING TYPENAME nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 250 (using_declaration)


state 561

   86 delete_expression: COLONCOLON DELETE '[' . ']' cast_expression

    ']'  shift, and go to state 678


state 562

   84 delete_expression: COLONCOLON DELETE cast_expression .

    $default  reduce using rule 84 (delete_expression)


state 563

   73 new_expression: COLONCOLON NEW new_placement_opt . new_type_id new_initializer_opt
   75               | COLONCOLON NEW new_placement_opt . '(' type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 679

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    new_type_id                go to state 680
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 570
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 564

   53 postfix_expression: CONST_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 681


state 565

   85 delete_expression: DELETE '[' ']' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 270
    integer_literal          go to state 271
    character_literal        go to state 272
    floating_literal         go to state 273
    string_literal           go to state 274
    boolean_literal          go to state 275
    primary_expression       go to state 276
    id_expression            go to state 277
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 330
    postfix_expression       go to state 279
    unary_expression         go to state 280
    unary_operator           go to state 281
    new_expression           go to state 282
    delete_expression        go to state 283
    cast_expression          go to state 682
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 566

   50 postfix_expression: DYNAMIC_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 683


state 567

   57 expression_list: expression_list . ',' assignment_expression
   76 new_placement: '(' expression_list . ')'

    ')'  shift, and go to state 684
    ','  shift, and go to state 616


state 568

   74 new_expression: NEW new_placement_opt '(' . type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 685
    type_specifier_seq         go to state 299
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 569

   72 new_expression: NEW new_placement_opt new_type_id . new_initializer_opt

    '('  shift, and go to state 686

    $default  reduce using rule 462 (new_initializer_opt)

    new_initializer      go to state 687
    new_initializer_opt  go to state 688


state 570

   77 new_type_id: type_specifier_seq . new_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 224
    '['             shift, and go to state 689
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '*'       [reduce using rule 464 (new_declarator_opt)]
    '&'       [reduce using rule 464 (new_declarator_opt)]
    $default  reduce using rule 464 (new_declarator_opt)

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 225
    new_declarator           go to state 690
    direct_new_declarator    go to state 691
    ptr_operator             go to state 692
    template_id              go to state 94
    new_declarator_opt       go to state 693


state 571

   52 postfix_expression: REINTERPRET_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 694


state 572

   65 unary_expression: SIZEOF '(' type_id . ')'

    ')'  shift, and go to state 695


state 573

   51 postfix_expression: STATIC_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 696


state 574

   54 postfix_expression: TYPEID '(' expression . ')'
  137 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 697
    ','  shift, and go to state 577


state 575

   55 postfix_expression: TYPEID '(' type_id . ')'

    ')'  shift, and go to state 698


state 576

   23 primary_expression: '(' expression ')' .

    $default  reduce using rule 23 (primary_expression)


state 577

  137 expression: expression ',' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 699
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 578

   88 cast_expression: '(' type_id ')' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 270
    integer_literal          go to state 271
    character_literal        go to state 272
    floating_literal         go to state 273
    string_literal           go to state 274
    boolean_literal          go to state 275
    primary_expression       go to state 276
    id_expression            go to state 277
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 330
    postfix_expression       go to state 279
    unary_expression         go to state 280
    unary_operator           go to state 281
    new_expression           go to state 282
    delete_expression        go to state 283
    cast_expression          go to state 700
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 579

   46 postfix_expression: postfix_expression ARROW COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 701
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 330
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 580

   44 postfix_expression: postfix_expression ARROW TEMPLATE . COLONCOLON id_expression
   45                   | postfix_expression ARROW TEMPLATE . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 702
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 703
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 330
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 581

   47 postfix_expression: postfix_expression ARROW id_expression .

    $default  reduce using rule 47 (postfix_expression)


state 582

   57 expression_list: expression_list . ',' assignment_expression
  457 expression_list_opt: expression_list .

    ','  shift, and go to state 616

    $default  reduce using rule 457 (expression_list_opt)


state 583

   39 postfix_expression: postfix_expression '(' expression_list_opt . ')'

    ')'  shift, and go to state 704


state 584

   38 postfix_expression: postfix_expression '[' expression . ']'
  137 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 705
    ','  shift, and go to state 577


state 585

   42 postfix_expression: postfix_expression '.' COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 706
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 330
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 586

   40 postfix_expression: postfix_expression '.' TEMPLATE . COLONCOLON id_expression
   41                   | postfix_expression '.' TEMPLATE . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 707
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 708
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 330
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 587

   43 postfix_expression: postfix_expression '.' id_expression .

    $default  reduce using rule 43 (postfix_expression)


state 588

   90 pm_expression: pm_expression DOTSTAR cast_expression .

    $default  reduce using rule 90 (pm_expression)


state 589

   91 pm_expression: pm_expression ARROWSTAR cast_expression .

    $default  reduce using rule 91 (pm_expression)


state 590

   90 pm_expression: pm_expression . DOTSTAR cast_expression
   91              | pm_expression . ARROWSTAR cast_expression
   93 multiplicative_expression: multiplicative_expression '*' pm_expression .

    DOTSTAR    shift, and go to state 420
    ARROWSTAR  shift, and go to state 421

    $default  reduce using rule 93 (multiplicative_expression)


state 591

   90 pm_expression: pm_expression . DOTSTAR cast_expression
   91              | pm_expression . ARROWSTAR cast_expression
   94 multiplicative_expression: multiplicative_expression '/' pm_expression .

    DOTSTAR    shift, and go to state 420
    ARROWSTAR  shift, and go to state 421

    $default  reduce using rule 94 (multiplicative_expression)


state 592

   90 pm_expression: pm_expression . DOTSTAR cast_expression
   91              | pm_expression . ARROWSTAR cast_expression
   95 multiplicative_expression: multiplicative_expression '%' pm_expression .

    DOTSTAR    shift, and go to state 420
    ARROWSTAR  shift, and go to state 421

    $default  reduce using rule 95 (multiplicative_expression)


state 593

   93 multiplicative_expression: multiplicative_expression . '*' pm_expression
   94                          | multiplicative_expression . '/' pm_expression
   95                          | multiplicative_expression . '%' pm_expression
   97 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 422
    '/'  shift, and go to state 423
    '%'  shift, and go to state 424

    $default  reduce using rule 97 (additive_expression)


state 594

   93 multiplicative_expression: multiplicative_expression . '*' pm_expression
   94                          | multiplicative_expression . '/' pm_expression
   95                          | multiplicative_expression . '%' pm_expression
   98 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 422
    '/'  shift, and go to state 423
    '%'  shift, and go to state 424

    $default  reduce using rule 98 (additive_expression)


state 595

   97 additive_expression: additive_expression . '+' multiplicative_expression
   98                    | additive_expression . '-' multiplicative_expression
  100 shift_expression: shift_expression SL additive_expression .

    '+'  shift, and go to state 425
    '-'  shift, and go to state 426

    $default  reduce using rule 100 (shift_expression)


state 596

   97 additive_expression: additive_expression . '+' multiplicative_expression
   98                    | additive_expression . '-' multiplicative_expression
  101 shift_expression: shift_expression SR additive_expression .

    '+'  shift, and go to state 425
    '-'  shift, and go to state 426

    $default  reduce using rule 101 (shift_expression)


state 597

  100 shift_expression: shift_expression . SL additive_expression
  101                 | shift_expression . SR additive_expression
  105 relational_expression: relational_expression LTEQ shift_expression .

    SL  shift, and go to state 427
    SR  shift, and go to state 428

    $default  reduce using rule 105 (relational_expression)


state 598

  100 shift_expression: shift_expression . SL additive_expression
  101                 | shift_expression . SR additive_expression
  106 relational_expression: relational_expression GTEQ shift_expression .

    SL  shift, and go to state 427
    SR  shift, and go to state 428

    $default  reduce using rule 106 (relational_expression)


state 599

  100 shift_expression: shift_expression . SL additive_expression
  101                 | shift_expression . SR additive_expression
  103 relational_expression: relational_expression '<' shift_expression .

    SL  shift, and go to state 427
    SR  shift, and go to state 428

    $default  reduce using rule 103 (relational_expression)


state 600

  100 shift_expression: shift_expression . SL additive_expression
  101                 | shift_expression . SR additive_expression
  104 relational_expression: relational_expression '>' shift_expression .

    SL  shift, and go to state 427
    SR  shift, and go to state 428

    $default  reduce using rule 104 (relational_expression)


state 601

  103 relational_expression: relational_expression . '<' shift_expression
  104                      | relational_expression . '>' shift_expression
  105                      | relational_expression . LTEQ shift_expression
  106                      | relational_expression . GTEQ shift_expression
  108 equality_expression: equality_expression EQ relational_expression .

    LTEQ  shift, and go to state 429
    GTEQ  shift, and go to state 430
    '<'   shift, and go to state 431
    '>'   shift, and go to state 432

    '>'       [reduce using rule 108 (equality_expression)]
    $default  reduce using rule 108 (equality_expression)


state 602

  103 relational_expression: relational_expression . '<' shift_expression
  104                      | relational_expression . '>' shift_expression
  105                      | relational_expression . LTEQ shift_expression
  106                      | relational_expression . GTEQ shift_expression
  109 equality_expression: equality_expression NOTEQ relational_expression .

    LTEQ  shift, and go to state 429
    GTEQ  shift, and go to state 430
    '<'   shift, and go to state 431
    '>'   shift, and go to state 432

    '>'       [reduce using rule 109 (equality_expression)]
    $default  reduce using rule 109 (equality_expression)


state 603

  108 equality_expression: equality_expression . EQ relational_expression
  109                    | equality_expression . NOTEQ relational_expression
  111 and_expression: and_expression '&' equality_expression .

    EQ     shift, and go to state 433
    NOTEQ  shift, and go to state 434

    $default  reduce using rule 111 (and_expression)


state 604

  111 and_expression: and_expression . '&' equality_expression
  113 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 435

    $default  reduce using rule 113 (exclusive_or_expression)


state 605

  113 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  115 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 436

    $default  reduce using rule 115 (inclusive_or_expression)


state 606

  115 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  117 logical_and_expression: logical_and_expression ANDAND inclusive_or_expression .

    '|'  shift, and go to state 437

    $default  reduce using rule 117 (logical_and_expression)


state 607

  117 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression
  119 logical_or_expression: logical_or_expression OROR logical_and_expression .

    ANDAND  shift, and go to state 438

    $default  reduce using rule 119 (logical_or_expression)


state 608

  121 conditional_expression: logical_or_expression '?' expression . ':' assignment_expression
  137 expression: expression . ',' assignment_expression

    ','  shift, and go to state 577
    ':'  shift, and go to state 709


state 609

  123 assignment_expression: logical_or_expression assignment_operator assignment_expression .

    $default  reduce using rule 123 (assignment_expression)


state 610

  297 direct_abstract_declarator: '(' abstract_declarator . ')'

    ')'  shift, and go to state 710


state 611

  290 abstract_declarator: ptr_operator abstract_declarator_opt .

    $default  reduce using rule 290 (abstract_declarator)


state 612

  292 direct_abstract_declarator: direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  293                           | direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' cv_qualifier_seq
  294                           | direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' exception_specification
  295                           | direct_abstract_declarator_opt '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 324
    COLONCOLON      shift, and go to state 113
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    $default  reduce using rule 301 (parameter_declaration_clause)

    typedef_name                  go to state 47
    namespace_name                go to state 48
    original_namespace_name       go to state 49
    class_name                    go to state 50
    enum_name                     go to state 51
    template_name                 go to state 52
    nested_name_specifier         go to state 154
    decl_specifier                go to state 63
    decl_specifier_seq            go to state 325
    storage_class_specifier       go to state 65
    function_specifier            go to state 66
    type_specifier                go to state 67
    simple_type_specifier         go to state 68
    type_name                     go to state 69
    elaborated_type_specifier     go to state 70
    enum_specifier                go to state 71
    cv_qualifier                  go to state 85
    parameter_declaration_clause  go to state 711
    parameter_declaration_list    go to state 327
    parameter_declaration         go to state 328
    class_specifier               go to state 88
    class_head                    go to state 89
    class_key                     go to state 90
    template_id                   go to state 94


state 613

  296 direct_abstract_declarator: direct_abstract_declarator_opt '[' . constant_expression_opt ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    $default  reduce using rule 476 (constant_expression_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 331
    conditional_expression     go to state 332
    constant_expression        go to state 333
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    constant_expression_opt    go to state 712


state 614

  434 template_argument_list: template_argument_list ',' template_argument .

    $default  reduce using rule 434 (template_argument_list)


state 615

  315 initializer: '(' expression_list ')' .

    $default  reduce using rule 315 (initializer)


state 616

   57 expression_list: expression_list ',' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 713
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 617

  318 initializer_clause: '{' '}' .

    $default  reduce using rule 318 (initializer_clause)


state 618

  319 initializer_list: initializer_clause .

    $default  reduce using rule 319 (initializer_list)


state 619

  317 initializer_clause: '{' initializer_list . COMMA_opt '}'
  320 initializer_list: initializer_list . ',' initializer_clause

    ','  shift, and go to state 714

    $default  reduce using rule 486 (COMMA_opt)

    COMMA_opt  go to state 715


state 620

  443 handler: CATCH . '(' exception_declaration ')' compound_statement

    '('  shift, and go to state 716


state 621

  441 function_try_block: TRY ctor_initializer_opt function_body handler_seq .

    $default  reduce using rule 441 (function_try_block)


state 622

  442 handler_seq: handler . handler_seq_opt

    CATCH  shift, and go to state 620

    $default  reduce using rule 496 (handler_seq_opt)

    handler_seq      go to state 717
    handler          go to state 622
    handler_seq_opt  go to state 718


state 623

  373 mem_initializer_id: COLONCOLON nested_name_specifier class_name .

    $default  reduce using rule 373 (mem_initializer_id)


state 624

  371 mem_initializer_list: mem_initializer ',' mem_initializer_list .

    $default  reduce using rule 371 (mem_initializer_list)


state 625

  372 mem_initializer: mem_initializer_id '(' expression_list_opt . ')'

    ')'  shift, and go to state 719


state 626

  164 jump_statement: BREAK ';' .

    $default  reduce using rule 164 (jump_statement)


state 627

  148 labeled_statement: CASE constant_expression . ':' statement

    ':'  shift, and go to state 720


state 628

  165 jump_statement: CONTINUE ';' .

    $default  reduce using rule 165 (jump_statement)


state 629

  149 labeled_statement: DEFAULT ':' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 247
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 475
    CASE              shift, and go to state 476
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 250
    CONTINUE          shift, and go to state 477
    DEFAULT           shift, and go to state 478
    DELETE            shift, and go to state 251
    DO                shift, and go to state 479
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 252
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 253
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 480
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 481
    IF                shift, and go to state 482
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 483
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 255
    RETURN            shift, and go to state 484
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 256
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 257
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 485
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TRY               shift, and go to state 486
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 261
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 487
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268
    '{'               shift, and go to state 321

    $default  reduce using rule 466 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 488
    literal                     go to state 270
    integer_literal             go to state 271
    character_literal           go to state 272
    floating_literal            go to state 273
    string_literal              go to state 274
    boolean_literal             go to state 275
    primary_expression          go to state 276
    id_expression               go to state 277
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 278
    postfix_expression          go to state 279
    unary_expression            go to state 280
    unary_operator              go to state 281
    new_expression              go to state 282
    delete_expression           go to state 283
    cast_expression             go to state 284
    pm_expression               go to state 285
    multiplicative_expression   go to state 286
    additive_expression         go to state 287
    shift_expression            go to state 288
    relational_expression       go to state 289
    equality_expression         go to state 290
    and_expression              go to state 291
    exclusive_or_expression     go to state 292
    inclusive_or_expression     go to state 293
    logical_and_expression      go to state 294
    logical_or_expression       go to state 295
    conditional_expression      go to state 296
    assignment_expression       go to state 408
    expression                  go to state 489
    statement                   go to state 721
    labeled_statement           go to state 491
    expression_statement        go to state 492
    compound_statement          go to state 493
    selection_statement         go to state 495
    iteration_statement         go to state 496
    jump_statement              go to state 497
    declaration_statement       go to state 498
    block_declaration           go to state 499
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 500
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 501
    throw_expression            go to state 302
    expression_opt              go to state 502


state 630

  160 iteration_statement: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 722


state 631

  161 iteration_statement: FOR '(' . for_init_statement condition_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 247
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 252
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 253
    FLOAT             shift, and go to state 19
    FRIEND            shift, and go to state 20
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 255
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 256
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 257
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 261
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    $default  reduce using rule 466 (expression_opt)

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 278
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 408
    expression                 go to state 489
    expression_statement       go to state 723
    for_init_statement         go to state 724
    simple_declaration         go to state 725
    decl_specifier             go to state 63
    decl_specifier_seq         go to state 500
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302
    expression_opt             go to state 502


state 632

  167 jump_statement: GOTO identifier . ';'

    ';'  shift, and go to state 726


state 633

  154 selection_statement: IF '(' . condition ')' statement
  155                    | IF '(' . condition ')' statement ELSE statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 247
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 252
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 253
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 278
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 408
    expression                 go to state 727
    condition                  go to state 728
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 729
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 634

  244 namespace_alias_definition: NAMESPACE identifier . '=' qualified_namespace_specifier ';'

    '='  shift, and go to state 215


state 635

  166 jump_statement: RETURN expression_opt . ';'

    ';'  shift, and go to state 730


state 636

  156 selection_statement: SWITCH '(' . condition ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 247
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 252
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 253
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 278
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 408
    expression                 go to state 727
    condition                  go to state 731
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 729
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 637

  440 try_block: TRY compound_statement . handler_seq

    CATCH  shift, and go to state 620

    handler_seq  go to state 732
    handler      go to state 622


state 638

  159 iteration_statement: WHILE '(' . condition ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 247
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 252
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 253
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 278
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 408
    expression                 go to state 727
    condition                  go to state 733
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 729
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 639

  147 labeled_statement: identifier ':' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 247
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 475
    CASE              shift, and go to state 476
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 250
    CONTINUE          shift, and go to state 477
    DEFAULT           shift, and go to state 478
    DELETE            shift, and go to state 251
    DO                shift, and go to state 479
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 252
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 253
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 480
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 481
    IF                shift, and go to state 482
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 483
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 255
    RETURN            shift, and go to state 484
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 256
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 257
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 485
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TRY               shift, and go to state 486
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 261
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 487
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268
    '{'               shift, and go to state 321

    $default  reduce using rule 466 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 488
    literal                     go to state 270
    integer_literal             go to state 271
    character_literal           go to state 272
    floating_literal            go to state 273
    string_literal              go to state 274
    boolean_literal             go to state 275
    primary_expression          go to state 276
    id_expression               go to state 277
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 278
    postfix_expression          go to state 279
    unary_expression            go to state 280
    unary_operator              go to state 281
    new_expression              go to state 282
    delete_expression           go to state 283
    cast_expression             go to state 284
    pm_expression               go to state 285
    multiplicative_expression   go to state 286
    additive_expression         go to state 287
    shift_expression            go to state 288
    relational_expression       go to state 289
    equality_expression         go to state 290
    and_expression              go to state 291
    exclusive_or_expression     go to state 292
    inclusive_or_expression     go to state 293
    logical_and_expression      go to state 294
    logical_or_expression       go to state 295
    conditional_expression      go to state 296
    assignment_expression       go to state 408
    expression                  go to state 489
    statement                   go to state 734
    labeled_statement           go to state 491
    expression_statement        go to state 492
    compound_statement          go to state 493
    selection_statement         go to state 495
    iteration_statement         go to state 496
    jump_statement              go to state 497
    declaration_statement       go to state 498
    block_declaration           go to state 499
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 500
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 501
    throw_expression            go to state 302
    expression_opt              go to state 502


state 640

  153 statement_seq: statement_seq statement .

    $default  reduce using rule 153 (statement_seq)


state 641

  150 expression_statement: expression_opt ';' .

    $default  reduce using rule 150 (expression_statement)


state 642

  151 compound_statement: '{' statement_seq_opt '}' .

    $default  reduce using rule 151 (compound_statement)


state 643

  306 parameter_declaration: decl_specifier_seq declarator '=' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 735
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 644

  308 parameter_declaration: decl_specifier_seq abstract_declarator_opt '=' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 736
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 645

  449 exception_specification: THROW . '(' type_id_list_opt ')'

    '('  shift, and go to state 737


state 646

  267 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq . exception_specification
  268                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq .

    THROW  shift, and go to state 645

    $default  reduce using rule 268 (direct_declarator)

    exception_specification  go to state 738


state 647

  269 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' exception_specification .

    $default  reduce using rule 269 (direct_declarator)


state 648

  302 parameter_declaration_clause: parameter_declaration_list ',' ELLIPSIS .

    $default  reduce using rule 302 (parameter_declaration_clause)


state 649

  304 parameter_declaration_list: parameter_declaration_list ',' parameter_declaration .

    $default  reduce using rule 304 (parameter_declaration_list)


state 650

  345 member_declarator: identifier ':' constant_expression .

    $default  reduce using rule 345 (member_declarator)


state 651

  331 member_declaration: decl_specifier_seq member_declarator_list ';' .

    $default  reduce using rule 331 (member_declaration)


state 652

  346 pure_specifier: '=' '0' .

    $default  reduce using rule 346 (pure_specifier)


state 653

  347 constant_initializer: '=' constant_expression .

    $default  reduce using rule 347 (constant_initializer)


state 654

  342 member_declarator: declarator .
  343                  | declarator . pure_specifier
  344                  | declarator . constant_initializer

    '='  shift, and go to state 517

    $default  reduce using rule 342 (member_declarator)

    pure_specifier        go to state 518
    constant_initializer  go to state 519


state 655

  340 member_declarator_list: member_declarator_list ',' member_declarator .

    $default  reduce using rule 340 (member_declarator_list)


state 656

  330 member_specification: access_specifier ':' member_specification_opt .

    $default  reduce using rule 330 (member_specification)


state 657

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON
  352 base_specifier: COLONCOLON class_name .

    COLONCOLON  shift, and go to state 174

    $default  reduce using rule 352 (base_specifier)


state 658

  351 base_specifier: COLONCOLON nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 739
    template_name  go to state 52
    template_id    go to state 94


state 659

  357 base_specifier: VIRTUAL COLONCOLON . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 454 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 454 (nested_name_specifier_opt)]

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    nested_name_specifier      go to state 217
    template_id                go to state 94
    nested_name_specifier_opt  go to state 740


state 660

  355 base_specifier: VIRTUAL access_specifier . COLONCOLON nested_name_specifier_opt class_name
  356               | VIRTUAL access_specifier . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 741

    CLASS_NAME     [reduce using rule 454 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 454 (nested_name_specifier_opt)]

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    nested_name_specifier      go to state 217
    template_id                go to state 94
    nested_name_specifier_opt  go to state 742


state 661

  358 base_specifier: VIRTUAL nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 743
    template_name  go to state 52
    template_id    go to state 94


state 662

  353 base_specifier: nested_name_specifier class_name .

    $default  reduce using rule 353 (base_specifier)


state 663

  350 base_specifier_list: base_specifier_list ',' . base_specifier

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 528
    PRIVATE         shift, and go to state 335
    PROTECTED       shift, and go to state 336
    PUBLIC          shift, and go to state 337
    VIRTUAL         shift, and go to state 529

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 530
    template_name            go to state 52
    nested_name_specifier    go to state 531
    base_specifier           go to state 744
    access_specifier         go to state 534
    template_id              go to state 94


state 664

  361 base_specifier: access_specifier COLONCOLON . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 454 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 454 (nested_name_specifier_opt)]

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    nested_name_specifier      go to state 217
    template_id                go to state 94
    nested_name_specifier_opt  go to state 745


state 665

  359 base_specifier: access_specifier VIRTUAL . COLONCOLON nested_name_specifier_opt class_name
  360               | access_specifier VIRTUAL . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 746

    CLASS_NAME     [reduce using rule 454 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 454 (nested_name_specifier_opt)]

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    nested_name_specifier      go to state 217
    template_id                go to state 94
    nested_name_specifier_opt  go to state 747


state 666

  362 base_specifier: access_specifier nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 748
    template_name  go to state 52
    template_id    go to state 94


state 667

  426 type_parameter: CLASS identifier .
  427               | CLASS identifier . '=' type_id

    '='  shift, and go to state 749

    $default  reduce using rule 426 (type_parameter)


state 668

  430 type_parameter: TEMPLATE '<' . template_parameter_list '>' CLASS identifier
  431               | TEMPLATE '<' . template_parameter_list '>' CLASS identifier '=' template_name

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 536
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 537
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 538
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    decl_specifier             go to state 63
    decl_specifier_seq         go to state 325
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    parameter_declaration      go to state 539
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_parameter_list    go to state 750
    template_parameter         go to state 541
    type_parameter             go to state 542
    template_id                go to state 94


state 669

  428 type_parameter: TYPENAME identifier .
  429               | TYPENAME identifier . '=' type_id

    '='  shift, and go to state 751

    $default  reduce using rule 428 (type_parameter)


state 670

  421 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' . declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 494 (EXPORT_opt)]

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration                     go to state 752
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    EXPORT_opt                      go to state 98


state 671

  423 template_parameter_list: template_parameter_list ',' . template_parameter

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 536
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 183
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 537
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 538
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    decl_specifier             go to state 63
    decl_specifier_seq         go to state 325
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    parameter_declaration      go to state 539
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_parameter         go to state 753
    type_parameter             go to state 542
    template_id                go to state 94


state 672

  232 enumerator_list: enumerator_list ',' enumerator_definition .

    $default  reduce using rule 232 (enumerator_list)


state 673

  234 enumerator_definition: enumerator '=' constant_expression .

    $default  reduce using rule 234 (enumerator_definition)


state 674

  245 qualified_namespace_specifier: COLONCOLON nested_name_specifier namespace_name .

    $default  reduce using rule 245 (qualified_namespace_specifier)


state 675

  229 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list . '>'
  434 template_argument_list: template_argument_list . ',' template_argument

    '>'  shift, and go to state 754
    ','  shift, and go to state 460


state 676

  254 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier namespace_name ';' .

    $default  reduce using rule 254 (using_directive)


state 677

  249 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 249 (using_declaration)


state 678

   86 delete_expression: COLONCOLON DELETE '[' ']' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 270
    integer_literal          go to state 271
    character_literal        go to state 272
    floating_literal         go to state 273
    string_literal           go to state 274
    boolean_literal          go to state 275
    primary_expression       go to state 276
    id_expression            go to state 277
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 330
    postfix_expression       go to state 279
    unary_expression         go to state 280
    unary_operator           go to state 281
    new_expression           go to state 282
    delete_expression        go to state 283
    cast_expression          go to state 755
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 679

   75 new_expression: COLONCOLON NEW new_placement_opt '(' . type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 756
    type_specifier_seq         go to state 299
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 680

   73 new_expression: COLONCOLON NEW new_placement_opt new_type_id . new_initializer_opt

    '('  shift, and go to state 686

    $default  reduce using rule 462 (new_initializer_opt)

    new_initializer      go to state 687
    new_initializer_opt  go to state 757


state 681

   53 postfix_expression: CONST_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 758


state 682

   85 delete_expression: DELETE '[' ']' cast_expression .

    $default  reduce using rule 85 (delete_expression)


state 683

   50 postfix_expression: DYNAMIC_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 759


state 684

   76 new_placement: '(' expression_list ')' .

    $default  reduce using rule 76 (new_placement)


state 685

   74 new_expression: NEW new_placement_opt '(' type_id . ')' new_initializer_opt

    ')'  shift, and go to state 760


state 686

   82 new_initializer: '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    $default  reduce using rule 456 (expression_list_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    expression_list            go to state 582
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 464
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302
    expression_list_opt        go to state 761


state 687

  463 new_initializer_opt: new_initializer .

    $default  reduce using rule 463 (new_initializer_opt)


state 688

   72 new_expression: NEW new_placement_opt new_type_id new_initializer_opt .

    $default  reduce using rule 72 (new_expression)


state 689

   80 direct_new_declarator: '[' . expression ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 408
    expression                 go to state 762
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 690

  465 new_declarator_opt: new_declarator .

    $default  reduce using rule 465 (new_declarator_opt)


state 691

   79 new_declarator: direct_new_declarator .
   81 direct_new_declarator: direct_new_declarator . '[' constant_expression ']'

    '['  shift, and go to state 763

    $default  reduce using rule 79 (new_declarator)


state 692

   78 new_declarator: ptr_operator . new_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 224
    '['             shift, and go to state 689
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '*'       [reduce using rule 464 (new_declarator_opt)]
    '&'       [reduce using rule 464 (new_declarator_opt)]
    $default  reduce using rule 464 (new_declarator_opt)

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    nested_name_specifier    go to state 225
    new_declarator           go to state 690
    direct_new_declarator    go to state 691
    ptr_operator             go to state 692
    template_id              go to state 94
    new_declarator_opt       go to state 764


state 693

   77 new_type_id: type_specifier_seq new_declarator_opt .

    $default  reduce using rule 77 (new_type_id)


state 694

   52 postfix_expression: REINTERPRET_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 765


state 695

   65 unary_expression: SIZEOF '(' type_id ')' .

    $default  reduce using rule 65 (unary_expression)


state 696

   51 postfix_expression: STATIC_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 766


state 697

   54 postfix_expression: TYPEID '(' expression ')' .

    $default  reduce using rule 54 (postfix_expression)


state 698

   55 postfix_expression: TYPEID '(' type_id ')' .

    $default  reduce using rule 55 (postfix_expression)


state 699

  137 expression: expression ',' assignment_expression .

    $default  reduce using rule 137 (expression)


state 700

   88 cast_expression: '(' type_id ')' cast_expression .

    $default  reduce using rule 88 (cast_expression)


state 701

   46 postfix_expression: postfix_expression ARROW COLONCOLON id_expression .

    $default  reduce using rule 46 (postfix_expression)


state 702

   44 postfix_expression: postfix_expression ARROW TEMPLATE COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 767
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 330
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 703

   45 postfix_expression: postfix_expression ARROW TEMPLATE id_expression .

    $default  reduce using rule 45 (postfix_expression)


state 704

   39 postfix_expression: postfix_expression '(' expression_list_opt ')' .

    $default  reduce using rule 39 (postfix_expression)


state 705

   38 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 38 (postfix_expression)


state 706

   42 postfix_expression: postfix_expression '.' COLONCOLON id_expression .

    $default  reduce using rule 42 (postfix_expression)


state 707

   40 postfix_expression: postfix_expression '.' TEMPLATE COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 768
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 330
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 708

   41 postfix_expression: postfix_expression '.' TEMPLATE id_expression .

    $default  reduce using rule 41 (postfix_expression)


state 709

  121 conditional_expression: logical_or_expression '?' expression ':' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 769
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 710

  297 direct_abstract_declarator: '(' abstract_declarator ')' .

    $default  reduce using rule 297 (direct_abstract_declarator)


state 711

  292 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' cv_qualifier_seq exception_specification
  293                           | direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' cv_qualifier_seq
  294                           | direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' exception_specification
  295                           | direct_abstract_declarator_opt '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 770


state 712

  296 direct_abstract_declarator: direct_abstract_declarator_opt '[' constant_expression_opt . ']'

    ']'  shift, and go to state 771


state 713

   57 expression_list: expression_list ',' assignment_expression .

    $default  reduce using rule 57 (expression_list)


state 714

  320 initializer_list: initializer_list ',' . initializer_clause
  487 COMMA_opt: ',' .

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268
    '{'               shift, and go to state 465

    $default  reduce using rule 487 (COMMA_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 466
    initializer_clause         go to state 772
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 715

  317 initializer_clause: '{' initializer_list COMMA_opt . '}'

    '}'  shift, and go to state 773


state 716

  443 handler: CATCH '(' . exception_declaration ')' compound_statement

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 774
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 775
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94
    exception_declaration      go to state 776


state 717

  497 handler_seq_opt: handler_seq .

    $default  reduce using rule 497 (handler_seq_opt)


state 718

  442 handler_seq: handler handler_seq_opt .

    $default  reduce using rule 442 (handler_seq)


state 719

  372 mem_initializer: mem_initializer_id '(' expression_list_opt ')' .

    $default  reduce using rule 372 (mem_initializer)


state 720

  148 labeled_statement: CASE constant_expression ':' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 247
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 475
    CASE              shift, and go to state 476
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 250
    CONTINUE          shift, and go to state 477
    DEFAULT           shift, and go to state 478
    DELETE            shift, and go to state 251
    DO                shift, and go to state 479
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 252
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 253
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 480
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 481
    IF                shift, and go to state 482
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 483
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 255
    RETURN            shift, and go to state 484
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 256
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 257
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 485
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TRY               shift, and go to state 486
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 261
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 487
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268
    '{'               shift, and go to state 321

    $default  reduce using rule 466 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 488
    literal                     go to state 270
    integer_literal             go to state 271
    character_literal           go to state 272
    floating_literal            go to state 273
    string_literal              go to state 274
    boolean_literal             go to state 275
    primary_expression          go to state 276
    id_expression               go to state 277
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 278
    postfix_expression          go to state 279
    unary_expression            go to state 280
    unary_operator              go to state 281
    new_expression              go to state 282
    delete_expression           go to state 283
    cast_expression             go to state 284
    pm_expression               go to state 285
    multiplicative_expression   go to state 286
    additive_expression         go to state 287
    shift_expression            go to state 288
    relational_expression       go to state 289
    equality_expression         go to state 290
    and_expression              go to state 291
    exclusive_or_expression     go to state 292
    inclusive_or_expression     go to state 293
    logical_and_expression      go to state 294
    logical_or_expression       go to state 295
    conditional_expression      go to state 296
    assignment_expression       go to state 408
    expression                  go to state 489
    statement                   go to state 777
    labeled_statement           go to state 491
    expression_statement        go to state 492
    compound_statement          go to state 493
    selection_statement         go to state 495
    iteration_statement         go to state 496
    jump_statement              go to state 497
    declaration_statement       go to state 498
    block_declaration           go to state 499
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 500
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 501
    throw_expression            go to state 302
    expression_opt              go to state 502


state 721

  149 labeled_statement: DEFAULT ':' statement .

    $default  reduce using rule 149 (labeled_statement)


state 722

  160 iteration_statement: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 778


state 723

  162 for_init_statement: expression_statement .

    $default  reduce using rule 162 (for_init_statement)


state 724

  161 iteration_statement: FOR '(' for_init_statement . condition_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 247
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 252
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 253
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    $default  reduce using rule 470 (condition_opt)

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 278
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 408
    expression                 go to state 727
    condition                  go to state 779
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 729
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302
    condition_opt              go to state 780


state 725

  163 for_init_statement: simple_declaration .

    $default  reduce using rule 163 (for_init_statement)


state 726

  167 jump_statement: GOTO identifier ';' .

    $default  reduce using rule 167 (jump_statement)


state 727

  137 expression: expression . ',' assignment_expression
  157 condition: expression .

    ','  shift, and go to state 577

    $default  reduce using rule 157 (condition)


state 728

  154 selection_statement: IF '(' condition . ')' statement
  155                    | IF '(' condition . ')' statement ELSE statement

    ')'  shift, and go to state 781


state 729

  158 condition: type_specifier_seq . declarator '=' assignment_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 167
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 105
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 55
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 168
    declarator               go to state 782
    direct_declarator        go to state 83
    ptr_operator             go to state 84
    declarator_id            go to state 86
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 730

  166 jump_statement: RETURN expression_opt ';' .

    $default  reduce using rule 166 (jump_statement)


state 731

  156 selection_statement: SWITCH '(' condition . ')' statement

    ')'  shift, and go to state 783


state 732

  440 try_block: TRY compound_statement handler_seq .

    $default  reduce using rule 440 (try_block)


state 733

  159 iteration_statement: WHILE '(' condition . ')' statement

    ')'  shift, and go to state 784


state 734

  147 labeled_statement: identifier ':' statement .

    $default  reduce using rule 147 (labeled_statement)


state 735

  306 parameter_declaration: decl_specifier_seq declarator '=' assignment_expression .

    $default  reduce using rule 306 (parameter_declaration)


state 736

  308 parameter_declaration: decl_specifier_seq abstract_declarator_opt '=' assignment_expression .

    $default  reduce using rule 308 (parameter_declaration)


state 737

  449 exception_specification: THROW '(' . type_id_list_opt ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    $default  reduce using rule 500 (type_id_list_opt)

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 785
    type_specifier_seq         go to state 299
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94
    type_id_list               go to state 786
    type_id_list_opt           go to state 787


state 738

  267 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification .

    $default  reduce using rule 267 (direct_declarator)


state 739

  351 base_specifier: COLONCOLON nested_name_specifier class_name .

    $default  reduce using rule 351 (base_specifier)


state 740

  357 base_specifier: VIRTUAL COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 788
    template_name  go to state 52
    template_id    go to state 94


state 741

  355 base_specifier: VIRTUAL access_specifier COLONCOLON . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 454 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 454 (nested_name_specifier_opt)]

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    nested_name_specifier      go to state 217
    template_id                go to state 94
    nested_name_specifier_opt  go to state 789


state 742

  356 base_specifier: VIRTUAL access_specifier nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 790
    template_name  go to state 52
    template_id    go to state 94


state 743

  358 base_specifier: VIRTUAL nested_name_specifier_opt class_name .

    $default  reduce using rule 358 (base_specifier)


state 744

  350 base_specifier_list: base_specifier_list ',' base_specifier .

    $default  reduce using rule 350 (base_specifier_list)


state 745

  361 base_specifier: access_specifier COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 791
    template_name  go to state 52
    template_id    go to state 94


state 746

  359 base_specifier: access_specifier VIRTUAL COLONCOLON . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 454 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 454 (nested_name_specifier_opt)]

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    nested_name_specifier      go to state 217
    template_id                go to state 94
    nested_name_specifier_opt  go to state 792


state 747

  360 base_specifier: access_specifier VIRTUAL nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 793
    template_name  go to state 52
    template_id    go to state 94


state 748

  362 base_specifier: access_specifier nested_name_specifier_opt class_name .

    $default  reduce using rule 362 (base_specifier)


state 749

  427 type_parameter: CLASS identifier '=' . type_id

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 794
    type_specifier_seq         go to state 299
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 750

  423 template_parameter_list: template_parameter_list . ',' template_parameter
  430 type_parameter: TEMPLATE '<' template_parameter_list . '>' CLASS identifier
  431               | TEMPLATE '<' template_parameter_list . '>' CLASS identifier '=' template_name

    '>'  shift, and go to state 795
    ','  shift, and go to state 671


state 751

  429 type_parameter: TYPENAME identifier '=' . type_id

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 796
    type_specifier_seq         go to state 299
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 752

  421 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' declaration .

    $default  reduce using rule 421 (template_declaration)


state 753

  423 template_parameter_list: template_parameter_list ',' template_parameter .

    $default  reduce using rule 423 (template_parameter_list)


state 754

  229 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>' .

    $default  reduce using rule 229 (elaborated_type_specifier)


state 755

   86 delete_expression: COLONCOLON DELETE '[' ']' cast_expression .

    $default  reduce using rule 86 (delete_expression)


state 756

   75 new_expression: COLONCOLON NEW new_placement_opt '(' type_id . ')' new_initializer_opt

    ')'  shift, and go to state 797


state 757

   73 new_expression: COLONCOLON NEW new_placement_opt new_type_id new_initializer_opt .

    $default  reduce using rule 73 (new_expression)


state 758

   53 postfix_expression: CONST_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 408
    expression                 go to state 798
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 759

   50 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 408
    expression                 go to state 799
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 760

   74 new_expression: NEW new_placement_opt '(' type_id ')' . new_initializer_opt

    '('  shift, and go to state 686

    $default  reduce using rule 462 (new_initializer_opt)

    new_initializer      go to state 687
    new_initializer_opt  go to state 800


state 761

   82 new_initializer: '(' expression_list_opt . ')'

    ')'  shift, and go to state 801


state 762

   80 direct_new_declarator: '[' expression . ']'
  137 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 802
    ','  shift, and go to state 577


state 763

   81 direct_new_declarator: direct_new_declarator '[' . constant_expression ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 331
    conditional_expression     go to state 332
    constant_expression        go to state 803
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 764

   78 new_declarator: ptr_operator new_declarator_opt .

    $default  reduce using rule 78 (new_declarator)


state 765

   52 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 408
    expression                 go to state 804
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 766

   51 postfix_expression: STATIC_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 408
    expression                 go to state 805
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 767

   44 postfix_expression: postfix_expression ARROW TEMPLATE COLONCOLON id_expression .

    $default  reduce using rule 44 (postfix_expression)


state 768

   40 postfix_expression: postfix_expression '.' TEMPLATE COLONCOLON id_expression .

    $default  reduce using rule 40 (postfix_expression)


state 769

  121 conditional_expression: logical_or_expression '?' expression ':' assignment_expression .

    $default  reduce using rule 121 (conditional_expression)


state 770

  292 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . cv_qualifier_seq exception_specification
  293                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . cv_qualifier_seq
  294                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . exception_specification
  295                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' .

    CONST     shift, and go to state 13
    THROW     shift, and go to state 645
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 295 (direct_abstract_declarator)

    cv_qualifier_seq         go to state 806
    cv_qualifier             go to state 172
    exception_specification  go to state 807


state 771

  296 direct_abstract_declarator: direct_abstract_declarator_opt '[' constant_expression_opt ']' .

    $default  reduce using rule 296 (direct_abstract_declarator)


state 772

  320 initializer_list: initializer_list ',' initializer_clause .

    $default  reduce using rule 320 (initializer_list)


state 773

  317 initializer_clause: '{' initializer_list COMMA_opt '}' .

    $default  reduce using rule 317 (initializer_clause)


state 774

  447 exception_declaration: ELLIPSIS .

    $default  reduce using rule 447 (exception_declaration)


state 775

  444 exception_declaration: type_specifier_seq . declarator
  445                      | type_specifier_seq . abstract_declarator
  446                      | type_specifier_seq .

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 167
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 504
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '('       [reduce using rule 482 (direct_abstract_declarator_opt)]
    '['       reduce using rule 482 (direct_abstract_declarator_opt)
    $default  reduce using rule 446 (exception_declaration)

    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 105
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 168
    declarator                      go to state 808
    direct_declarator               go to state 83
    ptr_operator                    go to state 506
    declarator_id                   go to state 86
    abstract_declarator             go to state 809
    direct_abstract_declarator      go to state 456
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_id                     go to state 94
    direct_abstract_declarator_opt  go to state 458


state 776

  443 handler: CATCH '(' exception_declaration . ')' compound_statement

    ')'  shift, and go to state 810


state 777

  148 labeled_statement: CASE constant_expression ':' statement .

    $default  reduce using rule 148 (labeled_statement)


state 778

  160 iteration_statement: DO statement WHILE '(' . expression ')' ';'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 408
    expression                 go to state 811
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 779

  471 condition_opt: condition .

    $default  reduce using rule 471 (condition_opt)


state 780

  161 iteration_statement: FOR '(' for_init_statement condition_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 812


state 781

  154 selection_statement: IF '(' condition ')' . statement
  155                    | IF '(' condition ')' . statement ELSE statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 247
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 475
    CASE              shift, and go to state 476
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 250
    CONTINUE          shift, and go to state 477
    DEFAULT           shift, and go to state 478
    DELETE            shift, and go to state 251
    DO                shift, and go to state 479
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 252
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 253
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 480
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 481
    IF                shift, and go to state 482
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 483
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 255
    RETURN            shift, and go to state 484
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 256
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 257
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 485
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TRY               shift, and go to state 486
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 261
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 487
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268
    '{'               shift, and go to state 321

    $default  reduce using rule 466 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 488
    literal                     go to state 270
    integer_literal             go to state 271
    character_literal           go to state 272
    floating_literal            go to state 273
    string_literal              go to state 274
    boolean_literal             go to state 275
    primary_expression          go to state 276
    id_expression               go to state 277
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 278
    postfix_expression          go to state 279
    unary_expression            go to state 280
    unary_operator              go to state 281
    new_expression              go to state 282
    delete_expression           go to state 283
    cast_expression             go to state 284
    pm_expression               go to state 285
    multiplicative_expression   go to state 286
    additive_expression         go to state 287
    shift_expression            go to state 288
    relational_expression       go to state 289
    equality_expression         go to state 290
    and_expression              go to state 291
    exclusive_or_expression     go to state 292
    inclusive_or_expression     go to state 293
    logical_and_expression      go to state 294
    logical_or_expression       go to state 295
    conditional_expression      go to state 296
    assignment_expression       go to state 408
    expression                  go to state 489
    statement                   go to state 813
    labeled_statement           go to state 491
    expression_statement        go to state 492
    compound_statement          go to state 493
    selection_statement         go to state 495
    iteration_statement         go to state 496
    jump_statement              go to state 497
    declaration_statement       go to state 498
    block_declaration           go to state 499
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 500
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 501
    throw_expression            go to state 302
    expression_opt              go to state 502


state 782

  158 condition: type_specifier_seq declarator . '=' assignment_expression

    '='  shift, and go to state 814


state 783

  156 selection_statement: SWITCH '(' condition ')' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 247
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 475
    CASE              shift, and go to state 476
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 250
    CONTINUE          shift, and go to state 477
    DEFAULT           shift, and go to state 478
    DELETE            shift, and go to state 251
    DO                shift, and go to state 479
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 252
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 253
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 480
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 481
    IF                shift, and go to state 482
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 483
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 255
    RETURN            shift, and go to state 484
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 256
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 257
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 485
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TRY               shift, and go to state 486
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 261
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 487
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268
    '{'               shift, and go to state 321

    $default  reduce using rule 466 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 488
    literal                     go to state 270
    integer_literal             go to state 271
    character_literal           go to state 272
    floating_literal            go to state 273
    string_literal              go to state 274
    boolean_literal             go to state 275
    primary_expression          go to state 276
    id_expression               go to state 277
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 278
    postfix_expression          go to state 279
    unary_expression            go to state 280
    unary_operator              go to state 281
    new_expression              go to state 282
    delete_expression           go to state 283
    cast_expression             go to state 284
    pm_expression               go to state 285
    multiplicative_expression   go to state 286
    additive_expression         go to state 287
    shift_expression            go to state 288
    relational_expression       go to state 289
    equality_expression         go to state 290
    and_expression              go to state 291
    exclusive_or_expression     go to state 292
    inclusive_or_expression     go to state 293
    logical_and_expression      go to state 294
    logical_or_expression       go to state 295
    conditional_expression      go to state 296
    assignment_expression       go to state 408
    expression                  go to state 489
    statement                   go to state 815
    labeled_statement           go to state 491
    expression_statement        go to state 492
    compound_statement          go to state 493
    selection_statement         go to state 495
    iteration_statement         go to state 496
    jump_statement              go to state 497
    declaration_statement       go to state 498
    block_declaration           go to state 499
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 500
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 501
    throw_expression            go to state 302
    expression_opt              go to state 502


state 784

  159 iteration_statement: WHILE '(' condition ')' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 247
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 475
    CASE              shift, and go to state 476
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 250
    CONTINUE          shift, and go to state 477
    DEFAULT           shift, and go to state 478
    DELETE            shift, and go to state 251
    DO                shift, and go to state 479
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 252
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 253
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 480
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 481
    IF                shift, and go to state 482
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 483
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 255
    RETURN            shift, and go to state 484
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 256
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 257
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 485
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TRY               shift, and go to state 486
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 261
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 487
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268
    '{'               shift, and go to state 321

    $default  reduce using rule 466 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 488
    literal                     go to state 270
    integer_literal             go to state 271
    character_literal           go to state 272
    floating_literal            go to state 273
    string_literal              go to state 274
    boolean_literal             go to state 275
    primary_expression          go to state 276
    id_expression               go to state 277
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 278
    postfix_expression          go to state 279
    unary_expression            go to state 280
    unary_operator              go to state 281
    new_expression              go to state 282
    delete_expression           go to state 283
    cast_expression             go to state 284
    pm_expression               go to state 285
    multiplicative_expression   go to state 286
    additive_expression         go to state 287
    shift_expression            go to state 288
    relational_expression       go to state 289
    equality_expression         go to state 290
    and_expression              go to state 291
    exclusive_or_expression     go to state 292
    inclusive_or_expression     go to state 293
    logical_and_expression      go to state 294
    logical_or_expression       go to state 295
    conditional_expression      go to state 296
    assignment_expression       go to state 408
    expression                  go to state 489
    statement                   go to state 816
    labeled_statement           go to state 491
    expression_statement        go to state 492
    compound_statement          go to state 493
    selection_statement         go to state 495
    iteration_statement         go to state 496
    jump_statement              go to state 497
    declaration_statement       go to state 498
    block_declaration           go to state 499
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 500
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 501
    throw_expression            go to state 302
    expression_opt              go to state 502


state 785

  450 type_id_list: type_id .

    $default  reduce using rule 450 (type_id_list)


state 786

  451 type_id_list: type_id_list . ',' type_id
  501 type_id_list_opt: type_id_list .

    ','  shift, and go to state 817

    $default  reduce using rule 501 (type_id_list_opt)


state 787

  449 exception_specification: THROW '(' type_id_list_opt . ')'

    ')'  shift, and go to state 818


state 788

  357 base_specifier: VIRTUAL COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 357 (base_specifier)


state 789

  355 base_specifier: VIRTUAL access_specifier COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 819
    template_name  go to state 52
    template_id    go to state 94


state 790

  356 base_specifier: VIRTUAL access_specifier nested_name_specifier_opt class_name .

    $default  reduce using rule 356 (base_specifier)


state 791

  361 base_specifier: access_specifier COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 361 (base_specifier)


state 792

  359 base_specifier: access_specifier VIRTUAL COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 820
    template_name  go to state 52
    template_id    go to state 94


state 793

  360 base_specifier: access_specifier VIRTUAL nested_name_specifier_opt class_name .

    $default  reduce using rule 360 (base_specifier)


state 794

  427 type_parameter: CLASS identifier '=' type_id .

    $default  reduce using rule 427 (type_parameter)


state 795

  430 type_parameter: TEMPLATE '<' template_parameter_list '>' . CLASS identifier
  431               | TEMPLATE '<' template_parameter_list '>' . CLASS identifier '=' template_name

    CLASS  shift, and go to state 821


state 796

  429 type_parameter: TYPENAME identifier '=' type_id .

    $default  reduce using rule 429 (type_parameter)


state 797

   75 new_expression: COLONCOLON NEW new_placement_opt '(' type_id ')' . new_initializer_opt

    '('  shift, and go to state 686

    $default  reduce using rule 462 (new_initializer_opt)

    new_initializer      go to state 687
    new_initializer_opt  go to state 822


state 798

   53 postfix_expression: CONST_CAST '<' type_id '>' '(' expression . ')'
  137 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 823
    ','  shift, and go to state 577


state 799

   50 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' expression . ')'
  137 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 824
    ','  shift, and go to state 577


state 800

   74 new_expression: NEW new_placement_opt '(' type_id ')' new_initializer_opt .

    $default  reduce using rule 74 (new_expression)


state 801

   82 new_initializer: '(' expression_list_opt ')' .

    $default  reduce using rule 82 (new_initializer)


state 802

   80 direct_new_declarator: '[' expression ']' .

    $default  reduce using rule 80 (direct_new_declarator)


state 803

   81 direct_new_declarator: direct_new_declarator '[' constant_expression . ']'

    ']'  shift, and go to state 825


state 804

   52 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' expression . ')'
  137 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 826
    ','  shift, and go to state 577


state 805

   51 postfix_expression: STATIC_CAST '<' type_id '>' '(' expression . ')'
  137 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 827
    ','  shift, and go to state 577


state 806

  292 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq . exception_specification
  293                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq .

    THROW  shift, and go to state 645

    $default  reduce using rule 293 (direct_abstract_declarator)

    exception_specification  go to state 828


state 807

  294 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' exception_specification .

    $default  reduce using rule 294 (direct_abstract_declarator)


state 808

  444 exception_declaration: type_specifier_seq declarator .

    $default  reduce using rule 444 (exception_declaration)


state 809

  445 exception_declaration: type_specifier_seq abstract_declarator .

    $default  reduce using rule 445 (exception_declaration)


state 810

  443 handler: CATCH '(' exception_declaration ')' . compound_statement

    '{'  shift, and go to state 321

    compound_statement  go to state 829


state 811

  137 expression: expression . ',' assignment_expression
  160 iteration_statement: DO statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 830
    ','  shift, and go to state 577


state 812

  161 iteration_statement: FOR '(' for_init_statement condition_opt ';' . expression_opt ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    $default  reduce using rule 466 (expression_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 408
    expression                 go to state 489
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302
    expression_opt             go to state 831


state 813

  154 selection_statement: IF '(' condition ')' statement .
  155                    | IF '(' condition ')' statement . ELSE statement

    ELSE  shift, and go to state 832

    ELSE      [reduce using rule 154 (selection_statement)]
    $default  reduce using rule 154 (selection_statement)


state 814

  158 condition: type_specifier_seq declarator '=' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 329
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    CONST_CAST        shift, and go to state 250
    DELETE            shift, and go to state 251
    DYNAMIC_CAST      shift, and go to state 252
    FALSE             shift, and go to state 253
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 255
    SIZEOF            shift, and go to state 256
    STATIC_CAST       shift, and go to state 257
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TYPEID            shift, and go to state 261
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 105
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 270
    integer_literal            go to state 271
    character_literal          go to state 272
    floating_literal           go to state 273
    string_literal             go to state 274
    boolean_literal            go to state 275
    primary_expression         go to state 276
    id_expression              go to state 277
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 330
    postfix_expression         go to state 279
    unary_expression           go to state 280
    unary_operator             go to state 281
    new_expression             go to state 282
    delete_expression          go to state 283
    cast_expression            go to state 284
    pm_expression              go to state 285
    multiplicative_expression  go to state 286
    additive_expression        go to state 287
    shift_expression           go to state 288
    relational_expression      go to state 289
    equality_expression        go to state 290
    and_expression             go to state 291
    exclusive_or_expression    go to state 292
    inclusive_or_expression    go to state 293
    logical_and_expression     go to state 294
    logical_or_expression      go to state 295
    conditional_expression     go to state 296
    assignment_expression      go to state 833
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 302


state 815

  156 selection_statement: SWITCH '(' condition ')' statement .

    $default  reduce using rule 156 (selection_statement)


state 816

  159 iteration_statement: WHILE '(' condition ')' statement .

    $default  reduce using rule 159 (iteration_statement)


state 817

  451 type_id_list: type_id_list ',' . type_id

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 113
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 154
    type_specifier             go to state 155
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 834
    type_specifier_seq         go to state 299
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 818

  449 exception_specification: THROW '(' type_id_list_opt ')' .

    $default  reduce using rule 449 (exception_specification)


state 819

  355 base_specifier: VIRTUAL access_specifier COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 355 (base_specifier)


state 820

  359 base_specifier: access_specifier VIRTUAL COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 359 (base_specifier)


state 821

  430 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS . identifier
  431               | TEMPLATE '<' template_parameter_list '>' CLASS . identifier '=' template_name

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 835


state 822

   75 new_expression: COLONCOLON NEW new_placement_opt '(' type_id ')' new_initializer_opt .

    $default  reduce using rule 75 (new_expression)


state 823

   53 postfix_expression: CONST_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 53 (postfix_expression)


state 824

   50 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 50 (postfix_expression)


state 825

   81 direct_new_declarator: direct_new_declarator '[' constant_expression ']' .

    $default  reduce using rule 81 (direct_new_declarator)


state 826

   52 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 52 (postfix_expression)


state 827

   51 postfix_expression: STATIC_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 51 (postfix_expression)


state 828

  292 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification .

    $default  reduce using rule 292 (direct_abstract_declarator)


state 829

  443 handler: CATCH '(' exception_declaration ')' compound_statement .

    $default  reduce using rule 443 (handler)


state 830

  160 iteration_statement: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 836


state 831

  161 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 837


state 832

  155 selection_statement: IF '(' condition ')' statement ELSE . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 247
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 475
    CASE              shift, and go to state 476
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 250
    CONTINUE          shift, and go to state 477
    DEFAULT           shift, and go to state 478
    DELETE            shift, and go to state 251
    DO                shift, and go to state 479
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 252
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 253
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 480
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 481
    IF                shift, and go to state 482
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 483
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 255
    RETURN            shift, and go to state 484
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 256
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 257
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 485
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TRY               shift, and go to state 486
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 261
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 487
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268
    '{'               shift, and go to state 321

    $default  reduce using rule 466 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 488
    literal                     go to state 270
    integer_literal             go to state 271
    character_literal           go to state 272
    floating_literal            go to state 273
    string_literal              go to state 274
    boolean_literal             go to state 275
    primary_expression          go to state 276
    id_expression               go to state 277
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 278
    postfix_expression          go to state 279
    unary_expression            go to state 280
    unary_operator              go to state 281
    new_expression              go to state 282
    delete_expression           go to state 283
    cast_expression             go to state 284
    pm_expression               go to state 285
    multiplicative_expression   go to state 286
    additive_expression         go to state 287
    shift_expression            go to state 288
    relational_expression       go to state 289
    equality_expression         go to state 290
    and_expression              go to state 291
    exclusive_or_expression     go to state 292
    inclusive_or_expression     go to state 293
    logical_and_expression      go to state 294
    logical_or_expression       go to state 295
    conditional_expression      go to state 296
    assignment_expression       go to state 408
    expression                  go to state 489
    statement                   go to state 838
    labeled_statement           go to state 491
    expression_statement        go to state 492
    compound_statement          go to state 493
    selection_statement         go to state 495
    iteration_statement         go to state 496
    jump_statement              go to state 497
    declaration_statement       go to state 498
    block_declaration           go to state 499
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 500
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 501
    throw_expression            go to state 302
    expression_opt              go to state 502


state 833

  158 condition: type_specifier_seq declarator '=' assignment_expression .

    $default  reduce using rule 158 (condition)


state 834

  451 type_id_list: type_id_list ',' type_id .

    $default  reduce using rule 451 (type_id_list)


state 835

  430 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier .
  431               | TEMPLATE '<' template_parameter_list '>' CLASS identifier . '=' template_name

    '='  shift, and go to state 839

    $default  reduce using rule 430 (type_parameter)


state 836

  160 iteration_statement: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 160 (iteration_statement)


state 837

  161 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt ')' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 244
    FLOATING          shift, and go to state 245
    CHARACTER         shift, and go to state 246
    STRING            shift, and go to state 108
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 247
    PLUSPLUS          shift, and go to state 248
    MINUSMINUS        shift, and go to state 249
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 475
    CASE              shift, and go to state 476
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 250
    CONTINUE          shift, and go to state 477
    DEFAULT           shift, and go to state 478
    DELETE            shift, and go to state 251
    DO                shift, and go to state 479
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 252
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 253
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 480
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 481
    IF                shift, and go to state 482
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 483
    NEW               shift, and go to state 254
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 255
    RETURN            shift, and go to state 484
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 256
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 257
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 485
    THIS              shift, and go to state 258
    THROW             shift, and go to state 259
    TRUE              shift, and go to state 260
    TRY               shift, and go to state 486
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 261
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 487
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 262
    '~'               shift, and go to state 263
    '*'               shift, and go to state 264
    '&'               shift, and go to state 265
    '+'               shift, and go to state 266
    '-'               shift, and go to state 267
    '!'               shift, and go to state 268
    '{'               shift, and go to state 321

    $default  reduce using rule 466 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 488
    literal                     go to state 270
    integer_literal             go to state 271
    character_literal           go to state 272
    floating_literal            go to state 273
    string_literal              go to state 274
    boolean_literal             go to state 275
    primary_expression          go to state 276
    id_expression               go to state 277
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 278
    postfix_expression          go to state 279
    unary_expression            go to state 280
    unary_operator              go to state 281
    new_expression              go to state 282
    delete_expression           go to state 283
    cast_expression             go to state 284
    pm_expression               go to state 285
    multiplicative_expression   go to state 286
    additive_expression         go to state 287
    shift_expression            go to state 288
    relational_expression       go to state 289
    equality_expression         go to state 290
    and_expression              go to state 291
    exclusive_or_expression     go to state 292
    inclusive_or_expression     go to state 293
    logical_and_expression      go to state 294
    logical_or_expression       go to state 295
    conditional_expression      go to state 296
    assignment_expression       go to state 408
    expression                  go to state 489
    statement                   go to state 840
    labeled_statement           go to state 491
    expression_statement        go to state 492
    compound_statement          go to state 493
    selection_statement         go to state 495
    iteration_statement         go to state 496
    jump_statement              go to state 497
    declaration_statement       go to state 498
    block_declaration           go to state 499
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 500
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 501
    throw_expression            go to state 302
    expression_opt              go to state 502


state 838

  155 selection_statement: IF '(' condition ')' statement ELSE statement .

    $default  reduce using rule 155 (selection_statement)


state 839

  431 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier '=' . template_name

    TEMPLATE_NAME  shift, and go to state 6

    template_name  go to state 841


state 840

  161 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt ')' statement .

    $default  reduce using rule 161 (iteration_statement)


state 841

  431 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier '=' template_name .

    $default  reduce using rule 431 (type_parameter)
