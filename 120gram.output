State 0 conflicts: 1 shift/reduce
State 7 conflicts: 4 shift/reduce
State 32 conflicts: 1 shift/reduce
State 49 conflicts: 1 shift/reduce
State 58 conflicts: 1 shift/reduce
State 82 conflicts: 1 shift/reduce
State 99 conflicts: 4 shift/reduce
State 108 conflicts: 1 shift/reduce
State 109 conflicts: 1 shift/reduce
State 112 conflicts: 2 shift/reduce
State 135 conflicts: 1 shift/reduce
State 136 conflicts: 1 shift/reduce
State 154 conflicts: 4 shift/reduce
State 155 conflicts: 2 shift/reduce
State 173 conflicts: 3 shift/reduce
State 196 conflicts: 1 shift/reduce
State 209 conflicts: 1 shift/reduce
State 213 conflicts: 1 shift/reduce
State 215 conflicts: 1 shift/reduce
State 225 conflicts: 2 shift/reduce
State 228 conflicts: 1 shift/reduce
State 245 conflicts: 2 shift/reduce
State 252 conflicts: 1 shift/reduce
State 261 conflicts: 2 shift/reduce
State 287 conflicts: 1 shift/reduce
State 297 conflicts: 1 shift/reduce
State 323 conflicts: 1 shift/reduce
State 338 conflicts: 1 shift/reduce
State 339 conflicts: 1 shift/reduce
State 340 conflicts: 1 shift/reduce
State 343 conflicts: 1 shift/reduce
State 345 conflicts: 1 shift/reduce
State 378 conflicts: 1 shift/reduce
State 390 conflicts: 1 shift/reduce
State 452 conflicts: 1 shift/reduce
State 453 conflicts: 1 shift/reduce
State 503 conflicts: 1 shift/reduce
State 505 conflicts: 1 shift/reduce
State 524 conflicts: 1 shift/reduce
State 528 conflicts: 2 shift/reduce
State 533 conflicts: 2 shift/reduce
State 535 conflicts: 1 shift/reduce
State 570 conflicts: 2 shift/reduce
State 601 conflicts: 1 shift/reduce
State 602 conflicts: 1 shift/reduce
State 659 conflicts: 2 shift/reduce
State 660 conflicts: 2 shift/reduce
State 664 conflicts: 2 shift/reduce
State 665 conflicts: 2 shift/reduce
State 670 conflicts: 1 shift/reduce
State 693 conflicts: 2 shift/reduce
State 742 conflicts: 2 shift/reduce
State 747 conflicts: 2 shift/reduce
State 776 conflicts: 1 shift/reduce
State 814 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 typedef_name: TYPEDEF_NAME

    2 namespace_name: original_namespace_name

    3 original_namespace_name: NAMESPACE_NAME

    4 class_name: CLASS_NAME
    5           | template_id

    6 enum_name: ENUM_NAME

    7 template_name: TEMPLATE_NAME

    8 identifier: IDENTIFIER

    9 literal: integer_literal
   10        | character_literal
   11        | floating_literal
   12        | string_literal
   13        | boolean_literal

   14 integer_literal: INTEGER

   15 character_literal: CHARACTER

   16 floating_literal: FLOATING

   17 string_literal: STRING

   18 boolean_literal: TRUE
   19                | FALSE

   20 translation_unit: declaration_seq_opt

   21 primary_expression: literal
   22                   | THIS
   23                   | '(' expression ')'
   24                   | id_expression

   25 id_expression: unqualified_id
   26              | qualified_id

   27 unqualified_id: identifier
   28               | operator_function_id
   29               | conversion_function_id
   30               | '~' class_name

   31 qualified_id: nested_name_specifier unqualified_id
   32             | nested_name_specifier TEMPLATE unqualified_id

   33 nested_name_specifier: class_name COLONCOLON nested_name_specifier namespace_name COLONCOLON nested_name_specifier
   34                      | class_name COLONCOLON
   35                      | namespace_name COLONCOLON

   36 postfix_expression: primary_expression
   37                   | postfix_expression '[' expression ']'
   38                   | postfix_expression '(' expression_list_opt ')'
   39                   | postfix_expression '.' TEMPLATE COLONCOLON id_expression
   40                   | postfix_expression '.' TEMPLATE id_expression
   41                   | postfix_expression '.' COLONCOLON id_expression
   42                   | postfix_expression '.' id_expression
   43                   | postfix_expression ARROW TEMPLATE COLONCOLON id_expression
   44                   | postfix_expression ARROW TEMPLATE id_expression
   45                   | postfix_expression ARROW COLONCOLON id_expression
   46                   | postfix_expression ARROW id_expression
   47                   | postfix_expression PLUSPLUS
   48                   | postfix_expression MINUSMINUS
   49                   | DYNAMIC_CAST '<' type_id '>' '(' expression ')'
   50                   | STATIC_CAST '<' type_id '>' '(' expression ')'
   51                   | REINTERPRET_CAST '<' type_id '>' '(' expression ')'
   52                   | CONST_CAST '<' type_id '>' '(' expression ')'
   53                   | TYPEID '(' expression ')'
   54                   | TYPEID '(' type_id ')'

   55 expression_list: assignment_expression
   56                | expression_list ',' assignment_expression

   57 unary_expression: postfix_expression
   58                 | PLUSPLUS cast_expression
   59                 | MINUSMINUS cast_expression
   60                 | '*' cast_expression
   61                 | '&' cast_expression
   62                 | unary_operator cast_expression
   63                 | SIZEOF unary_expression
   64                 | SIZEOF '(' type_id ')'
   65                 | new_expression
   66                 | delete_expression

   67 unary_operator: '+'
   68               | '-'
   69               | '!'
   70               | '~'

   71 new_expression: NEW new_placement_opt new_type_id new_initializer_opt
   72               | COLONCOLON NEW new_placement_opt new_type_id new_initializer_opt
   73               | NEW new_placement_opt '(' type_id ')' new_initializer_opt
   74               | COLONCOLON NEW new_placement_opt '(' type_id ')' new_initializer_opt

   75 new_placement: '(' expression_list ')'

   76 new_type_id: type_specifier_seq new_declarator_opt

   77 new_declarator: ptr_operator new_declarator_opt
   78               | direct_new_declarator

   79 direct_new_declarator: '[' expression ']'
   80                      | direct_new_declarator '[' constant_expression ']'

   81 new_initializer: '(' expression_list_opt ')'

   82 delete_expression: DELETE cast_expression
   83                  | COLONCOLON DELETE cast_expression
   84                  | DELETE '[' ']' cast_expression
   85                  | COLONCOLON DELETE '[' ']' cast_expression

   86 cast_expression: unary_expression
   87                | '(' type_id ')' cast_expression

   88 pm_expression: cast_expression
   89              | pm_expression DOTSTAR cast_expression
   90              | pm_expression ARROWSTAR cast_expression

   91 multiplicative_expression: pm_expression
   92                          | multiplicative_expression '*' pm_expression
   93                          | multiplicative_expression '/' pm_expression
   94                          | multiplicative_expression '%' pm_expression

   95 additive_expression: multiplicative_expression
   96                    | additive_expression '+' multiplicative_expression
   97                    | additive_expression '-' multiplicative_expression

   98 shift_expression: additive_expression
   99                 | shift_expression SL additive_expression
  100                 | shift_expression SR additive_expression

  101 relational_expression: shift_expression
  102                      | relational_expression '<' shift_expression
  103                      | relational_expression '>' shift_expression
  104                      | relational_expression LTEQ shift_expression
  105                      | relational_expression GTEQ shift_expression

  106 equality_expression: relational_expression
  107                    | equality_expression EQ relational_expression
  108                    | equality_expression NOTEQ relational_expression

  109 and_expression: equality_expression
  110               | and_expression '&' equality_expression

  111 exclusive_or_expression: and_expression
  112                        | exclusive_or_expression '^' and_expression

  113 inclusive_or_expression: exclusive_or_expression
  114                        | inclusive_or_expression '|' exclusive_or_expression

  115 logical_and_expression: inclusive_or_expression
  116                       | logical_and_expression ANDAND inclusive_or_expression

  117 logical_or_expression: logical_and_expression
  118                      | logical_or_expression OROR logical_and_expression

  119 conditional_expression: logical_or_expression
  120                       | logical_or_expression '?' expression ':' assignment_expression

  121 assignment_expression: conditional_expression
  122                      | logical_or_expression assignment_operator assignment_expression
  123                      | throw_expression

  124 assignment_operator: '='
  125                    | MULEQ
  126                    | DIVEQ
  127                    | MODEQ
  128                    | ADDEQ
  129                    | SUBEQ
  130                    | SREQ
  131                    | SLEQ
  132                    | ANDEQ
  133                    | XOREQ
  134                    | OREQ

  135 expression: assignment_expression
  136           | expression ',' assignment_expression

  137 constant_expression: conditional_expression

  138 statement: labeled_statement
  139          | expression_statement
  140          | compound_statement
  141          | selection_statement
  142          | iteration_statement
  143          | jump_statement
  144          | declaration_statement
  145          | try_block

  146 labeled_statement: identifier ':' statement
  147                  | CASE constant_expression ':' statement
  148                  | DEFAULT ':' statement

  149 expression_statement: expression_opt ';'

  150 compound_statement: '{' statement_seq_opt '}'

  151 statement_seq: statement
  152              | statement_seq statement

  153 selection_statement: IF '(' condition ')' statement
  154                    | IF '(' condition ')' statement ELSE statement
  155                    | SWITCH '(' condition ')' statement

  156 condition: expression
  157          | type_specifier_seq declarator '=' assignment_expression

  158 iteration_statement: WHILE '(' condition ')' statement
  159                    | DO statement WHILE '(' expression ')' ';'
  160                    | FOR '(' for_init_statement condition_opt ';' expression_opt ')' statement

  161 for_init_statement: expression_statement
  162                   | simple_declaration

  163 jump_statement: BREAK ';'
  164               | CONTINUE ';'
  165               | RETURN expression_opt ';'
  166               | GOTO identifier ';'

  167 declaration_statement: block_declaration

  168 declaration_seq: declaration
  169                | declaration_seq declaration

  170 declaration: block_declaration
  171            | function_definition
  172            | template_declaration
  173            | explicit_instantiation
  174            | explicit_specialization
  175            | linkage_specification
  176            | namespace_definition

  177 block_declaration: simple_declaration
  178                  | asm_definition
  179                  | namespace_alias_definition
  180                  | using_declaration
  181                  | using_directive

  182 simple_declaration: decl_specifier_seq init_declarator_list ';'
  183                   | decl_specifier_seq ';'

  184 decl_specifier: storage_class_specifier
  185               | type_specifier
  186               | function_specifier
  187               | FRIEND
  188               | TYPEDEF

  189 decl_specifier_seq: decl_specifier
  190                   | decl_specifier_seq decl_specifier

  191 storage_class_specifier: AUTO
  192                        | REGISTER
  193                        | STATIC
  194                        | EXTERN
  195                        | MUTABLE

  196 function_specifier: INLINE
  197                   | VIRTUAL
  198                   | EXPLICIT

  199 type_specifier: simple_type_specifier
  200               | class_specifier
  201               | enum_specifier
  202               | elaborated_type_specifier
  203               | cv_qualifier

  204 simple_type_specifier: type_name
  205                      | nested_name_specifier type_name
  206                      | COLONCOLON nested_name_specifier_opt type_name
  207                      | CHAR
  208                      | WCHAR_T
  209                      | BOOL
  210                      | SHORT
  211                      | INT
  212                      | LONG
  213                      | SIGNED
  214                      | UNSIGNED
  215                      | FLOAT
  216                      | DOUBLE
  217                      | VOID

  218 type_name: class_name
  219          | enum_name
  220          | typedef_name

  221 elaborated_type_specifier: class_key COLONCOLON nested_name_specifier identifier
  222                          | class_key COLONCOLON identifier
  223                          | ENUM COLONCOLON nested_name_specifier identifier
  224                          | ENUM COLONCOLON identifier
  225                          | ENUM nested_name_specifier identifier
  226                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier
  227                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'

  228 enum_specifier: ENUM identifier '{' enumerator_list_opt '}'

  229 enumerator_list: enumerator_definition
  230                | enumerator_list ',' enumerator_definition

  231 enumerator_definition: enumerator
  232                      | enumerator '=' constant_expression

  233 enumerator: identifier

  234 namespace_definition: named_namespace_definition
  235                     | unnamed_namespace_definition

  236 named_namespace_definition: original_namespace_definition
  237                           | extension_namespace_definition

  238 original_namespace_definition: NAMESPACE identifier '{' namespace_body '}'

  239 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body '}'

  240 unnamed_namespace_definition: NAMESPACE '{' namespace_body '}'

  241 namespace_body: declaration_seq_opt

  242 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier ';'

  243 qualified_namespace_specifier: COLONCOLON nested_name_specifier namespace_name
  244                              | COLONCOLON namespace_name
  245                              | nested_name_specifier namespace_name
  246                              | namespace_name

  247 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier unqualified_id ';'
  248                  | USING TYPENAME nested_name_specifier unqualified_id ';'
  249                  | USING COLONCOLON nested_name_specifier unqualified_id ';'
  250                  | USING nested_name_specifier unqualified_id ';'
  251                  | USING COLONCOLON unqualified_id ';'

  252 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier namespace_name ';'
  253                | USING NAMESPACE COLONCOLON namespace_name ';'
  254                | USING NAMESPACE nested_name_specifier namespace_name ';'
  255                | USING NAMESPACE namespace_name ';'

  256 asm_definition: ASM '(' string_literal ')' ';'

  257 linkage_specification: EXTERN string_literal '{' declaration_seq_opt '}'
  258                      | EXTERN string_literal declaration

  259 init_declarator_list: init_declarator
  260                     | init_declarator_list ',' init_declarator

  261 init_declarator: declarator initializer_opt

  262 declarator: direct_declarator
  263           | ptr_operator declarator

  264 direct_declarator: declarator_id
  265                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  266                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq
  267                  | direct_declarator '(' parameter_declaration_clause ')' exception_specification
  268                  | direct_declarator '(' parameter_declaration_clause ')'
  269                  | direct_declarator '[' constant_expression_opt ']'
  270                  | '(' declarator ')'

  271 ptr_operator: '*'
  272             | '*' cv_qualifier_seq
  273             | '&'
  274             | nested_name_specifier '*'
  275             | nested_name_specifier '*' cv_qualifier_seq
  276             | COLONCOLON nested_name_specifier '*'
  277             | COLONCOLON nested_name_specifier '*' cv_qualifier_seq

  278 cv_qualifier_seq: cv_qualifier
  279                 | cv_qualifier cv_qualifier_seq

  280 cv_qualifier: CONST
  281             | VOLATILE

  282 declarator_id: id_expression
  283              | COLONCOLON id_expression
  284              | COLONCOLON nested_name_specifier type_name
  285              | COLONCOLON type_name

  286 type_id: type_specifier_seq abstract_declarator_opt

  287 type_specifier_seq: type_specifier type_specifier_seq_opt

  288 abstract_declarator: ptr_operator abstract_declarator_opt
  289                    | direct_abstract_declarator

  290 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  291                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq
  292                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' exception_specification
  293                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')'
  294                           | direct_abstract_declarator_opt '[' constant_expression_opt ']'
  295                           | '(' abstract_declarator ')'

  296 parameter_declaration_clause: parameter_declaration_list ELLIPSIS
  297                             | parameter_declaration_list
  298                             | ELLIPSIS
  299                             | /* empty */
  300                             | parameter_declaration_list ',' ELLIPSIS

  301 parameter_declaration_list: parameter_declaration
  302                           | parameter_declaration_list ',' parameter_declaration

  303 parameter_declaration: decl_specifier_seq declarator
  304                      | decl_specifier_seq declarator '=' assignment_expression
  305                      | decl_specifier_seq abstract_declarator_opt
  306                      | decl_specifier_seq abstract_declarator_opt '=' assignment_expression

  307 function_definition: declarator ctor_initializer_opt function_body
  308                    | decl_specifier_seq declarator ctor_initializer_opt function_body
  309                    | declarator function_try_block
  310                    | decl_specifier_seq declarator function_try_block

  311 function_body: compound_statement

  312 initializer: '=' initializer_clause
  313            | '(' expression_list ')'

  314 initializer_clause: assignment_expression
  315                   | '{' initializer_list COMMA_opt '}'
  316                   | '{' '}'

  317 initializer_list: initializer_clause
  318                 | initializer_list ',' initializer_clause

  319 class_specifier: class_head '{' member_specification_opt '}'

  320 class_head: class_key identifier
  321           | class_key identifier base_clause
  322           | class_key nested_name_specifier identifier
  323           | class_key nested_name_specifier identifier base_clause

  324 class_key: CLASS
  325          | STRUCT
  326          | UNION

  327 member_specification: member_declaration member_specification_opt
  328                     | access_specifier ':' member_specification_opt

  329 member_declaration: decl_specifier_seq member_declarator_list ';'
  330                   | decl_specifier_seq ';'
  331                   | member_declarator_list ';'
  332                   | ';'
  333                   | function_definition SEMICOLON_opt
  334                   | qualified_id ';'
  335                   | using_declaration
  336                   | template_declaration

  337 member_declarator_list: member_declarator
  338                       | member_declarator_list ',' member_declarator

  339 member_declarator: /* empty */
  340                  | declarator
  341                  | declarator pure_specifier
  342                  | declarator constant_initializer
  343                  | identifier ':' constant_expression

  344 pure_specifier: '=' '0'

  345 constant_initializer: '=' constant_expression

  346 base_clause: ':' base_specifier_list

  347 base_specifier_list: base_specifier
  348                    | base_specifier_list ',' base_specifier

  349 base_specifier: COLONCOLON nested_name_specifier class_name
  350               | COLONCOLON class_name
  351               | nested_name_specifier class_name
  352               | class_name
  353               | VIRTUAL access_specifier COLONCOLON nested_name_specifier_opt class_name
  354               | VIRTUAL access_specifier nested_name_specifier_opt class_name
  355               | VIRTUAL COLONCOLON nested_name_specifier_opt class_name
  356               | VIRTUAL nested_name_specifier_opt class_name
  357               | access_specifier VIRTUAL COLONCOLON nested_name_specifier_opt class_name
  358               | access_specifier VIRTUAL nested_name_specifier_opt class_name
  359               | access_specifier COLONCOLON nested_name_specifier_opt class_name
  360               | access_specifier nested_name_specifier_opt class_name

  361 access_specifier: PRIVATE
  362                 | PROTECTED
  363                 | PUBLIC

  364 conversion_function_id: OPERATOR conversion_type_id

  365 conversion_type_id: type_specifier_seq conversion_declarator_opt

  366 conversion_declarator: ptr_operator conversion_declarator_opt

  367 ctor_initializer: ':' mem_initializer_list

  368 mem_initializer_list: mem_initializer
  369                     | mem_initializer ',' mem_initializer_list

  370 mem_initializer: mem_initializer_id '(' expression_list_opt ')'

  371 mem_initializer_id: COLONCOLON nested_name_specifier class_name
  372                   | COLONCOLON class_name
  373                   | nested_name_specifier class_name
  374                   | class_name
  375                   | identifier

  376 operator_function_id: OPERATOR operator

  377 operator: NEW
  378         | DELETE
  379         | NEW '[' ']'
  380         | DELETE '[' ']'
  381         | '+'
  382         | '_'
  383         | '*'
  384         | '/'
  385         | '%'
  386         | '^'
  387         | '&'
  388         | '|'
  389         | '~'
  390         | '!'
  391         | '='
  392         | '<'
  393         | '>'
  394         | ADDEQ
  395         | SUBEQ
  396         | MULEQ
  397         | DIVEQ
  398         | MODEQ
  399         | XOREQ
  400         | ANDEQ
  401         | OREQ
  402         | SL
  403         | SR
  404         | SREQ
  405         | SLEQ
  406         | EQ
  407         | NOTEQ
  408         | LTEQ
  409         | GTEQ
  410         | ANDAND
  411         | OROR
  412         | PLUSPLUS
  413         | MINUSMINUS
  414         | ','
  415         | ARROWSTAR
  416         | ARROW
  417         | '(' ')'
  418         | '[' ']'

  419 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' declaration

  420 template_parameter_list: template_parameter
  421                        | template_parameter_list ',' template_parameter

  422 template_parameter: type_parameter
  423                   | parameter_declaration

  424 type_parameter: CLASS identifier
  425               | CLASS identifier '=' type_id
  426               | TYPENAME identifier
  427               | TYPENAME identifier '=' type_id
  428               | TEMPLATE '<' template_parameter_list '>' CLASS identifier
  429               | TEMPLATE '<' template_parameter_list '>' CLASS identifier '=' template_name

  430 template_id: template_name '<' template_argument_list '>'

  431 template_argument_list: template_argument
  432                       | template_argument_list ',' template_argument

  433 template_argument: assignment_expression
  434                  | type_id
  435                  | template_name

  436 explicit_instantiation: TEMPLATE declaration

  437 explicit_specialization: TEMPLATE '<' '>' declaration

  438 try_block: TRY compound_statement handler_seq

  439 function_try_block: TRY ctor_initializer_opt function_body handler_seq

  440 handler_seq: handler handler_seq_opt

  441 handler: CATCH '(' exception_declaration ')' compound_statement

  442 exception_declaration: type_specifier_seq declarator
  443                      | type_specifier_seq abstract_declarator
  444                      | type_specifier_seq
  445                      | ELLIPSIS

  446 throw_expression: THROW assignment_expression_opt

  447 exception_specification: THROW '(' type_id_list_opt ')'

  448 type_id_list: type_id
  449             | type_id_list ',' type_id

  450 declaration_seq_opt: /* empty */
  451                    | declaration_seq

  452 nested_name_specifier_opt: /* empty */
  453                          | nested_name_specifier

  454 expression_list_opt: /* empty */
  455                    | expression_list

  456 COLONCOLON_opt: /* empty */
  457               | COLONCOLON

  458 new_placement_opt: /* empty */
  459                  | new_placement

  460 new_initializer_opt: /* empty */
  461                    | new_initializer

  462 new_declarator_opt: /* empty */
  463                   | new_declarator

  464 expression_opt: /* empty */
  465               | expression

  466 statement_seq_opt: /* empty */
  467                  | statement_seq

  468 condition_opt: /* empty */
  469              | condition

  470 enumerator_list_opt: /* empty */
  471                    | enumerator_list

  472 initializer_opt: /* empty */
  473                | initializer

  474 constant_expression_opt: /* empty */
  475                        | constant_expression

  476 abstract_declarator_opt: /* empty */
  477                        | abstract_declarator

  478 type_specifier_seq_opt: /* empty */
  479                       | type_specifier_seq

  480 direct_abstract_declarator_opt: /* empty */
  481                               | direct_abstract_declarator

  482 ctor_initializer_opt: /* empty */
  483                     | ctor_initializer

  484 COMMA_opt: /* empty */
  485          | ','

  486 member_specification_opt: /* empty */
  487                         | member_specification

  488 SEMICOLON_opt: /* empty */
  489              | ';'

  490 conversion_declarator_opt: /* empty */
  491                          | conversion_declarator

  492 EXPORT_opt: /* empty */
  493           | EXPORT

  494 handler_seq_opt: /* empty */
  495                | handler_seq

  496 assignment_expression_opt: /* empty */
  497                          | assignment_expression

  498 type_id_list_opt: /* empty */
  499                 | type_id_list


Terminals, with rules where they appear

$end (0) 0
'!' (33) 69 390
'%' (37) 94 385
'&' (38) 61 110 273 387
'(' (40) 23 38 49 50 51 52 53 54 64 73 74 75 81 87 153 154 155 158
    159 160 256 265 266 267 268 270 290 291 292 293 295 313 370 417
    441 447
')' (41) 23 38 49 50 51 52 53 54 64 73 74 75 81 87 153 154 155 158
    159 160 256 265 266 267 268 270 290 291 292 293 295 313 370 417
    441 447
'*' (42) 60 92 271 272 274 275 276 277 383
'+' (43) 67 96 381
',' (44) 56 136 230 260 300 302 318 338 348 369 414 421 432 449 485
'-' (45) 68 97
'.' (46) 39 40 41 42
'/' (47) 93 384
'0' (48) 344
':' (58) 120 146 147 148 328 343 346 367
';' (59) 149 159 160 163 164 165 166 182 183 242 247 248 249 250 251
    252 253 254 255 256 329 330 331 332 334 489
'<' (60) 49 50 51 52 102 227 392 419 428 429 430 437
'=' (61) 124 157 232 242 304 306 312 344 345 391 425 427 429
'>' (62) 49 50 51 52 103 227 393 419 428 429 430 437
'?' (63) 120
'[' (91) 37 79 80 84 85 269 294 379 380 418
']' (93) 37 79 80 84 85 269 294 379 380 418
'^' (94) 112 386
'_' (95) 382
'{' (123) 150 228 238 239 240 257 315 316 319
'|' (124) 114 388
'}' (125) 150 228 238 239 240 257 315 316 319
'~' (126) 30 70 389
error (256)
IDENTIFIER (258) 8
INTEGER (259) 14
FLOATING (260) 16
CHARACTER (261) 15
STRING (262) 17
TYPEDEF_NAME (263) 1
NAMESPACE_NAME (264) 3
CLASS_NAME (265) 4
ENUM_NAME (266) 6
TEMPLATE_NAME (267) 7
ELLIPSIS (268) 296 298 300 445
COLONCOLON (269) 33 34 35 39 41 43 45 72 74 83 85 206 221 222 223 224
    243 244 247 249 251 252 253 276 277 283 284 285 349 350 353 355
    357 359 371 372 457
DOTSTAR (270) 89
ADDEQ (271) 128 394
SUBEQ (272) 129 395
MULEQ (273) 125 396
DIVEQ (274) 126 397
MODEQ (275) 127 398
XOREQ (276) 133 399
ANDEQ (277) 132 400
OREQ (278) 134 401
SL (279) 99 402
SR (280) 100 403
SREQ (281) 130 404
SLEQ (282) 131 405
EQ (283) 107 406
NOTEQ (284) 108 407
LTEQ (285) 104 408
GTEQ (286) 105 409
ANDAND (287) 116 410
OROR (288) 118 411
PLUSPLUS (289) 47 58 412
MINUSMINUS (290) 48 59 413
ARROWSTAR (291) 90 415
ARROW (292) 43 44 45 46 416
ASM (293) 256
AUTO (294) 191
BOOL (295) 209
BREAK (296) 163
CASE (297) 147
CATCH (298) 441
CHAR (299) 207
CLASS (300) 324 424 425 428 429
CONST (301) 280
CONST_CAST (302) 52
CONTINUE (303) 164
DEFAULT (304) 148
DELETE (305) 82 83 84 85 378 380
DO (306) 159
DOUBLE (307) 216
DYNAMIC_CAST (308) 49
ELSE (309) 154
ENUM (310) 223 224 225 228
EXPLICIT (311) 198
EXPORT (312) 493
EXTERN (313) 194 257 258
FALSE (314) 19
FLOAT (315) 215
FOR (316) 160
FRIEND (317) 187
GOTO (318) 166
IF (319) 153 154
INLINE (320) 196
INT (321) 211
LONG (322) 212
MUTABLE (323) 195
NAMESPACE (324) 238 239 240 242 252 253 254 255
NEW (325) 71 72 73 74 377 379
OPERATOR (326) 364 376
PRIVATE (327) 361
PROTECTED (328) 362
PUBLIC (329) 363
REGISTER (330) 192
REINTERPRET_CAST (331) 51
RETURN (332) 165
SHORT (333) 210
SIGNED (334) 213
SIZEOF (335) 63 64
STATIC (336) 193
STATIC_CAST (337) 50
STRUCT (338) 325
SWITCH (339) 155
TEMPLATE (340) 32 39 40 43 44 419 428 429 436 437
THIS (341) 22
THROW (342) 446 447
TRUE (343) 18
TRY (344) 438 439
TYPEDEF (345) 188
TYPEID (346) 53 54
TYPENAME (347) 226 227 247 248 426 427
UNION (348) 326
UNSIGNED (349) 214
USING (350) 247 248 249 250 251 252 253 254 255
VIRTUAL (351) 197 353 354 355 356 357 358
VOID (352) 217
VOLATILE (353) 281
WCHAR_T (354) 208
WHILE (355) 158 159


Nonterminals, with rules where they appear

$accept (127)
    on left: 0
typedef_name (128)
    on left: 1, on right: 220
namespace_name (129)
    on left: 2, on right: 33 35 243 244 245 246 252 253 254 255
original_namespace_name (130)
    on left: 3, on right: 2 239
class_name (131)
    on left: 4 5, on right: 30 33 34 218 349 350 351 352 353 354 355
    356 357 358 359 360 371 372 373 374
enum_name (132)
    on left: 6, on right: 219
template_name (133)
    on left: 7, on right: 429 430 435
identifier (134)
    on left: 8, on right: 27 146 166 221 222 223 224 225 226 227 228
    233 238 242 320 321 322 323 343 375 424 425 426 427 428 429
literal (135)
    on left: 9 10 11 12 13, on right: 21
integer_literal (136)
    on left: 14, on right: 9
character_literal (137)
    on left: 15, on right: 10
floating_literal (138)
    on left: 16, on right: 11
string_literal (139)
    on left: 17, on right: 12 256 257 258
boolean_literal (140)
    on left: 18 19, on right: 13
translation_unit (141)
    on left: 20, on right: 0
primary_expression (142)
    on left: 21 22 23 24, on right: 36
id_expression (143)
    on left: 25 26, on right: 24 39 40 41 42 43 44 45 46 282 283
unqualified_id (144)
    on left: 27 28 29 30, on right: 25 31 32 247 248 249 250 251
qualified_id (145)
    on left: 31 32, on right: 26 334
nested_name_specifier (146)
    on left: 33 34 35, on right: 31 32 33 205 221 223 225 226 227 243
    245 247 248 249 250 252 254 274 275 276 277 284 322 323 349 351
    371 373 453
postfix_expression (147)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
    54, on right: 37 38 39 40 41 42 43 44 45 46 47 48 57
expression_list (148)
    on left: 55 56, on right: 56 75 313 455
unary_expression (149)
    on left: 57 58 59 60 61 62 63 64 65 66, on right: 63 86
unary_operator (150)
    on left: 67 68 69 70, on right: 62
new_expression (151)
    on left: 71 72 73 74, on right: 65
new_placement (152)
    on left: 75, on right: 459
new_type_id (153)
    on left: 76, on right: 71 72
new_declarator (154)
    on left: 77 78, on right: 463
direct_new_declarator (155)
    on left: 79 80, on right: 78 80
new_initializer (156)
    on left: 81, on right: 461
delete_expression (157)
    on left: 82 83 84 85, on right: 66
cast_expression (158)
    on left: 86 87, on right: 58 59 60 61 62 82 83 84 85 87 88 89 90
pm_expression (159)
    on left: 88 89 90, on right: 89 90 91 92 93 94
multiplicative_expression (160)
    on left: 91 92 93 94, on right: 92 93 94 95 96 97
additive_expression (161)
    on left: 95 96 97, on right: 96 97 98 99 100
shift_expression (162)
    on left: 98 99 100, on right: 99 100 101 102 103 104 105
relational_expression (163)
    on left: 101 102 103 104 105, on right: 102 103 104 105 106 107
    108
equality_expression (164)
    on left: 106 107 108, on right: 107 108 109 110
and_expression (165)
    on left: 109 110, on right: 110 111 112
exclusive_or_expression (166)
    on left: 111 112, on right: 112 113 114
inclusive_or_expression (167)
    on left: 113 114, on right: 114 115 116
logical_and_expression (168)
    on left: 115 116, on right: 116 117 118
logical_or_expression (169)
    on left: 117 118, on right: 118 119 120 122
conditional_expression (170)
    on left: 119 120, on right: 121 137
assignment_expression (171)
    on left: 121 122 123, on right: 55 56 120 122 135 136 157 304 306
    314 433 497
assignment_operator (172)
    on left: 124 125 126 127 128 129 130 131 132 133 134, on right:
    122
expression (173)
    on left: 135 136, on right: 23 37 49 50 51 52 53 79 120 136 156
    159 465
constant_expression (174)
    on left: 137, on right: 80 147 232 343 345 475
statement (175)
    on left: 138 139 140 141 142 143 144 145, on right: 146 147 148
    151 152 153 154 155 158 159 160
labeled_statement (176)
    on left: 146 147 148, on right: 138
expression_statement (177)
    on left: 149, on right: 139 161
compound_statement (178)
    on left: 150, on right: 140 311 438 441
statement_seq (179)
    on left: 151 152, on right: 152 467
selection_statement (180)
    on left: 153 154 155, on right: 141
condition (181)
    on left: 156 157, on right: 153 154 155 158 469
iteration_statement (182)
    on left: 158 159 160, on right: 142
for_init_statement (183)
    on left: 161 162, on right: 160
jump_statement (184)
    on left: 163 164 165 166, on right: 143
declaration_statement (185)
    on left: 167, on right: 144
declaration_seq (186)
    on left: 168 169, on right: 169 451
declaration (187)
    on left: 170 171 172 173 174 175 176, on right: 168 169 258 419
    436 437
block_declaration (188)
    on left: 177 178 179 180 181, on right: 167 170
simple_declaration (189)
    on left: 182 183, on right: 162 177
decl_specifier (190)
    on left: 184 185 186 187 188, on right: 189 190
decl_specifier_seq (191)
    on left: 189 190, on right: 182 183 190 303 304 305 306 308 310
    329 330
storage_class_specifier (192)
    on left: 191 192 193 194 195, on right: 184
function_specifier (193)
    on left: 196 197 198, on right: 186
type_specifier (194)
    on left: 199 200 201 202 203, on right: 185 287
simple_type_specifier (195)
    on left: 204 205 206 207 208 209 210 211 212 213 214 215 216 217,
    on right: 199
type_name (196)
    on left: 218 219 220, on right: 204 205 206 284 285
elaborated_type_specifier (197)
    on left: 221 222 223 224 225 226 227, on right: 202
enum_specifier (198)
    on left: 228, on right: 201
enumerator_list (199)
    on left: 229 230, on right: 230 471
enumerator_definition (200)
    on left: 231 232, on right: 229 230
enumerator (201)
    on left: 233, on right: 231 232
namespace_definition (202)
    on left: 234 235, on right: 176
named_namespace_definition (203)
    on left: 236 237, on right: 234
original_namespace_definition (204)
    on left: 238, on right: 236
extension_namespace_definition (205)
    on left: 239, on right: 237
unnamed_namespace_definition (206)
    on left: 240, on right: 235
namespace_body (207)
    on left: 241, on right: 238 239 240
namespace_alias_definition (208)
    on left: 242, on right: 179
qualified_namespace_specifier (209)
    on left: 243 244 245 246, on right: 242
using_declaration (210)
    on left: 247 248 249 250 251, on right: 180 335
using_directive (211)
    on left: 252 253 254 255, on right: 181
asm_definition (212)
    on left: 256, on right: 178
linkage_specification (213)
    on left: 257 258, on right: 175
init_declarator_list (214)
    on left: 259 260, on right: 182 260
init_declarator (215)
    on left: 261, on right: 259 260
declarator (216)
    on left: 262 263, on right: 157 261 263 270 303 304 307 308 309
    310 340 341 342 442
direct_declarator (217)
    on left: 264 265 266 267 268 269 270, on right: 262 265 266 267
    268 269
ptr_operator (218)
    on left: 271 272 273 274 275 276 277, on right: 77 263 288 366
cv_qualifier_seq (219)
    on left: 278 279, on right: 265 266 272 275 277 279 290 291
cv_qualifier (220)
    on left: 280 281, on right: 203 278 279
declarator_id (221)
    on left: 282 283 284 285, on right: 264
type_id (222)
    on left: 286, on right: 49 50 51 52 54 64 73 74 87 425 427 434
    448 449
type_specifier_seq (223)
    on left: 287, on right: 76 157 286 365 442 443 444 479
abstract_declarator (224)
    on left: 288 289, on right: 295 443 477
direct_abstract_declarator (225)
    on left: 290 291 292 293 294 295, on right: 289 481
parameter_declaration_clause (226)
    on left: 296 297 298 299 300, on right: 265 266 267 268 290 291
    292 293
parameter_declaration_list (227)
    on left: 301 302, on right: 296 297 300 302
parameter_declaration (228)
    on left: 303 304 305 306, on right: 301 302 423
function_definition (229)
    on left: 307 308 309 310, on right: 171 333
function_body (230)
    on left: 311, on right: 307 308 439
initializer (231)
    on left: 312 313, on right: 473
initializer_clause (232)
    on left: 314 315 316, on right: 312 317 318
initializer_list (233)
    on left: 317 318, on right: 315 318
class_specifier (234)
    on left: 319, on right: 200
class_head (235)
    on left: 320 321 322 323, on right: 319
class_key (236)
    on left: 324 325 326, on right: 221 222 320 321 322 323
member_specification (237)
    on left: 327 328, on right: 487
member_declaration (238)
    on left: 329 330 331 332 333 334 335 336, on right: 327
member_declarator_list (239)
    on left: 337 338, on right: 329 331 338
member_declarator (240)
    on left: 339 340 341 342 343, on right: 337 338
pure_specifier (241)
    on left: 344, on right: 341
constant_initializer (242)
    on left: 345, on right: 342
base_clause (243)
    on left: 346, on right: 321 323
base_specifier_list (244)
    on left: 347 348, on right: 346 348
base_specifier (245)
    on left: 349 350 351 352 353 354 355 356 357 358 359 360, on right:
    347 348
access_specifier (246)
    on left: 361 362 363, on right: 328 353 354 357 358 359 360
conversion_function_id (247)
    on left: 364, on right: 29
conversion_type_id (248)
    on left: 365, on right: 364
conversion_declarator (249)
    on left: 366, on right: 491
ctor_initializer (250)
    on left: 367, on right: 483
mem_initializer_list (251)
    on left: 368 369, on right: 367 369
mem_initializer (252)
    on left: 370, on right: 368 369
mem_initializer_id (253)
    on left: 371 372 373 374 375, on right: 370
operator_function_id (254)
    on left: 376, on right: 28
operator (255)
    on left: 377 378 379 380 381 382 383 384 385 386 387 388 389 390
    391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406
    407 408 409 410 411 412 413 414 415 416 417 418, on right: 376
template_declaration (256)
    on left: 419, on right: 172 336
template_parameter_list (257)
    on left: 420 421, on right: 419 421 428 429
template_parameter (258)
    on left: 422 423, on right: 420 421
type_parameter (259)
    on left: 424 425 426 427 428 429, on right: 422
template_id (260)
    on left: 430, on right: 5
template_argument_list (261)
    on left: 431 432, on right: 227 430 432
template_argument (262)
    on left: 433 434 435, on right: 431 432
explicit_instantiation (263)
    on left: 436, on right: 173
explicit_specialization (264)
    on left: 437, on right: 174
try_block (265)
    on left: 438, on right: 145
function_try_block (266)
    on left: 439, on right: 309 310
handler_seq (267)
    on left: 440, on right: 438 439 495
handler (268)
    on left: 441, on right: 440
exception_declaration (269)
    on left: 442 443 444 445, on right: 441
throw_expression (270)
    on left: 446, on right: 123
exception_specification (271)
    on left: 447, on right: 265 267 290 292
type_id_list (272)
    on left: 448 449, on right: 449 499
declaration_seq_opt (273)
    on left: 450 451, on right: 20 241 257
nested_name_specifier_opt (274)
    on left: 452 453, on right: 206 353 354 355 356 357 358 359 360
expression_list_opt (275)
    on left: 454 455, on right: 38 81 370
COLONCOLON_opt (276)
    on left: 456 457, on right: 226 227
new_placement_opt (277)
    on left: 458 459, on right: 71 72 73 74
new_initializer_opt (278)
    on left: 460 461, on right: 71 72 73 74
new_declarator_opt (279)
    on left: 462 463, on right: 76 77
expression_opt (280)
    on left: 464 465, on right: 149 160 165
statement_seq_opt (281)
    on left: 466 467, on right: 150
condition_opt (282)
    on left: 468 469, on right: 160
enumerator_list_opt (283)
    on left: 470 471, on right: 228
initializer_opt (284)
    on left: 472 473, on right: 261
constant_expression_opt (285)
    on left: 474 475, on right: 269 294
abstract_declarator_opt (286)
    on left: 476 477, on right: 286 288 305 306
type_specifier_seq_opt (287)
    on left: 478 479, on right: 287
direct_abstract_declarator_opt (288)
    on left: 480 481, on right: 290 291 292 293 294
ctor_initializer_opt (289)
    on left: 482 483, on right: 307 308 439
COMMA_opt (290)
    on left: 484 485, on right: 315
member_specification_opt (291)
    on left: 486 487, on right: 319 327 328
SEMICOLON_opt (292)
    on left: 488 489, on right: 333
conversion_declarator_opt (293)
    on left: 490 491, on right: 365 366
EXPORT_opt (294)
    on left: 492 493, on right: 419
handler_seq_opt (295)
    on left: 494 495, on right: 440
assignment_expression_opt (296)
    on left: 496 497, on right: 446
type_id_list_opt (297)
    on left: 498 499, on right: 447


state 0

    0 $accept: . translation_unit $end

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 492 (EXPORT_opt)]
    $default  reduce using rule 450 (declaration_seq_opt)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    translation_unit                go to state 53
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration_seq                 go to state 58
    declaration                     go to state 59
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    declaration_seq_opt             go to state 96
    EXPORT_opt                      go to state 97


state 1

    8 identifier: IDENTIFIER .

    $default  reduce using rule 8 (identifier)


state 2

    1 typedef_name: TYPEDEF_NAME .

    $default  reduce using rule 1 (typedef_name)


state 3

    3 original_namespace_name: NAMESPACE_NAME .

    $default  reduce using rule 3 (original_namespace_name)


state 4

    4 class_name: CLASS_NAME .

    $default  reduce using rule 4 (class_name)


state 5

    6 enum_name: ENUM_NAME .

    $default  reduce using rule 6 (enum_name)


state 6

    7 template_name: TEMPLATE_NAME .

    $default  reduce using rule 7 (template_name)


state 7

  206 simple_type_specifier: COLONCOLON . nested_name_specifier_opt type_name
  276 ptr_operator: COLONCOLON . nested_name_specifier '*'
  277             | COLONCOLON . nested_name_specifier '*' cv_qualifier_seq
  283 declarator_id: COLONCOLON . id_expression
  284              | COLONCOLON . nested_name_specifier type_name
  285              | COLONCOLON . type_name

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    TYPEDEF_NAME   [reduce using rule 452 (nested_name_specifier_opt)]
    CLASS_NAME     [reduce using rule 452 (nested_name_specifier_opt)]
    ENUM_NAME      [reduce using rule 452 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 452 (nested_name_specifier_opt)]

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    id_expression              go to state 98
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 99
    type_name                  go to state 100
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    nested_name_specifier_opt  go to state 101


state 8

  256 asm_definition: ASM . '(' string_literal ')' ';'

    '('  shift, and go to state 102


state 9

  191 storage_class_specifier: AUTO .

    $default  reduce using rule 191 (storage_class_specifier)


state 10

  209 simple_type_specifier: BOOL .

    $default  reduce using rule 209 (simple_type_specifier)


state 11

  207 simple_type_specifier: CHAR .

    $default  reduce using rule 207 (simple_type_specifier)


state 12

  324 class_key: CLASS .

    $default  reduce using rule 324 (class_key)


state 13

  280 cv_qualifier: CONST .

    $default  reduce using rule 280 (cv_qualifier)


state 14

  216 simple_type_specifier: DOUBLE .

    $default  reduce using rule 216 (simple_type_specifier)


state 15

  223 elaborated_type_specifier: ENUM . COLONCOLON nested_name_specifier identifier
  224                          | ENUM . COLONCOLON identifier
  225                          | ENUM . nested_name_specifier identifier
  228 enum_specifier: ENUM . identifier '{' enumerator_list_opt '}'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 103

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 105
    nested_name_specifier    go to state 106
    template_id              go to state 93


state 16

  198 function_specifier: EXPLICIT .

    $default  reduce using rule 198 (function_specifier)


state 17

  493 EXPORT_opt: EXPORT .

    $default  reduce using rule 493 (EXPORT_opt)


state 18

  194 storage_class_specifier: EXTERN .
  257 linkage_specification: EXTERN . string_literal '{' declaration_seq_opt '}'
  258                      | EXTERN . string_literal declaration

    STRING  shift, and go to state 107

    $default  reduce using rule 194 (storage_class_specifier)

    string_literal  go to state 108


state 19

  215 simple_type_specifier: FLOAT .

    $default  reduce using rule 215 (simple_type_specifier)


state 20

  187 decl_specifier: FRIEND .

    $default  reduce using rule 187 (decl_specifier)


state 21

  196 function_specifier: INLINE .

    $default  reduce using rule 196 (function_specifier)


state 22

  211 simple_type_specifier: INT .

    $default  reduce using rule 211 (simple_type_specifier)


state 23

  212 simple_type_specifier: LONG .

    $default  reduce using rule 212 (simple_type_specifier)


state 24

  195 storage_class_specifier: MUTABLE .

    $default  reduce using rule 195 (storage_class_specifier)


state 25

  238 original_namespace_definition: NAMESPACE . identifier '{' namespace_body '}'
  239 extension_namespace_definition: NAMESPACE . original_namespace_name '{' namespace_body '}'
  240 unnamed_namespace_definition: NAMESPACE . '{' namespace_body '}'
  242 namespace_alias_definition: NAMESPACE . identifier '=' qualified_namespace_specifier ';'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    '{'             shift, and go to state 109

    original_namespace_name  go to state 110
    identifier               go to state 111


state 26

  364 conversion_function_id: OPERATOR . conversion_type_id
  376 operator_function_id: OPERATOR . operator

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 112
    ADDEQ           shift, and go to state 113
    SUBEQ           shift, and go to state 114
    MULEQ           shift, and go to state 115
    DIVEQ           shift, and go to state 116
    MODEQ           shift, and go to state 117
    XOREQ           shift, and go to state 118
    ANDEQ           shift, and go to state 119
    OREQ            shift, and go to state 120
    SL              shift, and go to state 121
    SR              shift, and go to state 122
    SREQ            shift, and go to state 123
    SLEQ            shift, and go to state 124
    EQ              shift, and go to state 125
    NOTEQ           shift, and go to state 126
    LTEQ            shift, and go to state 127
    GTEQ            shift, and go to state 128
    ANDAND          shift, and go to state 129
    OROR            shift, and go to state 130
    PLUSPLUS        shift, and go to state 131
    MINUSMINUS      shift, and go to state 132
    ARROWSTAR       shift, and go to state 133
    ARROW           shift, and go to state 134
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DELETE          shift, and go to state 135
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    NEW             shift, and go to state 136
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 137
    '~'             shift, and go to state 138
    '['             shift, and go to state 139
    '<'             shift, and go to state 140
    '>'             shift, and go to state 141
    ','             shift, and go to state 142
    '*'             shift, and go to state 143
    '&'             shift, and go to state 144
    '+'             shift, and go to state 145
    '!'             shift, and go to state 146
    '/'             shift, and go to state 147
    '%'             shift, and go to state 148
    '^'             shift, and go to state 149
    '|'             shift, and go to state 150
    '='             shift, and go to state 151
    '_'             shift, and go to state 152

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 153
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 155
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_type_id         go to state 156
    operator                   go to state 157
    template_id                go to state 93


state 27

  192 storage_class_specifier: REGISTER .

    $default  reduce using rule 192 (storage_class_specifier)


state 28

  210 simple_type_specifier: SHORT .

    $default  reduce using rule 210 (simple_type_specifier)


state 29

  213 simple_type_specifier: SIGNED .

    $default  reduce using rule 213 (simple_type_specifier)


state 30

  193 storage_class_specifier: STATIC .

    $default  reduce using rule 193 (storage_class_specifier)


state 31

  325 class_key: STRUCT .

    $default  reduce using rule 325 (class_key)


state 32

  436 explicit_instantiation: TEMPLATE . declaration
  437 explicit_specialization: TEMPLATE . '<' '>' declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '<'             shift, and go to state 158
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 492 (EXPORT_opt)]

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration                     go to state 159
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    EXPORT_opt                      go to state 97


state 33

  188 decl_specifier: TYPEDEF .

    $default  reduce using rule 188 (decl_specifier)


state 34

  226 elaborated_type_specifier: TYPENAME . COLONCOLON_opt nested_name_specifier identifier
  227                          | TYPENAME . COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'

    COLONCOLON  shift, and go to state 160

    $default  reduce using rule 456 (COLONCOLON_opt)

    COLONCOLON_opt  go to state 161


state 35

  326 class_key: UNION .

    $default  reduce using rule 326 (class_key)


state 36

  214 simple_type_specifier: UNSIGNED .

    $default  reduce using rule 214 (simple_type_specifier)


state 37

  247 using_declaration: USING . TYPENAME COLONCOLON nested_name_specifier unqualified_id ';'
  248                  | USING . TYPENAME nested_name_specifier unqualified_id ';'
  249                  | USING . COLONCOLON nested_name_specifier unqualified_id ';'
  250                  | USING . nested_name_specifier unqualified_id ';'
  251                  | USING . COLONCOLON unqualified_id ';'
  252 using_directive: USING . NAMESPACE COLONCOLON nested_name_specifier namespace_name ';'
  253                | USING . NAMESPACE COLONCOLON namespace_name ';'
  254                | USING . NAMESPACE nested_name_specifier namespace_name ';'
  255                | USING . NAMESPACE namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 162
    NAMESPACE       shift, and go to state 163
    TYPENAME        shift, and go to state 164

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    nested_name_specifier    go to state 165
    template_id              go to state 93


state 38

  197 function_specifier: VIRTUAL .

    $default  reduce using rule 197 (function_specifier)


state 39

  217 simple_type_specifier: VOID .

    $default  reduce using rule 217 (simple_type_specifier)


state 40

  281 cv_qualifier: VOLATILE .

    $default  reduce using rule 281 (cv_qualifier)


state 41

  208 simple_type_specifier: WCHAR_T .

    $default  reduce using rule 208 (simple_type_specifier)


state 42

  270 direct_declarator: '(' . declarator ')'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 166
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 54
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 167
    declarator               go to state 168
    direct_declarator        go to state 82
    ptr_operator             go to state 83
    declarator_id            go to state 85
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 43

   30 unqualified_id: '~' . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 169
    template_name  go to state 51
    template_id    go to state 93


state 44

  271 ptr_operator: '*' .
  272             | '*' . cv_qualifier_seq

    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 271 (ptr_operator)

    cv_qualifier_seq  go to state 170
    cv_qualifier      go to state 171


state 45

  273 ptr_operator: '&' .

    $default  reduce using rule 273 (ptr_operator)


state 46

  220 type_name: typedef_name .

    $default  reduce using rule 220 (type_name)


state 47

   35 nested_name_specifier: namespace_name . COLONCOLON

    COLONCOLON  shift, and go to state 172


state 48

    2 namespace_name: original_namespace_name .

    $default  reduce using rule 2 (namespace_name)


state 49

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier namespace_name COLONCOLON nested_name_specifier
   34                      | class_name . COLONCOLON
  218 type_name: class_name .

    COLONCOLON  shift, and go to state 173

    COLONCOLON  [reduce using rule 218 (type_name)]
    $default    reduce using rule 218 (type_name)


state 50

  219 type_name: enum_name .

    $default  reduce using rule 219 (type_name)


state 51

  430 template_id: template_name . '<' template_argument_list '>'

    '<'  shift, and go to state 174


state 52

   27 unqualified_id: identifier .

    $default  reduce using rule 27 (unqualified_id)


state 53

    0 $accept: translation_unit . $end

    $end  shift, and go to state 175


state 54

  282 declarator_id: id_expression .

    $default  reduce using rule 282 (declarator_id)


state 55

   25 id_expression: unqualified_id .

    $default  reduce using rule 25 (id_expression)


state 56

   26 id_expression: qualified_id .

    $default  reduce using rule 26 (id_expression)


state 57

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  205 simple_type_specifier: nested_name_specifier . type_name
  274 ptr_operator: nested_name_specifier . '*'
  275             | nested_name_specifier . '*' cv_qualifier_seq

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 4
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 176
    '~'            shift, and go to state 43
    '*'            shift, and go to state 177

    typedef_name            go to state 46
    class_name              go to state 178
    enum_name               go to state 50
    template_name           go to state 51
    identifier              go to state 52
    unqualified_id          go to state 179
    type_name               go to state 180
    conversion_function_id  go to state 90
    operator_function_id    go to state 91
    template_id             go to state 93


state 58

  169 declaration_seq: declaration_seq . declaration
  451 declaration_seq_opt: declaration_seq .

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 492 (EXPORT_opt)]
    $default  reduce using rule 451 (declaration_seq_opt)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration                     go to state 181
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    EXPORT_opt                      go to state 97


state 59

  168 declaration_seq: declaration .

    $default  reduce using rule 168 (declaration_seq)


state 60

  170 declaration: block_declaration .

    $default  reduce using rule 170 (declaration)


state 61

  177 block_declaration: simple_declaration .

    $default  reduce using rule 177 (block_declaration)


state 62

  189 decl_specifier_seq: decl_specifier .

    $default  reduce using rule 189 (decl_specifier_seq)


state 63

  182 simple_declaration: decl_specifier_seq . init_declarator_list ';'
  183                   | decl_specifier_seq . ';'
  190 decl_specifier_seq: decl_specifier_seq . decl_specifier
  308 function_definition: decl_specifier_seq . declarator ctor_initializer_opt function_body
  310                    | decl_specifier_seq . declarator function_try_block

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 182
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 183

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    id_expression              go to state 54
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 57
    decl_specifier             go to state 184
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    init_declarator_list       go to state 185
    init_declarator            go to state 186
    declarator                 go to state 187
    direct_declarator          go to state 82
    ptr_operator               go to state 83
    cv_qualifier               go to state 84
    declarator_id              go to state 85
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


state 64

  184 decl_specifier: storage_class_specifier .

    $default  reduce using rule 184 (decl_specifier)


state 65

  186 decl_specifier: function_specifier .

    $default  reduce using rule 186 (decl_specifier)


state 66

  185 decl_specifier: type_specifier .

    $default  reduce using rule 185 (decl_specifier)


state 67

  199 type_specifier: simple_type_specifier .

    $default  reduce using rule 199 (type_specifier)


state 68

  204 simple_type_specifier: type_name .

    $default  reduce using rule 204 (simple_type_specifier)


state 69

  202 type_specifier: elaborated_type_specifier .

    $default  reduce using rule 202 (type_specifier)


state 70

  201 type_specifier: enum_specifier .

    $default  reduce using rule 201 (type_specifier)


state 71

  176 declaration: namespace_definition .

    $default  reduce using rule 176 (declaration)


state 72

  234 namespace_definition: named_namespace_definition .

    $default  reduce using rule 234 (namespace_definition)


state 73

  236 named_namespace_definition: original_namespace_definition .

    $default  reduce using rule 236 (named_namespace_definition)


state 74

  237 named_namespace_definition: extension_namespace_definition .

    $default  reduce using rule 237 (named_namespace_definition)


state 75

  235 namespace_definition: unnamed_namespace_definition .

    $default  reduce using rule 235 (namespace_definition)


state 76

  179 block_declaration: namespace_alias_definition .

    $default  reduce using rule 179 (block_declaration)


state 77

  180 block_declaration: using_declaration .

    $default  reduce using rule 180 (block_declaration)


state 78

  181 block_declaration: using_directive .

    $default  reduce using rule 181 (block_declaration)


state 79

  178 block_declaration: asm_definition .

    $default  reduce using rule 178 (block_declaration)


state 80

  175 declaration: linkage_specification .

    $default  reduce using rule 175 (declaration)


state 81

  307 function_definition: declarator . ctor_initializer_opt function_body
  309                    | declarator . function_try_block

    TRY  shift, and go to state 188
    ':'  shift, and go to state 189

    $default  reduce using rule 482 (ctor_initializer_opt)

    ctor_initializer      go to state 190
    function_try_block    go to state 191
    ctor_initializer_opt  go to state 192


state 82

  262 declarator: direct_declarator .
  265 direct_declarator: direct_declarator . '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  266                  | direct_declarator . '(' parameter_declaration_clause ')' cv_qualifier_seq
  267                  | direct_declarator . '(' parameter_declaration_clause ')' exception_specification
  268                  | direct_declarator . '(' parameter_declaration_clause ')'
  269                  | direct_declarator . '[' constant_expression_opt ']'

    '('  shift, and go to state 193
    '['  shift, and go to state 194

    '('       [reduce using rule 262 (declarator)]
    $default  reduce using rule 262 (declarator)


state 83

  263 declarator: ptr_operator . declarator

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 166
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 54
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 167
    declarator               go to state 195
    direct_declarator        go to state 82
    ptr_operator             go to state 83
    declarator_id            go to state 85
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 84

  203 type_specifier: cv_qualifier .

    $default  reduce using rule 203 (type_specifier)


state 85

  264 direct_declarator: declarator_id .

    $default  reduce using rule 264 (direct_declarator)


state 86

  171 declaration: function_definition .

    $default  reduce using rule 171 (declaration)


state 87

  200 type_specifier: class_specifier .

    $default  reduce using rule 200 (type_specifier)


state 88

  319 class_specifier: class_head . '{' member_specification_opt '}'

    '{'  shift, and go to state 196


state 89

  221 elaborated_type_specifier: class_key . COLONCOLON nested_name_specifier identifier
  222                          | class_key . COLONCOLON identifier
  320 class_head: class_key . identifier
  321           | class_key . identifier base_clause
  322           | class_key . nested_name_specifier identifier
  323           | class_key . nested_name_specifier identifier base_clause

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 197

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 198
    nested_name_specifier    go to state 199
    template_id              go to state 93


state 90

   29 unqualified_id: conversion_function_id .

    $default  reduce using rule 29 (unqualified_id)


state 91

   28 unqualified_id: operator_function_id .

    $default  reduce using rule 28 (unqualified_id)


state 92

  172 declaration: template_declaration .

    $default  reduce using rule 172 (declaration)


state 93

    5 class_name: template_id .

    $default  reduce using rule 5 (class_name)


state 94

  173 declaration: explicit_instantiation .

    $default  reduce using rule 173 (declaration)


state 95

  174 declaration: explicit_specialization .

    $default  reduce using rule 174 (declaration)


state 96

   20 translation_unit: declaration_seq_opt .

    $default  reduce using rule 20 (translation_unit)


state 97

  419 template_declaration: EXPORT_opt . TEMPLATE '<' template_parameter_list '>' declaration

    TEMPLATE  shift, and go to state 200


state 98

  283 declarator_id: COLONCOLON id_expression .

    $default  reduce using rule 283 (declarator_id)


state 99

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  276 ptr_operator: COLONCOLON nested_name_specifier . '*'
  277             | COLONCOLON nested_name_specifier . '*' cv_qualifier_seq
  284 declarator_id: COLONCOLON nested_name_specifier . type_name
  453 nested_name_specifier_opt: nested_name_specifier .

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 4
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 176
    '~'            shift, and go to state 43
    '*'            shift, and go to state 201

    TYPEDEF_NAME   [reduce using rule 453 (nested_name_specifier_opt)]
    CLASS_NAME     [reduce using rule 453 (nested_name_specifier_opt)]
    ENUM_NAME      [reduce using rule 453 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 453 (nested_name_specifier_opt)]

    typedef_name            go to state 46
    class_name              go to state 178
    enum_name               go to state 50
    template_name           go to state 51
    identifier              go to state 52
    unqualified_id          go to state 179
    type_name               go to state 202
    conversion_function_id  go to state 90
    operator_function_id    go to state 91
    template_id             go to state 93


state 100

  285 declarator_id: COLONCOLON type_name .

    $default  reduce using rule 285 (declarator_id)


state 101

  206 simple_type_specifier: COLONCOLON nested_name_specifier_opt . type_name

    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 4
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6

    typedef_name   go to state 46
    class_name     go to state 178
    enum_name      go to state 50
    template_name  go to state 51
    type_name      go to state 203
    template_id    go to state 93


state 102

  256 asm_definition: ASM '(' . string_literal ')' ';'

    STRING  shift, and go to state 107

    string_literal  go to state 204


state 103

  223 elaborated_type_specifier: ENUM COLONCOLON . nested_name_specifier identifier
  224                          | ENUM COLONCOLON . identifier

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 205
    nested_name_specifier    go to state 206
    template_id              go to state 93


state 104

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier namespace_name COLONCOLON nested_name_specifier
   34                      | class_name . COLONCOLON

    COLONCOLON  shift, and go to state 173


state 105

  228 enum_specifier: ENUM identifier . '{' enumerator_list_opt '}'

    '{'  shift, and go to state 207


state 106

  225 elaborated_type_specifier: ENUM nested_name_specifier . identifier

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 208


state 107

   17 string_literal: STRING .

    $default  reduce using rule 17 (string_literal)


state 108

  257 linkage_specification: EXTERN string_literal . '{' declaration_seq_opt '}'
  258                      | EXTERN string_literal . declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45
    '{'             shift, and go to state 209

    TEMPLATE  [reduce using rule 492 (EXPORT_opt)]

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration                     go to state 210
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    EXPORT_opt                      go to state 97


state 109

  240 unnamed_namespace_definition: NAMESPACE '{' . namespace_body '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 492 (EXPORT_opt)]
    $default  reduce using rule 450 (declaration_seq_opt)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration_seq                 go to state 58
    declaration                     go to state 59
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_body                  go to state 211
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    declaration_seq_opt             go to state 212
    EXPORT_opt                      go to state 97


state 110

  239 extension_namespace_definition: NAMESPACE original_namespace_name . '{' namespace_body '}'

    '{'  shift, and go to state 213


state 111

  238 original_namespace_definition: NAMESPACE identifier . '{' namespace_body '}'
  242 namespace_alias_definition: NAMESPACE identifier . '=' qualified_namespace_specifier ';'

    '='  shift, and go to state 214
    '{'  shift, and go to state 215


state 112

  206 simple_type_specifier: COLONCOLON . nested_name_specifier_opt type_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 452 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 452 (nested_name_specifier_opt)]
    $default       reduce using rule 452 (nested_name_specifier_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    nested_name_specifier      go to state 216
    template_id                go to state 93
    nested_name_specifier_opt  go to state 101


state 113

  394 operator: ADDEQ .

    $default  reduce using rule 394 (operator)


state 114

  395 operator: SUBEQ .

    $default  reduce using rule 395 (operator)


state 115

  396 operator: MULEQ .

    $default  reduce using rule 396 (operator)


state 116

  397 operator: DIVEQ .

    $default  reduce using rule 397 (operator)


state 117

  398 operator: MODEQ .

    $default  reduce using rule 398 (operator)


state 118

  399 operator: XOREQ .

    $default  reduce using rule 399 (operator)


state 119

  400 operator: ANDEQ .

    $default  reduce using rule 400 (operator)


state 120

  401 operator: OREQ .

    $default  reduce using rule 401 (operator)


state 121

  402 operator: SL .

    $default  reduce using rule 402 (operator)


state 122

  403 operator: SR .

    $default  reduce using rule 403 (operator)


state 123

  404 operator: SREQ .

    $default  reduce using rule 404 (operator)


state 124

  405 operator: SLEQ .

    $default  reduce using rule 405 (operator)


state 125

  406 operator: EQ .

    $default  reduce using rule 406 (operator)


state 126

  407 operator: NOTEQ .

    $default  reduce using rule 407 (operator)


state 127

  408 operator: LTEQ .

    $default  reduce using rule 408 (operator)


state 128

  409 operator: GTEQ .

    $default  reduce using rule 409 (operator)


state 129

  410 operator: ANDAND .

    $default  reduce using rule 410 (operator)


state 130

  411 operator: OROR .

    $default  reduce using rule 411 (operator)


state 131

  412 operator: PLUSPLUS .

    $default  reduce using rule 412 (operator)


state 132

  413 operator: MINUSMINUS .

    $default  reduce using rule 413 (operator)


state 133

  415 operator: ARROWSTAR .

    $default  reduce using rule 415 (operator)


state 134

  416 operator: ARROW .

    $default  reduce using rule 416 (operator)


state 135

  378 operator: DELETE .
  380         | DELETE . '[' ']'

    '['  shift, and go to state 217

    '['       [reduce using rule 378 (operator)]
    $default  reduce using rule 378 (operator)


state 136

  377 operator: NEW .
  379         | NEW . '[' ']'

    '['  shift, and go to state 218

    '['       [reduce using rule 377 (operator)]
    $default  reduce using rule 377 (operator)


state 137

  417 operator: '(' . ')'

    ')'  shift, and go to state 219


state 138

  389 operator: '~' .

    $default  reduce using rule 389 (operator)


state 139

  418 operator: '[' . ']'

    ']'  shift, and go to state 220


state 140

  392 operator: '<' .

    $default  reduce using rule 392 (operator)


state 141

  393 operator: '>' .

    $default  reduce using rule 393 (operator)


state 142

  414 operator: ',' .

    $default  reduce using rule 414 (operator)


state 143

  383 operator: '*' .

    $default  reduce using rule 383 (operator)


state 144

  387 operator: '&' .

    $default  reduce using rule 387 (operator)


state 145

  381 operator: '+' .

    $default  reduce using rule 381 (operator)


state 146

  390 operator: '!' .

    $default  reduce using rule 390 (operator)


state 147

  384 operator: '/' .

    $default  reduce using rule 384 (operator)


state 148

  385 operator: '%' .

    $default  reduce using rule 385 (operator)


state 149

  386 operator: '^' .

    $default  reduce using rule 386 (operator)


state 150

  388 operator: '|' .

    $default  reduce using rule 388 (operator)


state 151

  391 operator: '=' .

    $default  reduce using rule 391 (operator)


state 152

  382 operator: '_' .

    $default  reduce using rule 382 (operator)


state 153

  205 simple_type_specifier: nested_name_specifier . type_name

    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 4
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6

    typedef_name   go to state 46
    class_name     go to state 178
    enum_name      go to state 50
    template_name  go to state 51
    type_name      go to state 180
    template_id    go to state 93


state 154

  287 type_specifier_seq: type_specifier . type_specifier_seq_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 112
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    NAMESPACE_NAME  [reduce using rule 478 (type_specifier_seq_opt)]
    CLASS_NAME      [reduce using rule 478 (type_specifier_seq_opt)]
    TEMPLATE_NAME   [reduce using rule 478 (type_specifier_seq_opt)]
    COLONCOLON      [reduce using rule 478 (type_specifier_seq_opt)]
    $default        reduce using rule 478 (type_specifier_seq_opt)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 153
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 221
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93
    type_specifier_seq_opt     go to state 222


state 155

  365 conversion_type_id: type_specifier_seq . conversion_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 223
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '*'       [reduce using rule 490 (conversion_declarator_opt)]
    '&'       [reduce using rule 490 (conversion_declarator_opt)]
    $default  reduce using rule 490 (conversion_declarator_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    nested_name_specifier      go to state 224
    ptr_operator               go to state 225
    conversion_declarator      go to state 226
    template_id                go to state 93
    conversion_declarator_opt  go to state 227


state 156

  364 conversion_function_id: OPERATOR conversion_type_id .

    $default  reduce using rule 364 (conversion_function_id)


state 157

  376 operator_function_id: OPERATOR operator .

    $default  reduce using rule 376 (operator_function_id)


state 158

  437 explicit_specialization: TEMPLATE '<' . '>' declaration

    '>'  shift, and go to state 228


state 159

  436 explicit_instantiation: TEMPLATE declaration .

    $default  reduce using rule 436 (explicit_instantiation)


state 160

  457 COLONCOLON_opt: COLONCOLON .

    $default  reduce using rule 457 (COLONCOLON_opt)


state 161

  226 elaborated_type_specifier: TYPENAME COLONCOLON_opt . nested_name_specifier identifier
  227                          | TYPENAME COLONCOLON_opt . nested_name_specifier identifier '<' template_argument_list '>'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    nested_name_specifier    go to state 229
    template_id              go to state 93


state 162

  249 using_declaration: USING COLONCOLON . nested_name_specifier unqualified_id ';'
  251                  | USING COLONCOLON . unqualified_id ';'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    unqualified_id           go to state 230
    nested_name_specifier    go to state 231
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 163

  252 using_directive: USING NAMESPACE . COLONCOLON nested_name_specifier namespace_name ';'
  253                | USING NAMESPACE . COLONCOLON namespace_name ';'
  254                | USING NAMESPACE . nested_name_specifier namespace_name ';'
  255                | USING NAMESPACE . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 232

    namespace_name           go to state 233
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    nested_name_specifier    go to state 234
    template_id              go to state 93


state 164

  247 using_declaration: USING TYPENAME . COLONCOLON nested_name_specifier unqualified_id ';'
  248                  | USING TYPENAME . nested_name_specifier unqualified_id ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 235

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    nested_name_specifier    go to state 236
    template_id              go to state 93


state 165

  250 using_declaration: USING nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 237
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


state 166

  276 ptr_operator: COLONCOLON . nested_name_specifier '*'
  277             | COLONCOLON . nested_name_specifier '*' cv_qualifier_seq
  283 declarator_id: COLONCOLON . id_expression
  284              | COLONCOLON . nested_name_specifier type_name
  285              | COLONCOLON . type_name

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    typedef_name             go to state 46
    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 49
    enum_name                go to state 50
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 98
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 238
    type_name                go to state 100
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 167

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  274 ptr_operator: nested_name_specifier . '*'
  275             | nested_name_specifier . '*' cv_qualifier_seq

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    TEMPLATE    shift, and go to state 176
    '~'         shift, and go to state 43
    '*'         shift, and go to state 177

    identifier              go to state 52
    unqualified_id          go to state 179
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


state 168

  270 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 239


state 169

   30 unqualified_id: '~' class_name .

    $default  reduce using rule 30 (unqualified_id)


state 170

  272 ptr_operator: '*' cv_qualifier_seq .

    $default  reduce using rule 272 (ptr_operator)


state 171

  278 cv_qualifier_seq: cv_qualifier .
  279                 | cv_qualifier . cv_qualifier_seq

    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 278 (cv_qualifier_seq)

    cv_qualifier_seq  go to state 240
    cv_qualifier      go to state 171


state 172

   35 nested_name_specifier: namespace_name COLONCOLON .

    $default  reduce using rule 35 (nested_name_specifier)


state 173

   33 nested_name_specifier: class_name COLONCOLON . nested_name_specifier namespace_name COLONCOLON nested_name_specifier
   34                      | class_name COLONCOLON .

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    NAMESPACE_NAME  [reduce using rule 34 (nested_name_specifier)]
    CLASS_NAME      [reduce using rule 34 (nested_name_specifier)]
    TEMPLATE_NAME   [reduce using rule 34 (nested_name_specifier)]
    $default        reduce using rule 34 (nested_name_specifier)

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    nested_name_specifier    go to state 241
    template_id              go to state 93


state 174

  430 template_id: template_name '<' . template_argument_list '>'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 245
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 250
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 251
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 267
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 276
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 295
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 296
    type_specifier_seq         go to state 297
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    template_argument_list     go to state 298
    template_argument          go to state 299
    throw_expression           go to state 300


state 175

    0 $accept: translation_unit $end .

    $default  accept


state 176

   32 qualified_id: nested_name_specifier TEMPLATE . unqualified_id

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 301
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


state 177

  274 ptr_operator: nested_name_specifier '*' .
  275             | nested_name_specifier '*' . cv_qualifier_seq

    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 274 (ptr_operator)

    cv_qualifier_seq  go to state 302
    cv_qualifier      go to state 171


state 178

  218 type_name: class_name .

    $default  reduce using rule 218 (type_name)


state 179

   31 qualified_id: nested_name_specifier unqualified_id .

    $default  reduce using rule 31 (qualified_id)


state 180

  205 simple_type_specifier: nested_name_specifier type_name .

    $default  reduce using rule 205 (simple_type_specifier)


state 181

  169 declaration_seq: declaration_seq declaration .

    $default  reduce using rule 169 (declaration_seq)


state 182

  194 storage_class_specifier: EXTERN .

    $default  reduce using rule 194 (storage_class_specifier)


state 183

  183 simple_declaration: decl_specifier_seq ';' .

    $default  reduce using rule 183 (simple_declaration)


state 184

  190 decl_specifier_seq: decl_specifier_seq decl_specifier .

    $default  reduce using rule 190 (decl_specifier_seq)


state 185

  182 simple_declaration: decl_specifier_seq init_declarator_list . ';'
  260 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 303
    ';'  shift, and go to state 304


state 186

  259 init_declarator_list: init_declarator .

    $default  reduce using rule 259 (init_declarator_list)


state 187

  261 init_declarator: declarator . initializer_opt
  308 function_definition: decl_specifier_seq declarator . ctor_initializer_opt function_body
  310                    | decl_specifier_seq declarator . function_try_block

    TRY  shift, and go to state 188
    '('  shift, and go to state 305
    ':'  shift, and go to state 189
    '='  shift, and go to state 306

    '{'       reduce using rule 482 (ctor_initializer_opt)
    $default  reduce using rule 472 (initializer_opt)

    initializer           go to state 307
    ctor_initializer      go to state 190
    function_try_block    go to state 308
    initializer_opt       go to state 309
    ctor_initializer_opt  go to state 310


state 188

  439 function_try_block: TRY . ctor_initializer_opt function_body handler_seq

    ':'  shift, and go to state 189

    $default  reduce using rule 482 (ctor_initializer_opt)

    ctor_initializer      go to state 190
    ctor_initializer_opt  go to state 311


state 189

  367 ctor_initializer: ':' . mem_initializer_list

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 312

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 313
    template_name            go to state 51
    identifier               go to state 314
    nested_name_specifier    go to state 315
    mem_initializer_list     go to state 316
    mem_initializer          go to state 317
    mem_initializer_id       go to state 318
    template_id              go to state 93


state 190

  483 ctor_initializer_opt: ctor_initializer .

    $default  reduce using rule 483 (ctor_initializer_opt)


state 191

  309 function_definition: declarator function_try_block .

    $default  reduce using rule 309 (function_definition)


state 192

  307 function_definition: declarator ctor_initializer_opt . function_body

    '{'  shift, and go to state 319

    compound_statement  go to state 320
    function_body       go to state 321


state 193

  265 direct_declarator: direct_declarator '(' . parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  266                  | direct_declarator '(' . parameter_declaration_clause ')' cv_qualifier_seq
  267                  | direct_declarator '(' . parameter_declaration_clause ')' exception_specification
  268                  | direct_declarator '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 322
    COLONCOLON      shift, and go to state 112
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 182
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    $default  reduce using rule 299 (parameter_declaration_clause)

    typedef_name                  go to state 46
    namespace_name                go to state 47
    original_namespace_name       go to state 48
    class_name                    go to state 49
    enum_name                     go to state 50
    template_name                 go to state 51
    nested_name_specifier         go to state 153
    decl_specifier                go to state 62
    decl_specifier_seq            go to state 323
    storage_class_specifier       go to state 64
    function_specifier            go to state 65
    type_specifier                go to state 66
    simple_type_specifier         go to state 67
    type_name                     go to state 68
    elaborated_type_specifier     go to state 69
    enum_specifier                go to state 70
    cv_qualifier                  go to state 84
    parameter_declaration_clause  go to state 324
    parameter_declaration_list    go to state 325
    parameter_declaration         go to state 326
    class_specifier               go to state 87
    class_head                    go to state 88
    class_key                     go to state 89
    template_id                   go to state 93


state 194

  269 direct_declarator: direct_declarator '[' . constant_expression_opt ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    $default  reduce using rule 474 (constant_expression_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 329
    conditional_expression     go to state 330
    constant_expression        go to state 331
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    constant_expression_opt    go to state 332


state 195

  263 declarator: ptr_operator declarator .

    $default  reduce using rule 263 (declarator)


state 196

  319 class_specifier: class_head '{' . member_specification_opt '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 182
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    PRIVATE         shift, and go to state 333
    PROTECTED       shift, and go to state 334
    PUBLIC          shift, and go to state 335
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 336
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 337

    TEMPLATE  reduce using rule 492 (EXPORT_opt)
    ';'       [reduce using rule 339 (member_declarator)]
    '}'       reduce using rule 486 (member_specification_opt)
    $default  reduce using rule 339 (member_declarator)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 338
    id_expression              go to state 54
    unqualified_id             go to state 55
    qualified_id               go to state 339
    nested_name_specifier      go to state 57
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 340
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    using_declaration          go to state 341
    declarator                 go to state 342
    direct_declarator          go to state 82
    ptr_operator               go to state 83
    cv_qualifier               go to state 84
    declarator_id              go to state 85
    function_definition        go to state 343
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    member_specification       go to state 344
    member_declaration         go to state 345
    member_declarator_list     go to state 346
    member_declarator          go to state 347
    access_specifier           go to state 348
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_declaration       go to state 349
    template_id                go to state 93
    member_specification_opt   go to state 350
    EXPORT_opt                 go to state 97


state 197

  221 elaborated_type_specifier: class_key COLONCOLON . nested_name_specifier identifier
  222                          | class_key COLONCOLON . identifier

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 351
    nested_name_specifier    go to state 352
    template_id              go to state 93


state 198

  320 class_head: class_key identifier .
  321           | class_key identifier . base_clause

    ':'  shift, and go to state 353

    $default  reduce using rule 320 (class_head)

    base_clause  go to state 354


state 199

  322 class_head: class_key nested_name_specifier . identifier
  323           | class_key nested_name_specifier . identifier base_clause

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 355


state 200

  419 template_declaration: EXPORT_opt TEMPLATE . '<' template_parameter_list '>' declaration

    '<'  shift, and go to state 356


state 201

  276 ptr_operator: COLONCOLON nested_name_specifier '*' .
  277             | COLONCOLON nested_name_specifier '*' . cv_qualifier_seq

    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 276 (ptr_operator)

    cv_qualifier_seq  go to state 357
    cv_qualifier      go to state 171


state 202

  284 declarator_id: COLONCOLON nested_name_specifier type_name .

    $default  reduce using rule 284 (declarator_id)


state 203

  206 simple_type_specifier: COLONCOLON nested_name_specifier_opt type_name .

    $default  reduce using rule 206 (simple_type_specifier)


state 204

  256 asm_definition: ASM '(' string_literal . ')' ';'

    ')'  shift, and go to state 358


state 205

  224 elaborated_type_specifier: ENUM COLONCOLON identifier .

    $default  reduce using rule 224 (elaborated_type_specifier)


state 206

  223 elaborated_type_specifier: ENUM COLONCOLON nested_name_specifier . identifier

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 359


state 207

  228 enum_specifier: ENUM identifier '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 470 (enumerator_list_opt)

    identifier             go to state 360
    enumerator_list        go to state 361
    enumerator_definition  go to state 362
    enumerator             go to state 363
    enumerator_list_opt    go to state 364


state 208

  225 elaborated_type_specifier: ENUM nested_name_specifier identifier .

    $default  reduce using rule 225 (elaborated_type_specifier)


state 209

  257 linkage_specification: EXTERN string_literal '{' . declaration_seq_opt '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 492 (EXPORT_opt)]
    $default  reduce using rule 450 (declaration_seq_opt)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration_seq                 go to state 58
    declaration                     go to state 59
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    declaration_seq_opt             go to state 365
    EXPORT_opt                      go to state 97


state 210

  258 linkage_specification: EXTERN string_literal declaration .

    $default  reduce using rule 258 (linkage_specification)


state 211

  240 unnamed_namespace_definition: NAMESPACE '{' namespace_body . '}'

    '}'  shift, and go to state 366


state 212

  241 namespace_body: declaration_seq_opt .

    $default  reduce using rule 241 (namespace_body)


state 213

  239 extension_namespace_definition: NAMESPACE original_namespace_name '{' . namespace_body '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 492 (EXPORT_opt)]
    $default  reduce using rule 450 (declaration_seq_opt)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration_seq                 go to state 58
    declaration                     go to state 59
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_body                  go to state 367
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    declaration_seq_opt             go to state 212
    EXPORT_opt                      go to state 97


state 214

  242 namespace_alias_definition: NAMESPACE identifier '=' . qualified_namespace_specifier ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 368

    namespace_name                 go to state 369
    original_namespace_name        go to state 48
    class_name                     go to state 104
    template_name                  go to state 51
    nested_name_specifier          go to state 370
    qualified_namespace_specifier  go to state 371
    template_id                    go to state 93


state 215

  238 original_namespace_definition: NAMESPACE identifier '{' . namespace_body '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 492 (EXPORT_opt)]
    $default  reduce using rule 450 (declaration_seq_opt)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration_seq                 go to state 58
    declaration                     go to state 59
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_body                  go to state 372
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    declaration_seq_opt             go to state 212
    EXPORT_opt                      go to state 97


state 216

  453 nested_name_specifier_opt: nested_name_specifier .

    $default  reduce using rule 453 (nested_name_specifier_opt)


state 217

  380 operator: DELETE '[' . ']'

    ']'  shift, and go to state 373


state 218

  379 operator: NEW '[' . ']'

    ']'  shift, and go to state 374


state 219

  417 operator: '(' ')' .

    $default  reduce using rule 417 (operator)


state 220

  418 operator: '[' ']' .

    $default  reduce using rule 418 (operator)


state 221

  479 type_specifier_seq_opt: type_specifier_seq .

    $default  reduce using rule 479 (type_specifier_seq_opt)


state 222

  287 type_specifier_seq: type_specifier type_specifier_seq_opt .

    $default  reduce using rule 287 (type_specifier_seq)


state 223

  276 ptr_operator: COLONCOLON . nested_name_specifier '*'
  277             | COLONCOLON . nested_name_specifier '*' cv_qualifier_seq

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    nested_name_specifier    go to state 375
    template_id              go to state 93


state 224

  274 ptr_operator: nested_name_specifier . '*'
  275             | nested_name_specifier . '*' cv_qualifier_seq

    '*'  shift, and go to state 177


state 225

  366 conversion_declarator: ptr_operator . conversion_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 223
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '*'       [reduce using rule 490 (conversion_declarator_opt)]
    '&'       [reduce using rule 490 (conversion_declarator_opt)]
    $default  reduce using rule 490 (conversion_declarator_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    nested_name_specifier      go to state 224
    ptr_operator               go to state 225
    conversion_declarator      go to state 226
    template_id                go to state 93
    conversion_declarator_opt  go to state 376


state 226

  491 conversion_declarator_opt: conversion_declarator .

    $default  reduce using rule 491 (conversion_declarator_opt)


state 227

  365 conversion_type_id: type_specifier_seq conversion_declarator_opt .

    $default  reduce using rule 365 (conversion_type_id)


state 228

  437 explicit_specialization: TEMPLATE '<' '>' . declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 492 (EXPORT_opt)]

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration                     go to state 377
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    EXPORT_opt                      go to state 97


state 229

  226 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier . identifier
  227                          | TYPENAME COLONCOLON_opt nested_name_specifier . identifier '<' template_argument_list '>'

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 378


state 230

  251 using_declaration: USING COLONCOLON unqualified_id . ';'

    ';'  shift, and go to state 379


state 231

  249 using_declaration: USING COLONCOLON nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 380
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


state 232

  252 using_directive: USING NAMESPACE COLONCOLON . nested_name_specifier namespace_name ';'
  253                | USING NAMESPACE COLONCOLON . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 381
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    nested_name_specifier    go to state 382
    template_id              go to state 93


state 233

   35 nested_name_specifier: namespace_name . COLONCOLON
  255 using_directive: USING NAMESPACE namespace_name . ';'

    COLONCOLON  shift, and go to state 172
    ';'         shift, and go to state 383


state 234

  254 using_directive: USING NAMESPACE nested_name_specifier . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 384
    original_namespace_name  go to state 48


state 235

  247 using_declaration: USING TYPENAME COLONCOLON . nested_name_specifier unqualified_id ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    nested_name_specifier    go to state 385
    template_id              go to state 93


state 236

  248 using_declaration: USING TYPENAME nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 386
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


state 237

  250 using_declaration: USING nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 387


state 238

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  276 ptr_operator: COLONCOLON nested_name_specifier . '*'
  277             | COLONCOLON nested_name_specifier . '*' cv_qualifier_seq
  284 declarator_id: COLONCOLON nested_name_specifier . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 4
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 176
    '~'            shift, and go to state 43
    '*'            shift, and go to state 201

    typedef_name            go to state 46
    class_name              go to state 178
    enum_name               go to state 50
    template_name           go to state 51
    identifier              go to state 52
    unqualified_id          go to state 179
    type_name               go to state 202
    conversion_function_id  go to state 90
    operator_function_id    go to state 91
    template_id             go to state 93


state 239

  270 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 270 (direct_declarator)


state 240

  279 cv_qualifier_seq: cv_qualifier cv_qualifier_seq .

    $default  reduce using rule 279 (cv_qualifier_seq)


state 241

   33 nested_name_specifier: class_name COLONCOLON nested_name_specifier . namespace_name COLONCOLON nested_name_specifier

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 388
    original_namespace_name  go to state 48


state 242

   14 integer_literal: INTEGER .

    $default  reduce using rule 14 (integer_literal)


state 243

   16 floating_literal: FLOATING .

    $default  reduce using rule 16 (floating_literal)


state 244

   15 character_literal: CHARACTER .

    $default  reduce using rule 15 (character_literal)


state 245

   72 new_expression: COLONCOLON . NEW new_placement_opt new_type_id new_initializer_opt
   74               | COLONCOLON . NEW new_placement_opt '(' type_id ')' new_initializer_opt
   83 delete_expression: COLONCOLON . DELETE cast_expression
   85                  | COLONCOLON . DELETE '[' ']' cast_expression
  206 simple_type_specifier: COLONCOLON . nested_name_specifier_opt type_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    DELETE          shift, and go to state 389
    NEW             shift, and go to state 390

    CLASS_NAME     [reduce using rule 452 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 452 (nested_name_specifier_opt)]
    $default       reduce using rule 452 (nested_name_specifier_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    nested_name_specifier      go to state 216
    template_id                go to state 93
    nested_name_specifier_opt  go to state 101


state 246

   58 unary_expression: PLUSPLUS . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 268
    integer_literal          go to state 269
    character_literal        go to state 270
    floating_literal         go to state 271
    string_literal           go to state 272
    boolean_literal          go to state 273
    primary_expression       go to state 274
    id_expression            go to state 275
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 328
    postfix_expression       go to state 277
    unary_expression         go to state 278
    unary_operator           go to state 279
    new_expression           go to state 280
    delete_expression        go to state 281
    cast_expression          go to state 391
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 247

   59 unary_expression: MINUSMINUS . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 268
    integer_literal          go to state 269
    character_literal        go to state 270
    floating_literal         go to state 271
    string_literal           go to state 272
    boolean_literal          go to state 273
    primary_expression       go to state 274
    id_expression            go to state 275
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 328
    postfix_expression       go to state 277
    unary_expression         go to state 278
    unary_operator           go to state 279
    new_expression           go to state 280
    delete_expression        go to state 281
    cast_expression          go to state 392
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 248

   52 postfix_expression: CONST_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 393


state 249

   82 delete_expression: DELETE . cast_expression
   84                  | DELETE . '[' ']' cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '['               shift, and go to state 394
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 268
    integer_literal          go to state 269
    character_literal        go to state 270
    floating_literal         go to state 271
    string_literal           go to state 272
    boolean_literal          go to state 273
    primary_expression       go to state 274
    id_expression            go to state 275
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 328
    postfix_expression       go to state 277
    unary_expression         go to state 278
    unary_operator           go to state 279
    new_expression           go to state 280
    delete_expression        go to state 281
    cast_expression          go to state 395
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 250

   49 postfix_expression: DYNAMIC_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 396


state 251

   19 boolean_literal: FALSE .

    $default  reduce using rule 19 (boolean_literal)


state 252

   71 new_expression: NEW . new_placement_opt new_type_id new_initializer_opt
   73               | NEW . new_placement_opt '(' type_id ')' new_initializer_opt

    '('  shift, and go to state 397

    '('       [reduce using rule 458 (new_placement_opt)]
    $default  reduce using rule 458 (new_placement_opt)

    new_placement      go to state 398
    new_placement_opt  go to state 399


state 253

   51 postfix_expression: REINTERPRET_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 400


state 254

   63 unary_expression: SIZEOF . unary_expression
   64                 | SIZEOF . '(' type_id ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 401
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 268
    integer_literal          go to state 269
    character_literal        go to state 270
    floating_literal         go to state 271
    string_literal           go to state 272
    boolean_literal          go to state 273
    primary_expression       go to state 274
    id_expression            go to state 275
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 328
    postfix_expression       go to state 277
    unary_expression         go to state 402
    unary_operator           go to state 279
    new_expression           go to state 280
    delete_expression        go to state 281
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 255

   50 postfix_expression: STATIC_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 403


state 256

   22 primary_expression: THIS .

    $default  reduce using rule 22 (primary_expression)


state 257

  446 throw_expression: THROW . assignment_expression_opt

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    $default  reduce using rule 496 (assignment_expression_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 404
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300
    assignment_expression_opt  go to state 405


state 258

   18 boolean_literal: TRUE .

    $default  reduce using rule 18 (boolean_literal)


state 259

   53 postfix_expression: TYPEID . '(' expression ')'
   54                   | TYPEID . '(' type_id ')'

    '('  shift, and go to state 406


state 260

   23 primary_expression: '(' . expression ')'
   87 cast_expression: '(' . type_id ')' cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 245
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 250
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 251
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 276
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 407
    expression                 go to state 408
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 409
    type_specifier_seq         go to state 297
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 261

   30 unqualified_id: '~' . class_name
   70 unary_operator: '~' .

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    CLASS_NAME     [reduce using rule 70 (unary_operator)]
    TEMPLATE_NAME  [reduce using rule 70 (unary_operator)]
    $default       reduce using rule 70 (unary_operator)

    class_name     go to state 169
    template_name  go to state 51
    template_id    go to state 93


state 262

   60 unary_expression: '*' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 268
    integer_literal          go to state 269
    character_literal        go to state 270
    floating_literal         go to state 271
    string_literal           go to state 272
    boolean_literal          go to state 273
    primary_expression       go to state 274
    id_expression            go to state 275
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 328
    postfix_expression       go to state 277
    unary_expression         go to state 278
    unary_operator           go to state 279
    new_expression           go to state 280
    delete_expression        go to state 281
    cast_expression          go to state 410
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 263

   61 unary_expression: '&' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 268
    integer_literal          go to state 269
    character_literal        go to state 270
    floating_literal         go to state 271
    string_literal           go to state 272
    boolean_literal          go to state 273
    primary_expression       go to state 274
    id_expression            go to state 275
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 328
    postfix_expression       go to state 277
    unary_expression         go to state 278
    unary_operator           go to state 279
    new_expression           go to state 280
    delete_expression        go to state 281
    cast_expression          go to state 411
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 264

   67 unary_operator: '+' .

    $default  reduce using rule 67 (unary_operator)


state 265

   68 unary_operator: '-' .

    $default  reduce using rule 68 (unary_operator)


state 266

   69 unary_operator: '!' .

    $default  reduce using rule 69 (unary_operator)


state 267

  430 template_id: template_name . '<' template_argument_list '>'
  435 template_argument: template_name .

    '<'  shift, and go to state 174

    $default  reduce using rule 435 (template_argument)


state 268

   21 primary_expression: literal .

    $default  reduce using rule 21 (primary_expression)


state 269

    9 literal: integer_literal .

    $default  reduce using rule 9 (literal)


state 270

   10 literal: character_literal .

    $default  reduce using rule 10 (literal)


state 271

   11 literal: floating_literal .

    $default  reduce using rule 11 (literal)


state 272

   12 literal: string_literal .

    $default  reduce using rule 12 (literal)


state 273

   13 literal: boolean_literal .

    $default  reduce using rule 13 (literal)


state 274

   36 postfix_expression: primary_expression .

    $default  reduce using rule 36 (postfix_expression)


state 275

   24 primary_expression: id_expression .

    $default  reduce using rule 24 (primary_expression)


state 276

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  205 simple_type_specifier: nested_name_specifier . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 4
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 176
    '~'            shift, and go to state 43

    typedef_name            go to state 46
    class_name              go to state 178
    enum_name               go to state 50
    template_name           go to state 51
    identifier              go to state 52
    unqualified_id          go to state 179
    type_name               go to state 180
    conversion_function_id  go to state 90
    operator_function_id    go to state 91
    template_id             go to state 93


state 277

   37 postfix_expression: postfix_expression . '[' expression ']'
   38                   | postfix_expression . '(' expression_list_opt ')'
   39                   | postfix_expression . '.' TEMPLATE COLONCOLON id_expression
   40                   | postfix_expression . '.' TEMPLATE id_expression
   41                   | postfix_expression . '.' COLONCOLON id_expression
   42                   | postfix_expression . '.' id_expression
   43                   | postfix_expression . ARROW TEMPLATE COLONCOLON id_expression
   44                   | postfix_expression . ARROW TEMPLATE id_expression
   45                   | postfix_expression . ARROW COLONCOLON id_expression
   46                   | postfix_expression . ARROW id_expression
   47                   | postfix_expression . PLUSPLUS
   48                   | postfix_expression . MINUSMINUS
   57 unary_expression: postfix_expression .

    PLUSPLUS    shift, and go to state 412
    MINUSMINUS  shift, and go to state 413
    ARROW       shift, and go to state 414
    '('         shift, and go to state 415
    '['         shift, and go to state 416
    '.'         shift, and go to state 417

    $default  reduce using rule 57 (unary_expression)


state 278

   86 cast_expression: unary_expression .

    $default  reduce using rule 86 (cast_expression)


state 279

   62 unary_expression: unary_operator . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 268
    integer_literal          go to state 269
    character_literal        go to state 270
    floating_literal         go to state 271
    string_literal           go to state 272
    boolean_literal          go to state 273
    primary_expression       go to state 274
    id_expression            go to state 275
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 328
    postfix_expression       go to state 277
    unary_expression         go to state 278
    unary_operator           go to state 279
    new_expression           go to state 280
    delete_expression        go to state 281
    cast_expression          go to state 418
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 280

   65 unary_expression: new_expression .

    $default  reduce using rule 65 (unary_expression)


state 281

   66 unary_expression: delete_expression .

    $default  reduce using rule 66 (unary_expression)


state 282

   88 pm_expression: cast_expression .

    $default  reduce using rule 88 (pm_expression)


state 283

   89 pm_expression: pm_expression . DOTSTAR cast_expression
   90              | pm_expression . ARROWSTAR cast_expression
   91 multiplicative_expression: pm_expression .

    DOTSTAR    shift, and go to state 419
    ARROWSTAR  shift, and go to state 420

    $default  reduce using rule 91 (multiplicative_expression)


state 284

   92 multiplicative_expression: multiplicative_expression . '*' pm_expression
   93                          | multiplicative_expression . '/' pm_expression
   94                          | multiplicative_expression . '%' pm_expression
   95 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 421
    '/'  shift, and go to state 422
    '%'  shift, and go to state 423

    $default  reduce using rule 95 (additive_expression)


state 285

   96 additive_expression: additive_expression . '+' multiplicative_expression
   97                    | additive_expression . '-' multiplicative_expression
   98 shift_expression: additive_expression .

    '+'  shift, and go to state 424
    '-'  shift, and go to state 425

    $default  reduce using rule 98 (shift_expression)


state 286

   99 shift_expression: shift_expression . SL additive_expression
  100                 | shift_expression . SR additive_expression
  101 relational_expression: shift_expression .

    SL  shift, and go to state 426
    SR  shift, and go to state 427

    $default  reduce using rule 101 (relational_expression)


state 287

  102 relational_expression: relational_expression . '<' shift_expression
  103                      | relational_expression . '>' shift_expression
  104                      | relational_expression . LTEQ shift_expression
  105                      | relational_expression . GTEQ shift_expression
  106 equality_expression: relational_expression .

    LTEQ  shift, and go to state 428
    GTEQ  shift, and go to state 429
    '<'   shift, and go to state 430
    '>'   shift, and go to state 431

    '>'       [reduce using rule 106 (equality_expression)]
    $default  reduce using rule 106 (equality_expression)


state 288

  107 equality_expression: equality_expression . EQ relational_expression
  108                    | equality_expression . NOTEQ relational_expression
  109 and_expression: equality_expression .

    EQ     shift, and go to state 432
    NOTEQ  shift, and go to state 433

    $default  reduce using rule 109 (and_expression)


state 289

  110 and_expression: and_expression . '&' equality_expression
  111 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 434

    $default  reduce using rule 111 (exclusive_or_expression)


state 290

  112 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  113 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 435

    $default  reduce using rule 113 (inclusive_or_expression)


state 291

  114 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  115 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 436

    $default  reduce using rule 115 (logical_and_expression)


state 292

  116 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression
  117 logical_or_expression: logical_and_expression .

    ANDAND  shift, and go to state 437

    $default  reduce using rule 117 (logical_or_expression)


state 293

  118 logical_or_expression: logical_or_expression . OROR logical_and_expression
  119 conditional_expression: logical_or_expression .
  120                       | logical_or_expression . '?' expression ':' assignment_expression
  122 assignment_expression: logical_or_expression . assignment_operator assignment_expression

    ADDEQ  shift, and go to state 438
    SUBEQ  shift, and go to state 439
    MULEQ  shift, and go to state 440
    DIVEQ  shift, and go to state 441
    MODEQ  shift, and go to state 442
    XOREQ  shift, and go to state 443
    ANDEQ  shift, and go to state 444
    OREQ   shift, and go to state 445
    SREQ   shift, and go to state 446
    SLEQ   shift, and go to state 447
    OROR   shift, and go to state 448
    '?'    shift, and go to state 449
    '='    shift, and go to state 450

    $default  reduce using rule 119 (conditional_expression)

    assignment_operator  go to state 451


state 294

  121 assignment_expression: conditional_expression .

    $default  reduce using rule 121 (assignment_expression)


state 295

  433 template_argument: assignment_expression .

    $default  reduce using rule 433 (template_argument)


state 296

  434 template_argument: type_id .

    $default  reduce using rule 434 (template_argument)


state 297

  286 type_id: type_specifier_seq . abstract_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 223
    '('             shift, and go to state 452
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '('       [reduce using rule 480 (direct_abstract_declarator_opt)]
    '['       reduce using rule 480 (direct_abstract_declarator_opt)
    $default  reduce using rule 476 (abstract_declarator_opt)

    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 104
    template_name                   go to state 51
    nested_name_specifier           go to state 224
    ptr_operator                    go to state 453
    abstract_declarator             go to state 454
    direct_abstract_declarator      go to state 455
    template_id                     go to state 93
    abstract_declarator_opt         go to state 456
    direct_abstract_declarator_opt  go to state 457


state 298

  430 template_id: template_name '<' template_argument_list . '>'
  432 template_argument_list: template_argument_list . ',' template_argument

    '>'  shift, and go to state 458
    ','  shift, and go to state 459


state 299

  431 template_argument_list: template_argument .

    $default  reduce using rule 431 (template_argument_list)


state 300

  123 assignment_expression: throw_expression .

    $default  reduce using rule 123 (assignment_expression)


state 301

   32 qualified_id: nested_name_specifier TEMPLATE unqualified_id .

    $default  reduce using rule 32 (qualified_id)


state 302

  275 ptr_operator: nested_name_specifier '*' cv_qualifier_seq .

    $default  reduce using rule 275 (ptr_operator)


state 303

  260 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 166
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 54
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 167
    init_declarator          go to state 460
    declarator               go to state 461
    direct_declarator        go to state 82
    ptr_operator             go to state 83
    declarator_id            go to state 85
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 304

  182 simple_declaration: decl_specifier_seq init_declarator_list ';' .

    $default  reduce using rule 182 (simple_declaration)


state 305

  313 initializer: '(' . expression_list ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    expression_list            go to state 462
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 463
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 306

  312 initializer: '=' . initializer_clause

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266
    '{'               shift, and go to state 464

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 465
    initializer_clause         go to state 466
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 307

  473 initializer_opt: initializer .

    $default  reduce using rule 473 (initializer_opt)


state 308

  310 function_definition: decl_specifier_seq declarator function_try_block .

    $default  reduce using rule 310 (function_definition)


state 309

  261 init_declarator: declarator initializer_opt .

    $default  reduce using rule 261 (init_declarator)


state 310

  308 function_definition: decl_specifier_seq declarator ctor_initializer_opt . function_body

    '{'  shift, and go to state 319

    compound_statement  go to state 320
    function_body       go to state 467


state 311

  439 function_try_block: TRY ctor_initializer_opt . function_body handler_seq

    '{'  shift, and go to state 319

    compound_statement  go to state 320
    function_body       go to state 468


state 312

  371 mem_initializer_id: COLONCOLON . nested_name_specifier class_name
  372                   | COLONCOLON . class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 469
    template_name            go to state 51
    nested_name_specifier    go to state 470
    template_id              go to state 93


state 313

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier namespace_name COLONCOLON nested_name_specifier
   34                      | class_name . COLONCOLON
  374 mem_initializer_id: class_name .

    COLONCOLON  shift, and go to state 173

    $default  reduce using rule 374 (mem_initializer_id)


state 314

  375 mem_initializer_id: identifier .

    $default  reduce using rule 375 (mem_initializer_id)


state 315

  373 mem_initializer_id: nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 471
    template_name  go to state 51
    template_id    go to state 93


state 316

  367 ctor_initializer: ':' mem_initializer_list .

    $default  reduce using rule 367 (ctor_initializer)


state 317

  368 mem_initializer_list: mem_initializer .
  369                     | mem_initializer . ',' mem_initializer_list

    ','  shift, and go to state 472

    $default  reduce using rule 368 (mem_initializer_list)


state 318

  370 mem_initializer: mem_initializer_id . '(' expression_list_opt ')'

    '('  shift, and go to state 473


state 319

  150 compound_statement: '{' . statement_seq_opt '}'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 245
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 474
    CASE              shift, and go to state 475
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 248
    CONTINUE          shift, and go to state 476
    DEFAULT           shift, and go to state 477
    DELETE            shift, and go to state 249
    DO                shift, and go to state 478
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 250
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 182
    FALSE             shift, and go to state 251
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 479
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 480
    IF                shift, and go to state 481
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 482
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 253
    RETURN            shift, and go to state 483
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 254
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 255
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 484
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TRY               shift, and go to state 485
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 259
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 486
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266
    '{'               shift, and go to state 319

    '}'       reduce using rule 466 (statement_seq_opt)
    $default  reduce using rule 464 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 487
    literal                     go to state 268
    integer_literal             go to state 269
    character_literal           go to state 270
    floating_literal            go to state 271
    string_literal              go to state 272
    boolean_literal             go to state 273
    primary_expression          go to state 274
    id_expression               go to state 275
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 276
    postfix_expression          go to state 277
    unary_expression            go to state 278
    unary_operator              go to state 279
    new_expression              go to state 280
    delete_expression           go to state 281
    cast_expression             go to state 282
    pm_expression               go to state 283
    multiplicative_expression   go to state 284
    additive_expression         go to state 285
    shift_expression            go to state 286
    relational_expression       go to state 287
    equality_expression         go to state 288
    and_expression              go to state 289
    exclusive_or_expression     go to state 290
    inclusive_or_expression     go to state 291
    logical_and_expression      go to state 292
    logical_or_expression       go to state 293
    conditional_expression      go to state 294
    assignment_expression       go to state 407
    expression                  go to state 488
    statement                   go to state 489
    labeled_statement           go to state 490
    expression_statement        go to state 491
    compound_statement          go to state 492
    statement_seq               go to state 493
    selection_statement         go to state 494
    iteration_statement         go to state 495
    jump_statement              go to state 496
    declaration_statement       go to state 497
    block_declaration           go to state 498
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 499
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 500
    throw_expression            go to state 300
    expression_opt              go to state 501
    statement_seq_opt           go to state 502


state 320

  311 function_body: compound_statement .

    $default  reduce using rule 311 (function_body)


state 321

  307 function_definition: declarator ctor_initializer_opt function_body .

    $default  reduce using rule 307 (function_definition)


state 322

  298 parameter_declaration_clause: ELLIPSIS .

    $default  reduce using rule 298 (parameter_declaration_clause)


state 323

  190 decl_specifier_seq: decl_specifier_seq . decl_specifier
  303 parameter_declaration: decl_specifier_seq . declarator
  304                      | decl_specifier_seq . declarator '=' assignment_expression
  305                      | decl_specifier_seq . abstract_declarator_opt
  306                      | decl_specifier_seq . abstract_declarator_opt '=' assignment_expression

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 182
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 503
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '('       [reduce using rule 480 (direct_abstract_declarator_opt)]
    '['       reduce using rule 480 (direct_abstract_declarator_opt)
    $default  reduce using rule 476 (abstract_declarator_opt)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    decl_specifier                  go to state 184
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    declarator                      go to state 504
    direct_declarator               go to state 82
    ptr_operator                    go to state 505
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    abstract_declarator             go to state 454
    direct_abstract_declarator      go to state 455
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_id                     go to state 93
    abstract_declarator_opt         go to state 506
    direct_abstract_declarator_opt  go to state 457


state 324

  265 direct_declarator: direct_declarator '(' parameter_declaration_clause . ')' cv_qualifier_seq exception_specification
  266                  | direct_declarator '(' parameter_declaration_clause . ')' cv_qualifier_seq
  267                  | direct_declarator '(' parameter_declaration_clause . ')' exception_specification
  268                  | direct_declarator '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 507


state 325

  296 parameter_declaration_clause: parameter_declaration_list . ELLIPSIS
  297                             | parameter_declaration_list .
  300                             | parameter_declaration_list . ',' ELLIPSIS
  302 parameter_declaration_list: parameter_declaration_list . ',' parameter_declaration

    ELLIPSIS  shift, and go to state 508
    ','       shift, and go to state 509

    $default  reduce using rule 297 (parameter_declaration_clause)


state 326

  301 parameter_declaration_list: parameter_declaration .

    $default  reduce using rule 301 (parameter_declaration_list)


state 327

   72 new_expression: COLONCOLON . NEW new_placement_opt new_type_id new_initializer_opt
   74               | COLONCOLON . NEW new_placement_opt '(' type_id ')' new_initializer_opt
   83 delete_expression: COLONCOLON . DELETE cast_expression
   85                  | COLONCOLON . DELETE '[' ']' cast_expression

    DELETE  shift, and go to state 389
    NEW     shift, and go to state 390


state 328

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    TEMPLATE    shift, and go to state 176
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 179
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


state 329

  118 logical_or_expression: logical_or_expression . OROR logical_and_expression
  119 conditional_expression: logical_or_expression .
  120                       | logical_or_expression . '?' expression ':' assignment_expression

    OROR  shift, and go to state 448
    '?'   shift, and go to state 449

    $default  reduce using rule 119 (conditional_expression)


state 330

  137 constant_expression: conditional_expression .

    $default  reduce using rule 137 (constant_expression)


state 331

  475 constant_expression_opt: constant_expression .

    $default  reduce using rule 475 (constant_expression_opt)


state 332

  269 direct_declarator: direct_declarator '[' constant_expression_opt . ']'

    ']'  shift, and go to state 510


state 333

  361 access_specifier: PRIVATE .

    $default  reduce using rule 361 (access_specifier)


state 334

  362 access_specifier: PROTECTED .

    $default  reduce using rule 362 (access_specifier)


state 335

  363 access_specifier: PUBLIC .

    $default  reduce using rule 363 (access_specifier)


state 336

  247 using_declaration: USING . TYPENAME COLONCOLON nested_name_specifier unqualified_id ';'
  248                  | USING . TYPENAME nested_name_specifier unqualified_id ';'
  249                  | USING . COLONCOLON nested_name_specifier unqualified_id ';'
  250                  | USING . nested_name_specifier unqualified_id ';'
  251                  | USING . COLONCOLON unqualified_id ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 162
    TYPENAME        shift, and go to state 164

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    nested_name_specifier    go to state 165
    template_id              go to state 93


state 337

  332 member_declaration: ';' .

    $default  reduce using rule 332 (member_declaration)


state 338

   27 unqualified_id: identifier .
  343 member_declarator: identifier . ':' constant_expression

    ':'  shift, and go to state 511

    ':'       [reduce using rule 27 (unqualified_id)]
    $default  reduce using rule 27 (unqualified_id)


state 339

   26 id_expression: qualified_id .
  334 member_declaration: qualified_id . ';'

    ';'  shift, and go to state 512

    ';'       [reduce using rule 26 (id_expression)]
    $default  reduce using rule 26 (id_expression)


state 340

  190 decl_specifier_seq: decl_specifier_seq . decl_specifier
  308 function_definition: decl_specifier_seq . declarator ctor_initializer_opt function_body
  310                    | decl_specifier_seq . declarator function_try_block
  329 member_declaration: decl_specifier_seq . member_declarator_list ';'
  330                   | decl_specifier_seq . ';'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 182
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 513

    ';'       [reduce using rule 339 (member_declarator)]
    $default  reduce using rule 339 (member_declarator)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 338
    id_expression              go to state 54
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 57
    decl_specifier             go to state 184
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    declarator                 go to state 514
    direct_declarator          go to state 82
    ptr_operator               go to state 83
    cv_qualifier               go to state 84
    declarator_id              go to state 85
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    member_declarator_list     go to state 515
    member_declarator          go to state 347
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


state 341

  335 member_declaration: using_declaration .

    $default  reduce using rule 335 (member_declaration)


state 342

  307 function_definition: declarator . ctor_initializer_opt function_body
  309                    | declarator . function_try_block
  340 member_declarator: declarator .
  341                  | declarator . pure_specifier
  342                  | declarator . constant_initializer

    TRY  shift, and go to state 188
    ':'  shift, and go to state 189
    '='  shift, and go to state 516

    '{'       reduce using rule 482 (ctor_initializer_opt)
    $default  reduce using rule 340 (member_declarator)

    pure_specifier        go to state 517
    constant_initializer  go to state 518
    ctor_initializer      go to state 190
    function_try_block    go to state 191
    ctor_initializer_opt  go to state 192


state 343

  333 member_declaration: function_definition . SEMICOLON_opt

    ';'  shift, and go to state 519

    ';'       [reduce using rule 488 (SEMICOLON_opt)]
    $default  reduce using rule 488 (SEMICOLON_opt)

    SEMICOLON_opt  go to state 520


state 344

  487 member_specification_opt: member_specification .

    $default  reduce using rule 487 (member_specification_opt)


state 345

  327 member_specification: member_declaration . member_specification_opt

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 182
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    PRIVATE         shift, and go to state 333
    PROTECTED       shift, and go to state 334
    PUBLIC          shift, and go to state 335
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 336
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 337

    TEMPLATE  reduce using rule 492 (EXPORT_opt)
    ';'       [reduce using rule 339 (member_declarator)]
    '}'       reduce using rule 486 (member_specification_opt)
    $default  reduce using rule 339 (member_declarator)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 338
    id_expression              go to state 54
    unqualified_id             go to state 55
    qualified_id               go to state 339
    nested_name_specifier      go to state 57
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 340
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    using_declaration          go to state 341
    declarator                 go to state 342
    direct_declarator          go to state 82
    ptr_operator               go to state 83
    cv_qualifier               go to state 84
    declarator_id              go to state 85
    function_definition        go to state 343
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    member_specification       go to state 344
    member_declaration         go to state 345
    member_declarator_list     go to state 346
    member_declarator          go to state 347
    access_specifier           go to state 348
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_declaration       go to state 349
    template_id                go to state 93
    member_specification_opt   go to state 521
    EXPORT_opt                 go to state 97


state 346

  331 member_declaration: member_declarator_list . ';'
  338 member_declarator_list: member_declarator_list . ',' member_declarator

    ','  shift, and go to state 522
    ';'  shift, and go to state 523


state 347

  337 member_declarator_list: member_declarator .

    $default  reduce using rule 337 (member_declarator_list)


state 348

  328 member_specification: access_specifier . ':' member_specification_opt

    ':'  shift, and go to state 524


state 349

  336 member_declaration: template_declaration .

    $default  reduce using rule 336 (member_declaration)


state 350

  319 class_specifier: class_head '{' member_specification_opt . '}'

    '}'  shift, and go to state 525


state 351

  222 elaborated_type_specifier: class_key COLONCOLON identifier .

    $default  reduce using rule 222 (elaborated_type_specifier)


state 352

  221 elaborated_type_specifier: class_key COLONCOLON nested_name_specifier . identifier

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 526


state 353

  346 base_clause: ':' . base_specifier_list

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 527
    PRIVATE         shift, and go to state 333
    PROTECTED       shift, and go to state 334
    PUBLIC          shift, and go to state 335
    VIRTUAL         shift, and go to state 528

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 529
    template_name            go to state 51
    nested_name_specifier    go to state 530
    base_specifier_list      go to state 531
    base_specifier           go to state 532
    access_specifier         go to state 533
    template_id              go to state 93


state 354

  321 class_head: class_key identifier base_clause .

    $default  reduce using rule 321 (class_head)


state 355

  322 class_head: class_key nested_name_specifier identifier .
  323           | class_key nested_name_specifier identifier . base_clause

    ':'  shift, and go to state 353

    $default  reduce using rule 322 (class_head)

    base_clause  go to state 534


state 356

  419 template_declaration: EXPORT_opt TEMPLATE '<' . template_parameter_list '>' declaration

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 112
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 535
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 182
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 536
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 537
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 153
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 323
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    parameter_declaration      go to state 538
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_parameter_list    go to state 539
    template_parameter         go to state 540
    type_parameter             go to state 541
    template_id                go to state 93


state 357

  277 ptr_operator: COLONCOLON nested_name_specifier '*' cv_qualifier_seq .

    $default  reduce using rule 277 (ptr_operator)


state 358

  256 asm_definition: ASM '(' string_literal ')' . ';'

    ';'  shift, and go to state 542


state 359

  223 elaborated_type_specifier: ENUM COLONCOLON nested_name_specifier identifier .

    $default  reduce using rule 223 (elaborated_type_specifier)


state 360

  233 enumerator: identifier .

    $default  reduce using rule 233 (enumerator)


state 361

  230 enumerator_list: enumerator_list . ',' enumerator_definition
  471 enumerator_list_opt: enumerator_list .

    ','  shift, and go to state 543

    $default  reduce using rule 471 (enumerator_list_opt)


state 362

  229 enumerator_list: enumerator_definition .

    $default  reduce using rule 229 (enumerator_list)


state 363

  231 enumerator_definition: enumerator .
  232                      | enumerator . '=' constant_expression

    '='  shift, and go to state 544

    $default  reduce using rule 231 (enumerator_definition)


state 364

  228 enum_specifier: ENUM identifier '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 545


state 365

  257 linkage_specification: EXTERN string_literal '{' declaration_seq_opt . '}'

    '}'  shift, and go to state 546


state 366

  240 unnamed_namespace_definition: NAMESPACE '{' namespace_body '}' .

    $default  reduce using rule 240 (unnamed_namespace_definition)


state 367

  239 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body . '}'

    '}'  shift, and go to state 547


state 368

  243 qualified_namespace_specifier: COLONCOLON . nested_name_specifier namespace_name
  244                              | COLONCOLON . namespace_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 548
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    nested_name_specifier    go to state 549
    template_id              go to state 93


state 369

   35 nested_name_specifier: namespace_name . COLONCOLON
  246 qualified_namespace_specifier: namespace_name .

    COLONCOLON  shift, and go to state 172

    $default  reduce using rule 246 (qualified_namespace_specifier)


state 370

  245 qualified_namespace_specifier: nested_name_specifier . namespace_name

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 550
    original_namespace_name  go to state 48


state 371

  242 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier . ';'

    ';'  shift, and go to state 551


state 372

  238 original_namespace_definition: NAMESPACE identifier '{' namespace_body . '}'

    '}'  shift, and go to state 552


state 373

  380 operator: DELETE '[' ']' .

    $default  reduce using rule 380 (operator)


state 374

  379 operator: NEW '[' ']' .

    $default  reduce using rule 379 (operator)


state 375

  276 ptr_operator: COLONCOLON nested_name_specifier . '*'
  277             | COLONCOLON nested_name_specifier . '*' cv_qualifier_seq

    '*'  shift, and go to state 201


state 376

  366 conversion_declarator: ptr_operator conversion_declarator_opt .

    $default  reduce using rule 366 (conversion_declarator)


state 377

  437 explicit_specialization: TEMPLATE '<' '>' declaration .

    $default  reduce using rule 437 (explicit_specialization)


state 378

  226 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier .
  227                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier . '<' template_argument_list '>'

    '<'  shift, and go to state 553

    '<'       [reduce using rule 226 (elaborated_type_specifier)]
    $default  reduce using rule 226 (elaborated_type_specifier)


state 379

  251 using_declaration: USING COLONCOLON unqualified_id ';' .

    $default  reduce using rule 251 (using_declaration)


state 380

  249 using_declaration: USING COLONCOLON nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 554


state 381

   35 nested_name_specifier: namespace_name . COLONCOLON
  253 using_directive: USING NAMESPACE COLONCOLON namespace_name . ';'

    COLONCOLON  shift, and go to state 172
    ';'         shift, and go to state 555


state 382

  252 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 556
    original_namespace_name  go to state 48


state 383

  255 using_directive: USING NAMESPACE namespace_name ';' .

    $default  reduce using rule 255 (using_directive)


state 384

  254 using_directive: USING NAMESPACE nested_name_specifier namespace_name . ';'

    ';'  shift, and go to state 557


state 385

  247 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 558
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


state 386

  248 using_declaration: USING TYPENAME nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 559


state 387

  250 using_declaration: USING nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 250 (using_declaration)


state 388

   33 nested_name_specifier: class_name COLONCOLON nested_name_specifier namespace_name . COLONCOLON nested_name_specifier

    COLONCOLON  shift, and go to state 560


state 389

   83 delete_expression: COLONCOLON DELETE . cast_expression
   85                  | COLONCOLON DELETE . '[' ']' cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '['               shift, and go to state 561
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 268
    integer_literal          go to state 269
    character_literal        go to state 270
    floating_literal         go to state 271
    string_literal           go to state 272
    boolean_literal          go to state 273
    primary_expression       go to state 274
    id_expression            go to state 275
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 328
    postfix_expression       go to state 277
    unary_expression         go to state 278
    unary_operator           go to state 279
    new_expression           go to state 280
    delete_expression        go to state 281
    cast_expression          go to state 562
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 390

   72 new_expression: COLONCOLON NEW . new_placement_opt new_type_id new_initializer_opt
   74               | COLONCOLON NEW . new_placement_opt '(' type_id ')' new_initializer_opt

    '('  shift, and go to state 397

    '('       [reduce using rule 458 (new_placement_opt)]
    $default  reduce using rule 458 (new_placement_opt)

    new_placement      go to state 398
    new_placement_opt  go to state 563


state 391

   58 unary_expression: PLUSPLUS cast_expression .

    $default  reduce using rule 58 (unary_expression)


state 392

   59 unary_expression: MINUSMINUS cast_expression .

    $default  reduce using rule 59 (unary_expression)


state 393

   52 postfix_expression: CONST_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 112
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 153
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 564
    type_specifier_seq         go to state 297
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


state 394

   84 delete_expression: DELETE '[' . ']' cast_expression

    ']'  shift, and go to state 565


state 395

   82 delete_expression: DELETE cast_expression .

    $default  reduce using rule 82 (delete_expression)


state 396

   49 postfix_expression: DYNAMIC_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 112
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 153
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 566
    type_specifier_seq         go to state 297
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


state 397

   75 new_placement: '(' . expression_list ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    expression_list            go to state 567
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 463
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 398

  459 new_placement_opt: new_placement .

    $default  reduce using rule 459 (new_placement_opt)


state 399

   71 new_expression: NEW new_placement_opt . new_type_id new_initializer_opt
   73               | NEW new_placement_opt . '(' type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 112
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 568

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 153
    new_type_id                go to state 569
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 570
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


state 400

   51 postfix_expression: REINTERPRET_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 112
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 153
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 571
    type_specifier_seq         go to state 297
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


state 401

   23 primary_expression: '(' . expression ')'
   64 unary_expression: SIZEOF '(' . type_id ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 245
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 250
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 251
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 276
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 407
    expression                 go to state 408
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 572
    type_specifier_seq         go to state 297
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 402

   63 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 63 (unary_expression)


state 403

   50 postfix_expression: STATIC_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 112
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 153
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 573
    type_specifier_seq         go to state 297
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


state 404

  497 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 497 (assignment_expression_opt)


state 405

  446 throw_expression: THROW assignment_expression_opt .

    $default  reduce using rule 446 (throw_expression)


state 406

   53 postfix_expression: TYPEID '(' . expression ')'
   54                   | TYPEID '(' . type_id ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 245
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 250
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 251
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 276
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 407
    expression                 go to state 574
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 575
    type_specifier_seq         go to state 297
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 407

  135 expression: assignment_expression .

    $default  reduce using rule 135 (expression)


state 408

   23 primary_expression: '(' expression . ')'
  136 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 576
    ','  shift, and go to state 577


state 409

   87 cast_expression: '(' type_id . ')' cast_expression

    ')'  shift, and go to state 578


state 410

   60 unary_expression: '*' cast_expression .

    $default  reduce using rule 60 (unary_expression)


state 411

   61 unary_expression: '&' cast_expression .

    $default  reduce using rule 61 (unary_expression)


state 412

   47 postfix_expression: postfix_expression PLUSPLUS .

    $default  reduce using rule 47 (postfix_expression)


state 413

   48 postfix_expression: postfix_expression MINUSMINUS .

    $default  reduce using rule 48 (postfix_expression)


state 414

   43 postfix_expression: postfix_expression ARROW . TEMPLATE COLONCOLON id_expression
   44                   | postfix_expression ARROW . TEMPLATE id_expression
   45                   | postfix_expression ARROW . COLONCOLON id_expression
   46                   | postfix_expression ARROW . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 579
    OPERATOR        shift, and go to state 26
    TEMPLATE        shift, and go to state 580
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 581
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 328
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 415

   38 postfix_expression: postfix_expression '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    $default  reduce using rule 454 (expression_list_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    expression_list            go to state 582
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 463
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300
    expression_list_opt        go to state 583


state 416

   37 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 407
    expression                 go to state 584
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 417

   39 postfix_expression: postfix_expression '.' . TEMPLATE COLONCOLON id_expression
   40                   | postfix_expression '.' . TEMPLATE id_expression
   41                   | postfix_expression '.' . COLONCOLON id_expression
   42                   | postfix_expression '.' . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 585
    OPERATOR        shift, and go to state 26
    TEMPLATE        shift, and go to state 586
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 587
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 328
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 418

   62 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 62 (unary_expression)


state 419

   89 pm_expression: pm_expression DOTSTAR . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 268
    integer_literal          go to state 269
    character_literal        go to state 270
    floating_literal         go to state 271
    string_literal           go to state 272
    boolean_literal          go to state 273
    primary_expression       go to state 274
    id_expression            go to state 275
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 328
    postfix_expression       go to state 277
    unary_expression         go to state 278
    unary_operator           go to state 279
    new_expression           go to state 280
    delete_expression        go to state 281
    cast_expression          go to state 588
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 420

   90 pm_expression: pm_expression ARROWSTAR . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 268
    integer_literal          go to state 269
    character_literal        go to state 270
    floating_literal         go to state 271
    string_literal           go to state 272
    boolean_literal          go to state 273
    primary_expression       go to state 274
    id_expression            go to state 275
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 328
    postfix_expression       go to state 277
    unary_expression         go to state 278
    unary_operator           go to state 279
    new_expression           go to state 280
    delete_expression        go to state 281
    cast_expression          go to state 589
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 421

   92 multiplicative_expression: multiplicative_expression '*' . pm_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 268
    integer_literal          go to state 269
    character_literal        go to state 270
    floating_literal         go to state 271
    string_literal           go to state 272
    boolean_literal          go to state 273
    primary_expression       go to state 274
    id_expression            go to state 275
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 328
    postfix_expression       go to state 277
    unary_expression         go to state 278
    unary_operator           go to state 279
    new_expression           go to state 280
    delete_expression        go to state 281
    cast_expression          go to state 282
    pm_expression            go to state 590
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 422

   93 multiplicative_expression: multiplicative_expression '/' . pm_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 268
    integer_literal          go to state 269
    character_literal        go to state 270
    floating_literal         go to state 271
    string_literal           go to state 272
    boolean_literal          go to state 273
    primary_expression       go to state 274
    id_expression            go to state 275
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 328
    postfix_expression       go to state 277
    unary_expression         go to state 278
    unary_operator           go to state 279
    new_expression           go to state 280
    delete_expression        go to state 281
    cast_expression          go to state 282
    pm_expression            go to state 591
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 423

   94 multiplicative_expression: multiplicative_expression '%' . pm_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 268
    integer_literal          go to state 269
    character_literal        go to state 270
    floating_literal         go to state 271
    string_literal           go to state 272
    boolean_literal          go to state 273
    primary_expression       go to state 274
    id_expression            go to state 275
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 328
    postfix_expression       go to state 277
    unary_expression         go to state 278
    unary_operator           go to state 279
    new_expression           go to state 280
    delete_expression        go to state 281
    cast_expression          go to state 282
    pm_expression            go to state 592
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 424

   96 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 593
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


state 425

   97 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 594
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


state 426

   99 shift_expression: shift_expression SL . additive_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 595
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


state 427

  100 shift_expression: shift_expression SR . additive_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 596
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


state 428

  104 relational_expression: relational_expression LTEQ . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 597
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


state 429

  105 relational_expression: relational_expression GTEQ . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 598
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


state 430

  102 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 599
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


state 431

  103 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 600
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


state 432

  107 equality_expression: equality_expression EQ . relational_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 601
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


state 433

  108 equality_expression: equality_expression NOTEQ . relational_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 602
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


state 434

  110 and_expression: and_expression '&' . equality_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 603
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


state 435

  112 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 604
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


state 436

  114 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 605
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


state 437

  116 logical_and_expression: logical_and_expression ANDAND . inclusive_or_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 606
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


state 438

  128 assignment_operator: ADDEQ .

    $default  reduce using rule 128 (assignment_operator)


state 439

  129 assignment_operator: SUBEQ .

    $default  reduce using rule 129 (assignment_operator)


state 440

  125 assignment_operator: MULEQ .

    $default  reduce using rule 125 (assignment_operator)


state 441

  126 assignment_operator: DIVEQ .

    $default  reduce using rule 126 (assignment_operator)


state 442

  127 assignment_operator: MODEQ .

    $default  reduce using rule 127 (assignment_operator)


state 443

  133 assignment_operator: XOREQ .

    $default  reduce using rule 133 (assignment_operator)


state 444

  132 assignment_operator: ANDEQ .

    $default  reduce using rule 132 (assignment_operator)


state 445

  134 assignment_operator: OREQ .

    $default  reduce using rule 134 (assignment_operator)


state 446

  130 assignment_operator: SREQ .

    $default  reduce using rule 130 (assignment_operator)


state 447

  131 assignment_operator: SLEQ .

    $default  reduce using rule 131 (assignment_operator)


state 448

  118 logical_or_expression: logical_or_expression OROR . logical_and_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 607
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


state 449

  120 conditional_expression: logical_or_expression '?' . expression ':' assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 407
    expression                 go to state 608
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 450

  124 assignment_operator: '=' .

    $default  reduce using rule 124 (assignment_operator)


state 451

  122 assignment_expression: logical_or_expression assignment_operator . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 609
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 452

  295 direct_abstract_declarator: '(' . abstract_declarator ')'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 223
    '('             shift, and go to state 452
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '('       [reduce using rule 480 (direct_abstract_declarator_opt)]
    $default  reduce using rule 480 (direct_abstract_declarator_opt)

    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 104
    template_name                   go to state 51
    nested_name_specifier           go to state 224
    ptr_operator                    go to state 453
    abstract_declarator             go to state 610
    direct_abstract_declarator      go to state 455
    template_id                     go to state 93
    direct_abstract_declarator_opt  go to state 457


state 453

  288 abstract_declarator: ptr_operator . abstract_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 223
    '('             shift, and go to state 452
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '('       [reduce using rule 480 (direct_abstract_declarator_opt)]
    '['       reduce using rule 480 (direct_abstract_declarator_opt)
    $default  reduce using rule 476 (abstract_declarator_opt)

    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 104
    template_name                   go to state 51
    nested_name_specifier           go to state 224
    ptr_operator                    go to state 453
    abstract_declarator             go to state 454
    direct_abstract_declarator      go to state 455
    template_id                     go to state 93
    abstract_declarator_opt         go to state 611
    direct_abstract_declarator_opt  go to state 457


state 454

  477 abstract_declarator_opt: abstract_declarator .

    $default  reduce using rule 477 (abstract_declarator_opt)


state 455

  289 abstract_declarator: direct_abstract_declarator .
  481 direct_abstract_declarator_opt: direct_abstract_declarator .

    '('       reduce using rule 481 (direct_abstract_declarator_opt)
    '['       reduce using rule 481 (direct_abstract_declarator_opt)
    $default  reduce using rule 289 (abstract_declarator)


state 456

  286 type_id: type_specifier_seq abstract_declarator_opt .

    $default  reduce using rule 286 (type_id)


state 457

  290 direct_abstract_declarator: direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  291                           | direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' cv_qualifier_seq
  292                           | direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' exception_specification
  293                           | direct_abstract_declarator_opt . '(' parameter_declaration_clause ')'
  294                           | direct_abstract_declarator_opt . '[' constant_expression_opt ']'

    '('  shift, and go to state 612
    '['  shift, and go to state 613


state 458

  430 template_id: template_name '<' template_argument_list '>' .

    $default  reduce using rule 430 (template_id)


state 459

  432 template_argument_list: template_argument_list ',' . template_argument

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 245
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 250
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 251
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 267
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 276
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 295
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 296
    type_specifier_seq         go to state 297
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    template_argument          go to state 614
    throw_expression           go to state 300


state 460

  260 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 260 (init_declarator_list)


state 461

  261 init_declarator: declarator . initializer_opt

    '('  shift, and go to state 305
    '='  shift, and go to state 306

    $default  reduce using rule 472 (initializer_opt)

    initializer      go to state 307
    initializer_opt  go to state 309


state 462

   56 expression_list: expression_list . ',' assignment_expression
  313 initializer: '(' expression_list . ')'

    ')'  shift, and go to state 615
    ','  shift, and go to state 616


state 463

   55 expression_list: assignment_expression .

    $default  reduce using rule 55 (expression_list)


state 464

  315 initializer_clause: '{' . initializer_list COMMA_opt '}'
  316                   | '{' . '}'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266
    '{'               shift, and go to state 464
    '}'               shift, and go to state 617

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 465
    initializer_clause         go to state 618
    initializer_list           go to state 619
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 465

  314 initializer_clause: assignment_expression .

    $default  reduce using rule 314 (initializer_clause)


state 466

  312 initializer: '=' initializer_clause .

    $default  reduce using rule 312 (initializer)


state 467

  308 function_definition: decl_specifier_seq declarator ctor_initializer_opt function_body .

    $default  reduce using rule 308 (function_definition)


state 468

  439 function_try_block: TRY ctor_initializer_opt function_body . handler_seq

    CATCH  shift, and go to state 620

    handler_seq  go to state 621
    handler      go to state 622


state 469

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier namespace_name COLONCOLON nested_name_specifier
   34                      | class_name . COLONCOLON
  372 mem_initializer_id: COLONCOLON class_name .

    COLONCOLON  shift, and go to state 173

    $default  reduce using rule 372 (mem_initializer_id)


state 470

  371 mem_initializer_id: COLONCOLON nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 623
    template_name  go to state 51
    template_id    go to state 93


state 471

  373 mem_initializer_id: nested_name_specifier class_name .

    $default  reduce using rule 373 (mem_initializer_id)


state 472

  369 mem_initializer_list: mem_initializer ',' . mem_initializer_list

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 312

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 313
    template_name            go to state 51
    identifier               go to state 314
    nested_name_specifier    go to state 315
    mem_initializer_list     go to state 624
    mem_initializer          go to state 317
    mem_initializer_id       go to state 318
    template_id              go to state 93


state 473

  370 mem_initializer: mem_initializer_id '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    $default  reduce using rule 454 (expression_list_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    expression_list            go to state 582
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 463
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300
    expression_list_opt        go to state 625


state 474

  163 jump_statement: BREAK . ';'

    ';'  shift, and go to state 626


state 475

  147 labeled_statement: CASE . constant_expression ':' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 329
    conditional_expression     go to state 330
    constant_expression        go to state 627
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


state 476

  164 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 628


state 477

  148 labeled_statement: DEFAULT . ':' statement

    ':'  shift, and go to state 629


state 478

  159 iteration_statement: DO . statement WHILE '(' expression ')' ';'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 245
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 474
    CASE              shift, and go to state 475
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 248
    CONTINUE          shift, and go to state 476
    DEFAULT           shift, and go to state 477
    DELETE            shift, and go to state 249
    DO                shift, and go to state 478
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 250
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 182
    FALSE             shift, and go to state 251
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 479
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 480
    IF                shift, and go to state 481
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 482
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 253
    RETURN            shift, and go to state 483
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 254
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 255
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 484
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TRY               shift, and go to state 485
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 259
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 486
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266
    '{'               shift, and go to state 319

    $default  reduce using rule 464 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 487
    literal                     go to state 268
    integer_literal             go to state 269
    character_literal           go to state 270
    floating_literal            go to state 271
    string_literal              go to state 272
    boolean_literal             go to state 273
    primary_expression          go to state 274
    id_expression               go to state 275
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 276
    postfix_expression          go to state 277
    unary_expression            go to state 278
    unary_operator              go to state 279
    new_expression              go to state 280
    delete_expression           go to state 281
    cast_expression             go to state 282
    pm_expression               go to state 283
    multiplicative_expression   go to state 284
    additive_expression         go to state 285
    shift_expression            go to state 286
    relational_expression       go to state 287
    equality_expression         go to state 288
    and_expression              go to state 289
    exclusive_or_expression     go to state 290
    inclusive_or_expression     go to state 291
    logical_and_expression      go to state 292
    logical_or_expression       go to state 293
    conditional_expression      go to state 294
    assignment_expression       go to state 407
    expression                  go to state 488
    statement                   go to state 630
    labeled_statement           go to state 490
    expression_statement        go to state 491
    compound_statement          go to state 492
    selection_statement         go to state 494
    iteration_statement         go to state 495
    jump_statement              go to state 496
    declaration_statement       go to state 497
    block_declaration           go to state 498
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 499
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 500
    throw_expression            go to state 300
    expression_opt              go to state 501


state 479

  160 iteration_statement: FOR . '(' for_init_statement condition_opt ';' expression_opt ')' statement

    '('  shift, and go to state 631


state 480

  166 jump_statement: GOTO . identifier ';'

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 632


state 481

  153 selection_statement: IF . '(' condition ')' statement
  154                    | IF . '(' condition ')' statement ELSE statement

    '('  shift, and go to state 633


state 482

  242 namespace_alias_definition: NAMESPACE . identifier '=' qualified_namespace_specifier ';'

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 634


state 483

  165 jump_statement: RETURN . expression_opt ';'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    $default  reduce using rule 464 (expression_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 407
    expression                 go to state 488
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300
    expression_opt             go to state 635


state 484

  155 selection_statement: SWITCH . '(' condition ')' statement

    '('  shift, and go to state 636


state 485

  438 try_block: TRY . compound_statement handler_seq

    '{'  shift, and go to state 319

    compound_statement  go to state 637


state 486

  158 iteration_statement: WHILE . '(' condition ')' statement

    '('  shift, and go to state 638


state 487

   27 unqualified_id: identifier .
  146 labeled_statement: identifier . ':' statement

    ':'  shift, and go to state 639

    $default  reduce using rule 27 (unqualified_id)


state 488

  136 expression: expression . ',' assignment_expression
  465 expression_opt: expression .

    ','  shift, and go to state 577

    $default  reduce using rule 465 (expression_opt)


state 489

  151 statement_seq: statement .

    $default  reduce using rule 151 (statement_seq)


state 490

  138 statement: labeled_statement .

    $default  reduce using rule 138 (statement)


state 491

  139 statement: expression_statement .

    $default  reduce using rule 139 (statement)


state 492

  140 statement: compound_statement .

    $default  reduce using rule 140 (statement)


state 493

  152 statement_seq: statement_seq . statement
  467 statement_seq_opt: statement_seq .

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 245
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 474
    CASE              shift, and go to state 475
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 248
    CONTINUE          shift, and go to state 476
    DEFAULT           shift, and go to state 477
    DELETE            shift, and go to state 249
    DO                shift, and go to state 478
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 250
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 182
    FALSE             shift, and go to state 251
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 479
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 480
    IF                shift, and go to state 481
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 482
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 253
    RETURN            shift, and go to state 483
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 254
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 255
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 484
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TRY               shift, and go to state 485
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 259
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 486
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266
    '{'               shift, and go to state 319

    '}'       reduce using rule 467 (statement_seq_opt)
    $default  reduce using rule 464 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 487
    literal                     go to state 268
    integer_literal             go to state 269
    character_literal           go to state 270
    floating_literal            go to state 271
    string_literal              go to state 272
    boolean_literal             go to state 273
    primary_expression          go to state 274
    id_expression               go to state 275
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 276
    postfix_expression          go to state 277
    unary_expression            go to state 278
    unary_operator              go to state 279
    new_expression              go to state 280
    delete_expression           go to state 281
    cast_expression             go to state 282
    pm_expression               go to state 283
    multiplicative_expression   go to state 284
    additive_expression         go to state 285
    shift_expression            go to state 286
    relational_expression       go to state 287
    equality_expression         go to state 288
    and_expression              go to state 289
    exclusive_or_expression     go to state 290
    inclusive_or_expression     go to state 291
    logical_and_expression      go to state 292
    logical_or_expression       go to state 293
    conditional_expression      go to state 294
    assignment_expression       go to state 407
    expression                  go to state 488
    statement                   go to state 640
    labeled_statement           go to state 490
    expression_statement        go to state 491
    compound_statement          go to state 492
    selection_statement         go to state 494
    iteration_statement         go to state 495
    jump_statement              go to state 496
    declaration_statement       go to state 497
    block_declaration           go to state 498
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 499
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 500
    throw_expression            go to state 300
    expression_opt              go to state 501


state 494

  141 statement: selection_statement .

    $default  reduce using rule 141 (statement)


state 495

  142 statement: iteration_statement .

    $default  reduce using rule 142 (statement)


state 496

  143 statement: jump_statement .

    $default  reduce using rule 143 (statement)


state 497

  144 statement: declaration_statement .

    $default  reduce using rule 144 (statement)


state 498

  167 declaration_statement: block_declaration .

    $default  reduce using rule 167 (declaration_statement)


state 499

  182 simple_declaration: decl_specifier_seq . init_declarator_list ';'
  183                   | decl_specifier_seq . ';'
  190 decl_specifier_seq: decl_specifier_seq . decl_specifier

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 182
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 183

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    id_expression              go to state 54
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 57
    decl_specifier             go to state 184
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    init_declarator_list       go to state 185
    init_declarator            go to state 186
    declarator                 go to state 461
    direct_declarator          go to state 82
    ptr_operator               go to state 83
    cv_qualifier               go to state 84
    declarator_id              go to state 85
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


state 500

  145 statement: try_block .

    $default  reduce using rule 145 (statement)


state 501

  149 expression_statement: expression_opt . ';'

    ';'  shift, and go to state 641


state 502

  150 compound_statement: '{' statement_seq_opt . '}'

    '}'  shift, and go to state 642


state 503

  270 direct_declarator: '(' . declarator ')'
  295 direct_abstract_declarator: '(' . abstract_declarator ')'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 166
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 503
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '('       [reduce using rule 480 (direct_abstract_declarator_opt)]
    $default  reduce using rule 480 (direct_abstract_declarator_opt)

    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 104
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 167
    declarator                      go to state 168
    direct_declarator               go to state 82
    ptr_operator                    go to state 505
    declarator_id                   go to state 85
    abstract_declarator             go to state 610
    direct_abstract_declarator      go to state 455
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_id                     go to state 93
    direct_abstract_declarator_opt  go to state 457


state 504

  303 parameter_declaration: decl_specifier_seq declarator .
  304                      | decl_specifier_seq declarator . '=' assignment_expression

    '='  shift, and go to state 643

    $default  reduce using rule 303 (parameter_declaration)


state 505

  263 declarator: ptr_operator . declarator
  288 abstract_declarator: ptr_operator . abstract_declarator_opt

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 166
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 503
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '('       [reduce using rule 480 (direct_abstract_declarator_opt)]
    '['       reduce using rule 480 (direct_abstract_declarator_opt)
    $default  reduce using rule 476 (abstract_declarator_opt)

    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 104
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 167
    declarator                      go to state 195
    direct_declarator               go to state 82
    ptr_operator                    go to state 505
    declarator_id                   go to state 85
    abstract_declarator             go to state 454
    direct_abstract_declarator      go to state 455
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_id                     go to state 93
    abstract_declarator_opt         go to state 611
    direct_abstract_declarator_opt  go to state 457


state 506

  305 parameter_declaration: decl_specifier_seq abstract_declarator_opt .
  306                      | decl_specifier_seq abstract_declarator_opt . '=' assignment_expression

    '='  shift, and go to state 644

    $default  reduce using rule 305 (parameter_declaration)


state 507

  265 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' . cv_qualifier_seq exception_specification
  266                  | direct_declarator '(' parameter_declaration_clause ')' . cv_qualifier_seq
  267                  | direct_declarator '(' parameter_declaration_clause ')' . exception_specification
  268                  | direct_declarator '(' parameter_declaration_clause ')' .

    CONST     shift, and go to state 13
    THROW     shift, and go to state 645
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 268 (direct_declarator)

    cv_qualifier_seq         go to state 646
    cv_qualifier             go to state 171
    exception_specification  go to state 647


state 508

  296 parameter_declaration_clause: parameter_declaration_list ELLIPSIS .

    $default  reduce using rule 296 (parameter_declaration_clause)


state 509

  300 parameter_declaration_clause: parameter_declaration_list ',' . ELLIPSIS
  302 parameter_declaration_list: parameter_declaration_list ',' . parameter_declaration

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 648
    COLONCOLON      shift, and go to state 112
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 182
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 153
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 323
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    parameter_declaration      go to state 649
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


state 510

  269 direct_declarator: direct_declarator '[' constant_expression_opt ']' .

    $default  reduce using rule 269 (direct_declarator)


state 511

  343 member_declarator: identifier ':' . constant_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 329
    conditional_expression     go to state 330
    constant_expression        go to state 650
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


state 512

  334 member_declaration: qualified_id ';' .

    $default  reduce using rule 334 (member_declaration)


state 513

  330 member_declaration: decl_specifier_seq ';' .

    $default  reduce using rule 330 (member_declaration)


state 514

  308 function_definition: decl_specifier_seq declarator . ctor_initializer_opt function_body
  310                    | decl_specifier_seq declarator . function_try_block
  340 member_declarator: declarator .
  341                  | declarator . pure_specifier
  342                  | declarator . constant_initializer

    TRY  shift, and go to state 188
    ':'  shift, and go to state 189
    '='  shift, and go to state 516

    '{'       reduce using rule 482 (ctor_initializer_opt)
    $default  reduce using rule 340 (member_declarator)

    pure_specifier        go to state 517
    constant_initializer  go to state 518
    ctor_initializer      go to state 190
    function_try_block    go to state 308
    ctor_initializer_opt  go to state 310


state 515

  329 member_declaration: decl_specifier_seq member_declarator_list . ';'
  338 member_declarator_list: member_declarator_list . ',' member_declarator

    ','  shift, and go to state 522
    ';'  shift, and go to state 651


state 516

  344 pure_specifier: '=' . '0'
  345 constant_initializer: '=' . constant_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266
    '0'               shift, and go to state 652

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 329
    conditional_expression     go to state 330
    constant_expression        go to state 653
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


state 517

  341 member_declarator: declarator pure_specifier .

    $default  reduce using rule 341 (member_declarator)


state 518

  342 member_declarator: declarator constant_initializer .

    $default  reduce using rule 342 (member_declarator)


state 519

  489 SEMICOLON_opt: ';' .

    $default  reduce using rule 489 (SEMICOLON_opt)


state 520

  333 member_declaration: function_definition SEMICOLON_opt .

    $default  reduce using rule 333 (member_declaration)


state 521

  327 member_specification: member_declaration member_specification_opt .

    $default  reduce using rule 327 (member_specification)


state 522

  338 member_declarator_list: member_declarator_list ',' . member_declarator

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 166
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    $default  reduce using rule 339 (member_declarator)

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 338
    id_expression            go to state 54
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 167
    declarator               go to state 654
    direct_declarator        go to state 82
    ptr_operator             go to state 83
    declarator_id            go to state 85
    member_declarator        go to state 655
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 523

  331 member_declaration: member_declarator_list ';' .

    $default  reduce using rule 331 (member_declaration)


state 524

  328 member_specification: access_specifier ':' . member_specification_opt

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 182
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    PRIVATE         shift, and go to state 333
    PROTECTED       shift, and go to state 334
    PUBLIC          shift, and go to state 335
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 336
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 337

    TEMPLATE  reduce using rule 492 (EXPORT_opt)
    ';'       [reduce using rule 339 (member_declarator)]
    '}'       reduce using rule 486 (member_specification_opt)
    $default  reduce using rule 339 (member_declarator)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 338
    id_expression              go to state 54
    unqualified_id             go to state 55
    qualified_id               go to state 339
    nested_name_specifier      go to state 57
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 340
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    using_declaration          go to state 341
    declarator                 go to state 342
    direct_declarator          go to state 82
    ptr_operator               go to state 83
    cv_qualifier               go to state 84
    declarator_id              go to state 85
    function_definition        go to state 343
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    member_specification       go to state 344
    member_declaration         go to state 345
    member_declarator_list     go to state 346
    member_declarator          go to state 347
    access_specifier           go to state 348
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_declaration       go to state 349
    template_id                go to state 93
    member_specification_opt   go to state 656
    EXPORT_opt                 go to state 97


state 525

  319 class_specifier: class_head '{' member_specification_opt '}' .

    $default  reduce using rule 319 (class_specifier)


state 526

  221 elaborated_type_specifier: class_key COLONCOLON nested_name_specifier identifier .

    $default  reduce using rule 221 (elaborated_type_specifier)


state 527

  349 base_specifier: COLONCOLON . nested_name_specifier class_name
  350               | COLONCOLON . class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 657
    template_name            go to state 51
    nested_name_specifier    go to state 658
    template_id              go to state 93


state 528

  353 base_specifier: VIRTUAL . access_specifier COLONCOLON nested_name_specifier_opt class_name
  354               | VIRTUAL . access_specifier nested_name_specifier_opt class_name
  355               | VIRTUAL . COLONCOLON nested_name_specifier_opt class_name
  356               | VIRTUAL . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 659
    PRIVATE         shift, and go to state 333
    PROTECTED       shift, and go to state 334
    PUBLIC          shift, and go to state 335

    CLASS_NAME     [reduce using rule 452 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 452 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    nested_name_specifier      go to state 216
    access_specifier           go to state 660
    template_id                go to state 93
    nested_name_specifier_opt  go to state 661


state 529

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier namespace_name COLONCOLON nested_name_specifier
   34                      | class_name . COLONCOLON
  352 base_specifier: class_name .

    COLONCOLON  shift, and go to state 173

    $default  reduce using rule 352 (base_specifier)


state 530

  351 base_specifier: nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 662
    template_name  go to state 51
    template_id    go to state 93


state 531

  346 base_clause: ':' base_specifier_list .
  348 base_specifier_list: base_specifier_list . ',' base_specifier

    ','  shift, and go to state 663

    $default  reduce using rule 346 (base_clause)


state 532

  347 base_specifier_list: base_specifier .

    $default  reduce using rule 347 (base_specifier_list)


state 533

  357 base_specifier: access_specifier . VIRTUAL COLONCOLON nested_name_specifier_opt class_name
  358               | access_specifier . VIRTUAL nested_name_specifier_opt class_name
  359               | access_specifier . COLONCOLON nested_name_specifier_opt class_name
  360               | access_specifier . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 664
    VIRTUAL         shift, and go to state 665

    CLASS_NAME     [reduce using rule 452 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 452 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    nested_name_specifier      go to state 216
    template_id                go to state 93
    nested_name_specifier_opt  go to state 666


state 534

  323 class_head: class_key nested_name_specifier identifier base_clause .

    $default  reduce using rule 323 (class_head)


state 535

  324 class_key: CLASS .
  424 type_parameter: CLASS . identifier
  425               | CLASS . identifier '=' type_id

    IDENTIFIER  shift, and go to state 1

    IDENTIFIER  [reduce using rule 324 (class_key)]
    $default    reduce using rule 324 (class_key)

    identifier  go to state 667


state 536

  428 type_parameter: TEMPLATE . '<' template_parameter_list '>' CLASS identifier
  429               | TEMPLATE . '<' template_parameter_list '>' CLASS identifier '=' template_name

    '<'  shift, and go to state 668


state 537

  226 elaborated_type_specifier: TYPENAME . COLONCOLON_opt nested_name_specifier identifier
  227                          | TYPENAME . COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'
  426 type_parameter: TYPENAME . identifier
  427               | TYPENAME . identifier '=' type_id

    IDENTIFIER  shift, and go to state 1
    COLONCOLON  shift, and go to state 160

    $default  reduce using rule 456 (COLONCOLON_opt)

    identifier      go to state 669
    COLONCOLON_opt  go to state 161


state 538

  423 template_parameter: parameter_declaration .

    $default  reduce using rule 423 (template_parameter)


state 539

  419 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list . '>' declaration
  421 template_parameter_list: template_parameter_list . ',' template_parameter

    '>'  shift, and go to state 670
    ','  shift, and go to state 671


state 540

  420 template_parameter_list: template_parameter .

    $default  reduce using rule 420 (template_parameter_list)


state 541

  422 template_parameter: type_parameter .

    $default  reduce using rule 422 (template_parameter)


state 542

  256 asm_definition: ASM '(' string_literal ')' ';' .

    $default  reduce using rule 256 (asm_definition)


state 543

  230 enumerator_list: enumerator_list ',' . enumerator_definition

    IDENTIFIER  shift, and go to state 1

    identifier             go to state 360
    enumerator_definition  go to state 672
    enumerator             go to state 363


state 544

  232 enumerator_definition: enumerator '=' . constant_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 329
    conditional_expression     go to state 330
    constant_expression        go to state 673
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


state 545

  228 enum_specifier: ENUM identifier '{' enumerator_list_opt '}' .

    $default  reduce using rule 228 (enum_specifier)


state 546

  257 linkage_specification: EXTERN string_literal '{' declaration_seq_opt '}' .

    $default  reduce using rule 257 (linkage_specification)


state 547

  239 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body '}' .

    $default  reduce using rule 239 (extension_namespace_definition)


state 548

   35 nested_name_specifier: namespace_name . COLONCOLON
  244 qualified_namespace_specifier: COLONCOLON namespace_name .

    COLONCOLON  shift, and go to state 172

    $default  reduce using rule 244 (qualified_namespace_specifier)


state 549

  243 qualified_namespace_specifier: COLONCOLON nested_name_specifier . namespace_name

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 674
    original_namespace_name  go to state 48


state 550

  245 qualified_namespace_specifier: nested_name_specifier namespace_name .

    $default  reduce using rule 245 (qualified_namespace_specifier)


state 551

  242 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier ';' .

    $default  reduce using rule 242 (namespace_alias_definition)


state 552

  238 original_namespace_definition: NAMESPACE identifier '{' namespace_body '}' .

    $default  reduce using rule 238 (original_namespace_definition)


state 553

  227 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' . template_argument_list '>'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 245
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 250
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 251
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 267
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 276
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 295
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 296
    type_specifier_seq         go to state 297
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    template_argument_list     go to state 675
    template_argument          go to state 299
    throw_expression           go to state 300


state 554

  249 using_declaration: USING COLONCOLON nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 249 (using_declaration)


state 555

  253 using_directive: USING NAMESPACE COLONCOLON namespace_name ';' .

    $default  reduce using rule 253 (using_directive)


state 556

  252 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier namespace_name . ';'

    ';'  shift, and go to state 676


state 557

  254 using_directive: USING NAMESPACE nested_name_specifier namespace_name ';' .

    $default  reduce using rule 254 (using_directive)


state 558

  247 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 677


state 559

  248 using_declaration: USING TYPENAME nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 248 (using_declaration)


state 560

   33 nested_name_specifier: class_name COLONCOLON nested_name_specifier namespace_name COLONCOLON . nested_name_specifier

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    nested_name_specifier    go to state 678
    template_id              go to state 93


state 561

   85 delete_expression: COLONCOLON DELETE '[' . ']' cast_expression

    ']'  shift, and go to state 679


state 562

   83 delete_expression: COLONCOLON DELETE cast_expression .

    $default  reduce using rule 83 (delete_expression)


state 563

   72 new_expression: COLONCOLON NEW new_placement_opt . new_type_id new_initializer_opt
   74               | COLONCOLON NEW new_placement_opt . '(' type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 112
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 680

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 153
    new_type_id                go to state 681
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 570
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


state 564

   52 postfix_expression: CONST_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 682


state 565

   84 delete_expression: DELETE '[' ']' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 268
    integer_literal          go to state 269
    character_literal        go to state 270
    floating_literal         go to state 271
    string_literal           go to state 272
    boolean_literal          go to state 273
    primary_expression       go to state 274
    id_expression            go to state 275
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 328
    postfix_expression       go to state 277
    unary_expression         go to state 278
    unary_operator           go to state 279
    new_expression           go to state 280
    delete_expression        go to state 281
    cast_expression          go to state 683
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 566

   49 postfix_expression: DYNAMIC_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 684


state 567

   56 expression_list: expression_list . ',' assignment_expression
   75 new_placement: '(' expression_list . ')'

    ')'  shift, and go to state 685
    ','  shift, and go to state 616


state 568

   73 new_expression: NEW new_placement_opt '(' . type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 112
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 153
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 686
    type_specifier_seq         go to state 297
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


state 569

   71 new_expression: NEW new_placement_opt new_type_id . new_initializer_opt

    '('  shift, and go to state 687

    $default  reduce using rule 460 (new_initializer_opt)

    new_initializer      go to state 688
    new_initializer_opt  go to state 689


state 570

   76 new_type_id: type_specifier_seq . new_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 223
    '['             shift, and go to state 690
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '*'       [reduce using rule 462 (new_declarator_opt)]
    '&'       [reduce using rule 462 (new_declarator_opt)]
    $default  reduce using rule 462 (new_declarator_opt)

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    nested_name_specifier    go to state 224
    new_declarator           go to state 691
    direct_new_declarator    go to state 692
    ptr_operator             go to state 693
    template_id              go to state 93
    new_declarator_opt       go to state 694


state 571

   51 postfix_expression: REINTERPRET_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 695


state 572

   64 unary_expression: SIZEOF '(' type_id . ')'

    ')'  shift, and go to state 696


state 573

   50 postfix_expression: STATIC_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 697


state 574

   53 postfix_expression: TYPEID '(' expression . ')'
  136 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 698
    ','  shift, and go to state 577


state 575

   54 postfix_expression: TYPEID '(' type_id . ')'

    ')'  shift, and go to state 699


state 576

   23 primary_expression: '(' expression ')' .

    $default  reduce using rule 23 (primary_expression)


state 577

  136 expression: expression ',' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 700
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 578

   87 cast_expression: '(' type_id ')' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 268
    integer_literal          go to state 269
    character_literal        go to state 270
    floating_literal         go to state 271
    string_literal           go to state 272
    boolean_literal          go to state 273
    primary_expression       go to state 274
    id_expression            go to state 275
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 328
    postfix_expression       go to state 277
    unary_expression         go to state 278
    unary_operator           go to state 279
    new_expression           go to state 280
    delete_expression        go to state 281
    cast_expression          go to state 701
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 579

   45 postfix_expression: postfix_expression ARROW COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 702
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 328
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 580

   43 postfix_expression: postfix_expression ARROW TEMPLATE . COLONCOLON id_expression
   44                   | postfix_expression ARROW TEMPLATE . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 703
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 704
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 328
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 581

   46 postfix_expression: postfix_expression ARROW id_expression .

    $default  reduce using rule 46 (postfix_expression)


state 582

   56 expression_list: expression_list . ',' assignment_expression
  455 expression_list_opt: expression_list .

    ','  shift, and go to state 616

    $default  reduce using rule 455 (expression_list_opt)


state 583

   38 postfix_expression: postfix_expression '(' expression_list_opt . ')'

    ')'  shift, and go to state 705


state 584

   37 postfix_expression: postfix_expression '[' expression . ']'
  136 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 706
    ','  shift, and go to state 577


state 585

   41 postfix_expression: postfix_expression '.' COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 707
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 328
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 586

   39 postfix_expression: postfix_expression '.' TEMPLATE . COLONCOLON id_expression
   40                   | postfix_expression '.' TEMPLATE . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 708
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 709
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 328
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 587

   42 postfix_expression: postfix_expression '.' id_expression .

    $default  reduce using rule 42 (postfix_expression)


state 588

   89 pm_expression: pm_expression DOTSTAR cast_expression .

    $default  reduce using rule 89 (pm_expression)


state 589

   90 pm_expression: pm_expression ARROWSTAR cast_expression .

    $default  reduce using rule 90 (pm_expression)


state 590

   89 pm_expression: pm_expression . DOTSTAR cast_expression
   90              | pm_expression . ARROWSTAR cast_expression
   92 multiplicative_expression: multiplicative_expression '*' pm_expression .

    DOTSTAR    shift, and go to state 419
    ARROWSTAR  shift, and go to state 420

    $default  reduce using rule 92 (multiplicative_expression)


state 591

   89 pm_expression: pm_expression . DOTSTAR cast_expression
   90              | pm_expression . ARROWSTAR cast_expression
   93 multiplicative_expression: multiplicative_expression '/' pm_expression .

    DOTSTAR    shift, and go to state 419
    ARROWSTAR  shift, and go to state 420

    $default  reduce using rule 93 (multiplicative_expression)


state 592

   89 pm_expression: pm_expression . DOTSTAR cast_expression
   90              | pm_expression . ARROWSTAR cast_expression
   94 multiplicative_expression: multiplicative_expression '%' pm_expression .

    DOTSTAR    shift, and go to state 419
    ARROWSTAR  shift, and go to state 420

    $default  reduce using rule 94 (multiplicative_expression)


state 593

   92 multiplicative_expression: multiplicative_expression . '*' pm_expression
   93                          | multiplicative_expression . '/' pm_expression
   94                          | multiplicative_expression . '%' pm_expression
   96 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 421
    '/'  shift, and go to state 422
    '%'  shift, and go to state 423

    $default  reduce using rule 96 (additive_expression)


state 594

   92 multiplicative_expression: multiplicative_expression . '*' pm_expression
   93                          | multiplicative_expression . '/' pm_expression
   94                          | multiplicative_expression . '%' pm_expression
   97 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 421
    '/'  shift, and go to state 422
    '%'  shift, and go to state 423

    $default  reduce using rule 97 (additive_expression)


state 595

   96 additive_expression: additive_expression . '+' multiplicative_expression
   97                    | additive_expression . '-' multiplicative_expression
   99 shift_expression: shift_expression SL additive_expression .

    '+'  shift, and go to state 424
    '-'  shift, and go to state 425

    $default  reduce using rule 99 (shift_expression)


state 596

   96 additive_expression: additive_expression . '+' multiplicative_expression
   97                    | additive_expression . '-' multiplicative_expression
  100 shift_expression: shift_expression SR additive_expression .

    '+'  shift, and go to state 424
    '-'  shift, and go to state 425

    $default  reduce using rule 100 (shift_expression)


state 597

   99 shift_expression: shift_expression . SL additive_expression
  100                 | shift_expression . SR additive_expression
  104 relational_expression: relational_expression LTEQ shift_expression .

    SL  shift, and go to state 426
    SR  shift, and go to state 427

    $default  reduce using rule 104 (relational_expression)


state 598

   99 shift_expression: shift_expression . SL additive_expression
  100                 | shift_expression . SR additive_expression
  105 relational_expression: relational_expression GTEQ shift_expression .

    SL  shift, and go to state 426
    SR  shift, and go to state 427

    $default  reduce using rule 105 (relational_expression)


state 599

   99 shift_expression: shift_expression . SL additive_expression
  100                 | shift_expression . SR additive_expression
  102 relational_expression: relational_expression '<' shift_expression .

    SL  shift, and go to state 426
    SR  shift, and go to state 427

    $default  reduce using rule 102 (relational_expression)


state 600

   99 shift_expression: shift_expression . SL additive_expression
  100                 | shift_expression . SR additive_expression
  103 relational_expression: relational_expression '>' shift_expression .

    SL  shift, and go to state 426
    SR  shift, and go to state 427

    $default  reduce using rule 103 (relational_expression)


state 601

  102 relational_expression: relational_expression . '<' shift_expression
  103                      | relational_expression . '>' shift_expression
  104                      | relational_expression . LTEQ shift_expression
  105                      | relational_expression . GTEQ shift_expression
  107 equality_expression: equality_expression EQ relational_expression .

    LTEQ  shift, and go to state 428
    GTEQ  shift, and go to state 429
    '<'   shift, and go to state 430
    '>'   shift, and go to state 431

    '>'       [reduce using rule 107 (equality_expression)]
    $default  reduce using rule 107 (equality_expression)


state 602

  102 relational_expression: relational_expression . '<' shift_expression
  103                      | relational_expression . '>' shift_expression
  104                      | relational_expression . LTEQ shift_expression
  105                      | relational_expression . GTEQ shift_expression
  108 equality_expression: equality_expression NOTEQ relational_expression .

    LTEQ  shift, and go to state 428
    GTEQ  shift, and go to state 429
    '<'   shift, and go to state 430
    '>'   shift, and go to state 431

    '>'       [reduce using rule 108 (equality_expression)]
    $default  reduce using rule 108 (equality_expression)


state 603

  107 equality_expression: equality_expression . EQ relational_expression
  108                    | equality_expression . NOTEQ relational_expression
  110 and_expression: and_expression '&' equality_expression .

    EQ     shift, and go to state 432
    NOTEQ  shift, and go to state 433

    $default  reduce using rule 110 (and_expression)


state 604

  110 and_expression: and_expression . '&' equality_expression
  112 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 434

    $default  reduce using rule 112 (exclusive_or_expression)


state 605

  112 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  114 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 435

    $default  reduce using rule 114 (inclusive_or_expression)


state 606

  114 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  116 logical_and_expression: logical_and_expression ANDAND inclusive_or_expression .

    '|'  shift, and go to state 436

    $default  reduce using rule 116 (logical_and_expression)


state 607

  116 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression
  118 logical_or_expression: logical_or_expression OROR logical_and_expression .

    ANDAND  shift, and go to state 437

    $default  reduce using rule 118 (logical_or_expression)


state 608

  120 conditional_expression: logical_or_expression '?' expression . ':' assignment_expression
  136 expression: expression . ',' assignment_expression

    ','  shift, and go to state 577
    ':'  shift, and go to state 710


state 609

  122 assignment_expression: logical_or_expression assignment_operator assignment_expression .

    $default  reduce using rule 122 (assignment_expression)


state 610

  295 direct_abstract_declarator: '(' abstract_declarator . ')'

    ')'  shift, and go to state 711


state 611

  288 abstract_declarator: ptr_operator abstract_declarator_opt .

    $default  reduce using rule 288 (abstract_declarator)


state 612

  290 direct_abstract_declarator: direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  291                           | direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' cv_qualifier_seq
  292                           | direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' exception_specification
  293                           | direct_abstract_declarator_opt '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 322
    COLONCOLON      shift, and go to state 112
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 182
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    $default  reduce using rule 299 (parameter_declaration_clause)

    typedef_name                  go to state 46
    namespace_name                go to state 47
    original_namespace_name       go to state 48
    class_name                    go to state 49
    enum_name                     go to state 50
    template_name                 go to state 51
    nested_name_specifier         go to state 153
    decl_specifier                go to state 62
    decl_specifier_seq            go to state 323
    storage_class_specifier       go to state 64
    function_specifier            go to state 65
    type_specifier                go to state 66
    simple_type_specifier         go to state 67
    type_name                     go to state 68
    elaborated_type_specifier     go to state 69
    enum_specifier                go to state 70
    cv_qualifier                  go to state 84
    parameter_declaration_clause  go to state 712
    parameter_declaration_list    go to state 325
    parameter_declaration         go to state 326
    class_specifier               go to state 87
    class_head                    go to state 88
    class_key                     go to state 89
    template_id                   go to state 93


state 613

  294 direct_abstract_declarator: direct_abstract_declarator_opt '[' . constant_expression_opt ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    $default  reduce using rule 474 (constant_expression_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 329
    conditional_expression     go to state 330
    constant_expression        go to state 331
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    constant_expression_opt    go to state 713


state 614

  432 template_argument_list: template_argument_list ',' template_argument .

    $default  reduce using rule 432 (template_argument_list)


state 615

  313 initializer: '(' expression_list ')' .

    $default  reduce using rule 313 (initializer)


state 616

   56 expression_list: expression_list ',' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 714
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 617

  316 initializer_clause: '{' '}' .

    $default  reduce using rule 316 (initializer_clause)


state 618

  317 initializer_list: initializer_clause .

    $default  reduce using rule 317 (initializer_list)


state 619

  315 initializer_clause: '{' initializer_list . COMMA_opt '}'
  318 initializer_list: initializer_list . ',' initializer_clause

    ','  shift, and go to state 715

    $default  reduce using rule 484 (COMMA_opt)

    COMMA_opt  go to state 716


state 620

  441 handler: CATCH . '(' exception_declaration ')' compound_statement

    '('  shift, and go to state 717


state 621

  439 function_try_block: TRY ctor_initializer_opt function_body handler_seq .

    $default  reduce using rule 439 (function_try_block)


state 622

  440 handler_seq: handler . handler_seq_opt

    CATCH  shift, and go to state 620

    $default  reduce using rule 494 (handler_seq_opt)

    handler_seq      go to state 718
    handler          go to state 622
    handler_seq_opt  go to state 719


state 623

  371 mem_initializer_id: COLONCOLON nested_name_specifier class_name .

    $default  reduce using rule 371 (mem_initializer_id)


state 624

  369 mem_initializer_list: mem_initializer ',' mem_initializer_list .

    $default  reduce using rule 369 (mem_initializer_list)


state 625

  370 mem_initializer: mem_initializer_id '(' expression_list_opt . ')'

    ')'  shift, and go to state 720


state 626

  163 jump_statement: BREAK ';' .

    $default  reduce using rule 163 (jump_statement)


state 627

  147 labeled_statement: CASE constant_expression . ':' statement

    ':'  shift, and go to state 721


state 628

  164 jump_statement: CONTINUE ';' .

    $default  reduce using rule 164 (jump_statement)


state 629

  148 labeled_statement: DEFAULT ':' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 245
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 474
    CASE              shift, and go to state 475
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 248
    CONTINUE          shift, and go to state 476
    DEFAULT           shift, and go to state 477
    DELETE            shift, and go to state 249
    DO                shift, and go to state 478
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 250
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 182
    FALSE             shift, and go to state 251
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 479
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 480
    IF                shift, and go to state 481
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 482
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 253
    RETURN            shift, and go to state 483
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 254
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 255
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 484
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TRY               shift, and go to state 485
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 259
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 486
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266
    '{'               shift, and go to state 319

    $default  reduce using rule 464 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 487
    literal                     go to state 268
    integer_literal             go to state 269
    character_literal           go to state 270
    floating_literal            go to state 271
    string_literal              go to state 272
    boolean_literal             go to state 273
    primary_expression          go to state 274
    id_expression               go to state 275
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 276
    postfix_expression          go to state 277
    unary_expression            go to state 278
    unary_operator              go to state 279
    new_expression              go to state 280
    delete_expression           go to state 281
    cast_expression             go to state 282
    pm_expression               go to state 283
    multiplicative_expression   go to state 284
    additive_expression         go to state 285
    shift_expression            go to state 286
    relational_expression       go to state 287
    equality_expression         go to state 288
    and_expression              go to state 289
    exclusive_or_expression     go to state 290
    inclusive_or_expression     go to state 291
    logical_and_expression      go to state 292
    logical_or_expression       go to state 293
    conditional_expression      go to state 294
    assignment_expression       go to state 407
    expression                  go to state 488
    statement                   go to state 722
    labeled_statement           go to state 490
    expression_statement        go to state 491
    compound_statement          go to state 492
    selection_statement         go to state 494
    iteration_statement         go to state 495
    jump_statement              go to state 496
    declaration_statement       go to state 497
    block_declaration           go to state 498
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 499
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 500
    throw_expression            go to state 300
    expression_opt              go to state 501


state 630

  159 iteration_statement: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 723


state 631

  160 iteration_statement: FOR '(' . for_init_statement condition_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 245
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 250
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 182
    FALSE             shift, and go to state 251
    FLOAT             shift, and go to state 19
    FRIEND            shift, and go to state 20
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 253
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 254
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 255
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 259
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    $default  reduce using rule 464 (expression_opt)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 276
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 407
    expression                 go to state 488
    expression_statement       go to state 724
    for_init_statement         go to state 725
    simple_declaration         go to state 726
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 499
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300
    expression_opt             go to state 501


state 632

  166 jump_statement: GOTO identifier . ';'

    ';'  shift, and go to state 727


state 633

  153 selection_statement: IF '(' . condition ')' statement
  154                    | IF '(' . condition ')' statement ELSE statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 245
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 250
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 251
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 276
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 407
    expression                 go to state 728
    condition                  go to state 729
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 730
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 634

  242 namespace_alias_definition: NAMESPACE identifier . '=' qualified_namespace_specifier ';'

    '='  shift, and go to state 214


state 635

  165 jump_statement: RETURN expression_opt . ';'

    ';'  shift, and go to state 731


state 636

  155 selection_statement: SWITCH '(' . condition ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 245
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 250
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 251
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 276
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 407
    expression                 go to state 728
    condition                  go to state 732
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 730
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 637

  438 try_block: TRY compound_statement . handler_seq

    CATCH  shift, and go to state 620

    handler_seq  go to state 733
    handler      go to state 622


state 638

  158 iteration_statement: WHILE '(' . condition ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 245
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 250
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 251
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 276
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 407
    expression                 go to state 728
    condition                  go to state 734
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 730
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 639

  146 labeled_statement: identifier ':' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 245
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 474
    CASE              shift, and go to state 475
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 248
    CONTINUE          shift, and go to state 476
    DEFAULT           shift, and go to state 477
    DELETE            shift, and go to state 249
    DO                shift, and go to state 478
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 250
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 182
    FALSE             shift, and go to state 251
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 479
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 480
    IF                shift, and go to state 481
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 482
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 253
    RETURN            shift, and go to state 483
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 254
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 255
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 484
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TRY               shift, and go to state 485
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 259
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 486
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266
    '{'               shift, and go to state 319

    $default  reduce using rule 464 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 487
    literal                     go to state 268
    integer_literal             go to state 269
    character_literal           go to state 270
    floating_literal            go to state 271
    string_literal              go to state 272
    boolean_literal             go to state 273
    primary_expression          go to state 274
    id_expression               go to state 275
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 276
    postfix_expression          go to state 277
    unary_expression            go to state 278
    unary_operator              go to state 279
    new_expression              go to state 280
    delete_expression           go to state 281
    cast_expression             go to state 282
    pm_expression               go to state 283
    multiplicative_expression   go to state 284
    additive_expression         go to state 285
    shift_expression            go to state 286
    relational_expression       go to state 287
    equality_expression         go to state 288
    and_expression              go to state 289
    exclusive_or_expression     go to state 290
    inclusive_or_expression     go to state 291
    logical_and_expression      go to state 292
    logical_or_expression       go to state 293
    conditional_expression      go to state 294
    assignment_expression       go to state 407
    expression                  go to state 488
    statement                   go to state 735
    labeled_statement           go to state 490
    expression_statement        go to state 491
    compound_statement          go to state 492
    selection_statement         go to state 494
    iteration_statement         go to state 495
    jump_statement              go to state 496
    declaration_statement       go to state 497
    block_declaration           go to state 498
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 499
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 500
    throw_expression            go to state 300
    expression_opt              go to state 501


state 640

  152 statement_seq: statement_seq statement .

    $default  reduce using rule 152 (statement_seq)


state 641

  149 expression_statement: expression_opt ';' .

    $default  reduce using rule 149 (expression_statement)


state 642

  150 compound_statement: '{' statement_seq_opt '}' .

    $default  reduce using rule 150 (compound_statement)


state 643

  304 parameter_declaration: decl_specifier_seq declarator '=' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 736
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 644

  306 parameter_declaration: decl_specifier_seq abstract_declarator_opt '=' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 737
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 645

  447 exception_specification: THROW . '(' type_id_list_opt ')'

    '('  shift, and go to state 738


state 646

  265 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq . exception_specification
  266                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq .

    THROW  shift, and go to state 645

    $default  reduce using rule 266 (direct_declarator)

    exception_specification  go to state 739


state 647

  267 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' exception_specification .

    $default  reduce using rule 267 (direct_declarator)


state 648

  300 parameter_declaration_clause: parameter_declaration_list ',' ELLIPSIS .

    $default  reduce using rule 300 (parameter_declaration_clause)


state 649

  302 parameter_declaration_list: parameter_declaration_list ',' parameter_declaration .

    $default  reduce using rule 302 (parameter_declaration_list)


state 650

  343 member_declarator: identifier ':' constant_expression .

    $default  reduce using rule 343 (member_declarator)


state 651

  329 member_declaration: decl_specifier_seq member_declarator_list ';' .

    $default  reduce using rule 329 (member_declaration)


state 652

  344 pure_specifier: '=' '0' .

    $default  reduce using rule 344 (pure_specifier)


state 653

  345 constant_initializer: '=' constant_expression .

    $default  reduce using rule 345 (constant_initializer)


state 654

  340 member_declarator: declarator .
  341                  | declarator . pure_specifier
  342                  | declarator . constant_initializer

    '='  shift, and go to state 516

    $default  reduce using rule 340 (member_declarator)

    pure_specifier        go to state 517
    constant_initializer  go to state 518


state 655

  338 member_declarator_list: member_declarator_list ',' member_declarator .

    $default  reduce using rule 338 (member_declarator_list)


state 656

  328 member_specification: access_specifier ':' member_specification_opt .

    $default  reduce using rule 328 (member_specification)


state 657

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier namespace_name COLONCOLON nested_name_specifier
   34                      | class_name . COLONCOLON
  350 base_specifier: COLONCOLON class_name .

    COLONCOLON  shift, and go to state 173

    $default  reduce using rule 350 (base_specifier)


state 658

  349 base_specifier: COLONCOLON nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 740
    template_name  go to state 51
    template_id    go to state 93


state 659

  355 base_specifier: VIRTUAL COLONCOLON . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 452 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 452 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    nested_name_specifier      go to state 216
    template_id                go to state 93
    nested_name_specifier_opt  go to state 741


state 660

  353 base_specifier: VIRTUAL access_specifier . COLONCOLON nested_name_specifier_opt class_name
  354               | VIRTUAL access_specifier . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 742

    CLASS_NAME     [reduce using rule 452 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 452 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    nested_name_specifier      go to state 216
    template_id                go to state 93
    nested_name_specifier_opt  go to state 743


state 661

  356 base_specifier: VIRTUAL nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 744
    template_name  go to state 51
    template_id    go to state 93


state 662

  351 base_specifier: nested_name_specifier class_name .

    $default  reduce using rule 351 (base_specifier)


state 663

  348 base_specifier_list: base_specifier_list ',' . base_specifier

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 527
    PRIVATE         shift, and go to state 333
    PROTECTED       shift, and go to state 334
    PUBLIC          shift, and go to state 335
    VIRTUAL         shift, and go to state 528

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 529
    template_name            go to state 51
    nested_name_specifier    go to state 530
    base_specifier           go to state 745
    access_specifier         go to state 533
    template_id              go to state 93


state 664

  359 base_specifier: access_specifier COLONCOLON . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 452 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 452 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    nested_name_specifier      go to state 216
    template_id                go to state 93
    nested_name_specifier_opt  go to state 746


state 665

  357 base_specifier: access_specifier VIRTUAL . COLONCOLON nested_name_specifier_opt class_name
  358               | access_specifier VIRTUAL . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 747

    CLASS_NAME     [reduce using rule 452 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 452 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    nested_name_specifier      go to state 216
    template_id                go to state 93
    nested_name_specifier_opt  go to state 748


state 666

  360 base_specifier: access_specifier nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 749
    template_name  go to state 51
    template_id    go to state 93


state 667

  424 type_parameter: CLASS identifier .
  425               | CLASS identifier . '=' type_id

    '='  shift, and go to state 750

    $default  reduce using rule 424 (type_parameter)


state 668

  428 type_parameter: TEMPLATE '<' . template_parameter_list '>' CLASS identifier
  429               | TEMPLATE '<' . template_parameter_list '>' CLASS identifier '=' template_name

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 112
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 535
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 182
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 536
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 537
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 153
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 323
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    parameter_declaration      go to state 538
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_parameter_list    go to state 751
    template_parameter         go to state 540
    type_parameter             go to state 541
    template_id                go to state 93


state 669

  426 type_parameter: TYPENAME identifier .
  427               | TYPENAME identifier . '=' type_id

    '='  shift, and go to state 752

    $default  reduce using rule 426 (type_parameter)


state 670

  419 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' . declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 492 (EXPORT_opt)]

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration                     go to state 753
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    EXPORT_opt                      go to state 97


state 671

  421 template_parameter_list: template_parameter_list ',' . template_parameter

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 112
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 535
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 182
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 536
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 537
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 153
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 323
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    parameter_declaration      go to state 538
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_parameter         go to state 754
    type_parameter             go to state 541
    template_id                go to state 93


state 672

  230 enumerator_list: enumerator_list ',' enumerator_definition .

    $default  reduce using rule 230 (enumerator_list)


state 673

  232 enumerator_definition: enumerator '=' constant_expression .

    $default  reduce using rule 232 (enumerator_definition)


state 674

  243 qualified_namespace_specifier: COLONCOLON nested_name_specifier namespace_name .

    $default  reduce using rule 243 (qualified_namespace_specifier)


state 675

  227 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list . '>'
  432 template_argument_list: template_argument_list . ',' template_argument

    '>'  shift, and go to state 755
    ','  shift, and go to state 459


state 676

  252 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier namespace_name ';' .

    $default  reduce using rule 252 (using_directive)


state 677

  247 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 247 (using_declaration)


state 678

   33 nested_name_specifier: class_name COLONCOLON nested_name_specifier namespace_name COLONCOLON nested_name_specifier .

    $default  reduce using rule 33 (nested_name_specifier)


state 679

   85 delete_expression: COLONCOLON DELETE '[' ']' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 268
    integer_literal          go to state 269
    character_literal        go to state 270
    floating_literal         go to state 271
    string_literal           go to state 272
    boolean_literal          go to state 273
    primary_expression       go to state 274
    id_expression            go to state 275
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 328
    postfix_expression       go to state 277
    unary_expression         go to state 278
    unary_operator           go to state 279
    new_expression           go to state 280
    delete_expression        go to state 281
    cast_expression          go to state 756
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 680

   74 new_expression: COLONCOLON NEW new_placement_opt '(' . type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 112
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 153
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 757
    type_specifier_seq         go to state 297
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


state 681

   72 new_expression: COLONCOLON NEW new_placement_opt new_type_id . new_initializer_opt

    '('  shift, and go to state 687

    $default  reduce using rule 460 (new_initializer_opt)

    new_initializer      go to state 688
    new_initializer_opt  go to state 758


state 682

   52 postfix_expression: CONST_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 759


state 683

   84 delete_expression: DELETE '[' ']' cast_expression .

    $default  reduce using rule 84 (delete_expression)


state 684

   49 postfix_expression: DYNAMIC_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 760


state 685

   75 new_placement: '(' expression_list ')' .

    $default  reduce using rule 75 (new_placement)


state 686

   73 new_expression: NEW new_placement_opt '(' type_id . ')' new_initializer_opt

    ')'  shift, and go to state 761


state 687

   81 new_initializer: '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    $default  reduce using rule 454 (expression_list_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    expression_list            go to state 582
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 463
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300
    expression_list_opt        go to state 762


state 688

  461 new_initializer_opt: new_initializer .

    $default  reduce using rule 461 (new_initializer_opt)


state 689

   71 new_expression: NEW new_placement_opt new_type_id new_initializer_opt .

    $default  reduce using rule 71 (new_expression)


state 690

   79 direct_new_declarator: '[' . expression ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 407
    expression                 go to state 763
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 691

  463 new_declarator_opt: new_declarator .

    $default  reduce using rule 463 (new_declarator_opt)


state 692

   78 new_declarator: direct_new_declarator .
   80 direct_new_declarator: direct_new_declarator . '[' constant_expression ']'

    '['  shift, and go to state 764

    $default  reduce using rule 78 (new_declarator)


state 693

   77 new_declarator: ptr_operator . new_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 223
    '['             shift, and go to state 690
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '*'       [reduce using rule 462 (new_declarator_opt)]
    '&'       [reduce using rule 462 (new_declarator_opt)]
    $default  reduce using rule 462 (new_declarator_opt)

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    nested_name_specifier    go to state 224
    new_declarator           go to state 691
    direct_new_declarator    go to state 692
    ptr_operator             go to state 693
    template_id              go to state 93
    new_declarator_opt       go to state 765


state 694

   76 new_type_id: type_specifier_seq new_declarator_opt .

    $default  reduce using rule 76 (new_type_id)


state 695

   51 postfix_expression: REINTERPRET_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 766


state 696

   64 unary_expression: SIZEOF '(' type_id ')' .

    $default  reduce using rule 64 (unary_expression)


state 697

   50 postfix_expression: STATIC_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 767


state 698

   53 postfix_expression: TYPEID '(' expression ')' .

    $default  reduce using rule 53 (postfix_expression)


state 699

   54 postfix_expression: TYPEID '(' type_id ')' .

    $default  reduce using rule 54 (postfix_expression)


state 700

  136 expression: expression ',' assignment_expression .

    $default  reduce using rule 136 (expression)


state 701

   87 cast_expression: '(' type_id ')' cast_expression .

    $default  reduce using rule 87 (cast_expression)


state 702

   45 postfix_expression: postfix_expression ARROW COLONCOLON id_expression .

    $default  reduce using rule 45 (postfix_expression)


state 703

   43 postfix_expression: postfix_expression ARROW TEMPLATE COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 768
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 328
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 704

   44 postfix_expression: postfix_expression ARROW TEMPLATE id_expression .

    $default  reduce using rule 44 (postfix_expression)


state 705

   38 postfix_expression: postfix_expression '(' expression_list_opt ')' .

    $default  reduce using rule 38 (postfix_expression)


state 706

   37 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 37 (postfix_expression)


state 707

   41 postfix_expression: postfix_expression '.' COLONCOLON id_expression .

    $default  reduce using rule 41 (postfix_expression)


state 708

   39 postfix_expression: postfix_expression '.' TEMPLATE COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 769
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 328
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 709

   40 postfix_expression: postfix_expression '.' TEMPLATE id_expression .

    $default  reduce using rule 40 (postfix_expression)


state 710

  120 conditional_expression: logical_or_expression '?' expression ':' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 770
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 711

  295 direct_abstract_declarator: '(' abstract_declarator ')' .

    $default  reduce using rule 295 (direct_abstract_declarator)


state 712

  290 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' cv_qualifier_seq exception_specification
  291                           | direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' cv_qualifier_seq
  292                           | direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' exception_specification
  293                           | direct_abstract_declarator_opt '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 771


state 713

  294 direct_abstract_declarator: direct_abstract_declarator_opt '[' constant_expression_opt . ']'

    ']'  shift, and go to state 772


state 714

   56 expression_list: expression_list ',' assignment_expression .

    $default  reduce using rule 56 (expression_list)


state 715

  318 initializer_list: initializer_list ',' . initializer_clause
  485 COMMA_opt: ',' .

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266
    '{'               shift, and go to state 464

    $default  reduce using rule 485 (COMMA_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 465
    initializer_clause         go to state 773
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 716

  315 initializer_clause: '{' initializer_list COMMA_opt . '}'

    '}'  shift, and go to state 774


state 717

  441 handler: CATCH '(' . exception_declaration ')' compound_statement

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 775
    COLONCOLON      shift, and go to state 112
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 153
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 776
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93
    exception_declaration      go to state 777


state 718

  495 handler_seq_opt: handler_seq .

    $default  reduce using rule 495 (handler_seq_opt)


state 719

  440 handler_seq: handler handler_seq_opt .

    $default  reduce using rule 440 (handler_seq)


state 720

  370 mem_initializer: mem_initializer_id '(' expression_list_opt ')' .

    $default  reduce using rule 370 (mem_initializer)


state 721

  147 labeled_statement: CASE constant_expression ':' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 245
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 474
    CASE              shift, and go to state 475
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 248
    CONTINUE          shift, and go to state 476
    DEFAULT           shift, and go to state 477
    DELETE            shift, and go to state 249
    DO                shift, and go to state 478
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 250
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 182
    FALSE             shift, and go to state 251
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 479
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 480
    IF                shift, and go to state 481
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 482
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 253
    RETURN            shift, and go to state 483
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 254
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 255
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 484
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TRY               shift, and go to state 485
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 259
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 486
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266
    '{'               shift, and go to state 319

    $default  reduce using rule 464 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 487
    literal                     go to state 268
    integer_literal             go to state 269
    character_literal           go to state 270
    floating_literal            go to state 271
    string_literal              go to state 272
    boolean_literal             go to state 273
    primary_expression          go to state 274
    id_expression               go to state 275
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 276
    postfix_expression          go to state 277
    unary_expression            go to state 278
    unary_operator              go to state 279
    new_expression              go to state 280
    delete_expression           go to state 281
    cast_expression             go to state 282
    pm_expression               go to state 283
    multiplicative_expression   go to state 284
    additive_expression         go to state 285
    shift_expression            go to state 286
    relational_expression       go to state 287
    equality_expression         go to state 288
    and_expression              go to state 289
    exclusive_or_expression     go to state 290
    inclusive_or_expression     go to state 291
    logical_and_expression      go to state 292
    logical_or_expression       go to state 293
    conditional_expression      go to state 294
    assignment_expression       go to state 407
    expression                  go to state 488
    statement                   go to state 778
    labeled_statement           go to state 490
    expression_statement        go to state 491
    compound_statement          go to state 492
    selection_statement         go to state 494
    iteration_statement         go to state 495
    jump_statement              go to state 496
    declaration_statement       go to state 497
    block_declaration           go to state 498
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 499
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 500
    throw_expression            go to state 300
    expression_opt              go to state 501


state 722

  148 labeled_statement: DEFAULT ':' statement .

    $default  reduce using rule 148 (labeled_statement)


state 723

  159 iteration_statement: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 779


state 724

  161 for_init_statement: expression_statement .

    $default  reduce using rule 161 (for_init_statement)


state 725

  160 iteration_statement: FOR '(' for_init_statement . condition_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 245
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 250
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 251
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    $default  reduce using rule 468 (condition_opt)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 276
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 407
    expression                 go to state 728
    condition                  go to state 780
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 730
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300
    condition_opt              go to state 781


state 726

  162 for_init_statement: simple_declaration .

    $default  reduce using rule 162 (for_init_statement)


state 727

  166 jump_statement: GOTO identifier ';' .

    $default  reduce using rule 166 (jump_statement)


state 728

  136 expression: expression . ',' assignment_expression
  156 condition: expression .

    ','  shift, and go to state 577

    $default  reduce using rule 156 (condition)


state 729

  153 selection_statement: IF '(' condition . ')' statement
  154                    | IF '(' condition . ')' statement ELSE statement

    ')'  shift, and go to state 782


state 730

  157 condition: type_specifier_seq . declarator '=' assignment_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 166
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 104
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 54
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 167
    declarator               go to state 783
    direct_declarator        go to state 82
    ptr_operator             go to state 83
    declarator_id            go to state 85
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


state 731

  165 jump_statement: RETURN expression_opt ';' .

    $default  reduce using rule 165 (jump_statement)


state 732

  155 selection_statement: SWITCH '(' condition . ')' statement

    ')'  shift, and go to state 784


state 733

  438 try_block: TRY compound_statement handler_seq .

    $default  reduce using rule 438 (try_block)


state 734

  158 iteration_statement: WHILE '(' condition . ')' statement

    ')'  shift, and go to state 785


state 735

  146 labeled_statement: identifier ':' statement .

    $default  reduce using rule 146 (labeled_statement)


state 736

  304 parameter_declaration: decl_specifier_seq declarator '=' assignment_expression .

    $default  reduce using rule 304 (parameter_declaration)


state 737

  306 parameter_declaration: decl_specifier_seq abstract_declarator_opt '=' assignment_expression .

    $default  reduce using rule 306 (parameter_declaration)


state 738

  447 exception_specification: THROW '(' . type_id_list_opt ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 112
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    $default  reduce using rule 498 (type_id_list_opt)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 153
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 786
    type_specifier_seq         go to state 297
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93
    type_id_list               go to state 787
    type_id_list_opt           go to state 788


state 739

  265 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification .

    $default  reduce using rule 265 (direct_declarator)


state 740

  349 base_specifier: COLONCOLON nested_name_specifier class_name .

    $default  reduce using rule 349 (base_specifier)


state 741

  355 base_specifier: VIRTUAL COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 789
    template_name  go to state 51
    template_id    go to state 93


state 742

  353 base_specifier: VIRTUAL access_specifier COLONCOLON . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 452 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 452 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    nested_name_specifier      go to state 216
    template_id                go to state 93
    nested_name_specifier_opt  go to state 790


state 743

  354 base_specifier: VIRTUAL access_specifier nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 791
    template_name  go to state 51
    template_id    go to state 93


state 744

  356 base_specifier: VIRTUAL nested_name_specifier_opt class_name .

    $default  reduce using rule 356 (base_specifier)


state 745

  348 base_specifier_list: base_specifier_list ',' base_specifier .

    $default  reduce using rule 348 (base_specifier_list)


state 746

  359 base_specifier: access_specifier COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 792
    template_name  go to state 51
    template_id    go to state 93


state 747

  357 base_specifier: access_specifier VIRTUAL COLONCOLON . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 452 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 452 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    nested_name_specifier      go to state 216
    template_id                go to state 93
    nested_name_specifier_opt  go to state 793


state 748

  358 base_specifier: access_specifier VIRTUAL nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 794
    template_name  go to state 51
    template_id    go to state 93


state 749

  360 base_specifier: access_specifier nested_name_specifier_opt class_name .

    $default  reduce using rule 360 (base_specifier)


state 750

  425 type_parameter: CLASS identifier '=' . type_id

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 112
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 153
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 795
    type_specifier_seq         go to state 297
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


state 751

  421 template_parameter_list: template_parameter_list . ',' template_parameter
  428 type_parameter: TEMPLATE '<' template_parameter_list . '>' CLASS identifier
  429               | TEMPLATE '<' template_parameter_list . '>' CLASS identifier '=' template_name

    '>'  shift, and go to state 796
    ','  shift, and go to state 671


state 752

  427 type_parameter: TYPENAME identifier '=' . type_id

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 112
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 153
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 797
    type_specifier_seq         go to state 297
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


state 753

  419 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' declaration .

    $default  reduce using rule 419 (template_declaration)


state 754

  421 template_parameter_list: template_parameter_list ',' template_parameter .

    $default  reduce using rule 421 (template_parameter_list)


state 755

  227 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>' .

    $default  reduce using rule 227 (elaborated_type_specifier)


state 756

   85 delete_expression: COLONCOLON DELETE '[' ']' cast_expression .

    $default  reduce using rule 85 (delete_expression)


state 757

   74 new_expression: COLONCOLON NEW new_placement_opt '(' type_id . ')' new_initializer_opt

    ')'  shift, and go to state 798


state 758

   72 new_expression: COLONCOLON NEW new_placement_opt new_type_id new_initializer_opt .

    $default  reduce using rule 72 (new_expression)


state 759

   52 postfix_expression: CONST_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 407
    expression                 go to state 799
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 760

   49 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 407
    expression                 go to state 800
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 761

   73 new_expression: NEW new_placement_opt '(' type_id ')' . new_initializer_opt

    '('  shift, and go to state 687

    $default  reduce using rule 460 (new_initializer_opt)

    new_initializer      go to state 688
    new_initializer_opt  go to state 801


state 762

   81 new_initializer: '(' expression_list_opt . ')'

    ')'  shift, and go to state 802


state 763

   79 direct_new_declarator: '[' expression . ']'
  136 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 803
    ','  shift, and go to state 577


state 764

   80 direct_new_declarator: direct_new_declarator '[' . constant_expression ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 329
    conditional_expression     go to state 330
    constant_expression        go to state 804
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


state 765

   77 new_declarator: ptr_operator new_declarator_opt .

    $default  reduce using rule 77 (new_declarator)


state 766

   51 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 407
    expression                 go to state 805
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 767

   50 postfix_expression: STATIC_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 407
    expression                 go to state 806
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 768

   43 postfix_expression: postfix_expression ARROW TEMPLATE COLONCOLON id_expression .

    $default  reduce using rule 43 (postfix_expression)


state 769

   39 postfix_expression: postfix_expression '.' TEMPLATE COLONCOLON id_expression .

    $default  reduce using rule 39 (postfix_expression)


state 770

  120 conditional_expression: logical_or_expression '?' expression ':' assignment_expression .

    $default  reduce using rule 120 (conditional_expression)


state 771

  290 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . cv_qualifier_seq exception_specification
  291                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . cv_qualifier_seq
  292                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . exception_specification
  293                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' .

    CONST     shift, and go to state 13
    THROW     shift, and go to state 645
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 293 (direct_abstract_declarator)

    cv_qualifier_seq         go to state 807
    cv_qualifier             go to state 171
    exception_specification  go to state 808


state 772

  294 direct_abstract_declarator: direct_abstract_declarator_opt '[' constant_expression_opt ']' .

    $default  reduce using rule 294 (direct_abstract_declarator)


state 773

  318 initializer_list: initializer_list ',' initializer_clause .

    $default  reduce using rule 318 (initializer_list)


state 774

  315 initializer_clause: '{' initializer_list COMMA_opt '}' .

    $default  reduce using rule 315 (initializer_clause)


state 775

  445 exception_declaration: ELLIPSIS .

    $default  reduce using rule 445 (exception_declaration)


state 776

  442 exception_declaration: type_specifier_seq . declarator
  443                      | type_specifier_seq . abstract_declarator
  444                      | type_specifier_seq .

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 166
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 503
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '('       [reduce using rule 480 (direct_abstract_declarator_opt)]
    '['       reduce using rule 480 (direct_abstract_declarator_opt)
    $default  reduce using rule 444 (exception_declaration)

    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 104
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 167
    declarator                      go to state 809
    direct_declarator               go to state 82
    ptr_operator                    go to state 505
    declarator_id                   go to state 85
    abstract_declarator             go to state 810
    direct_abstract_declarator      go to state 455
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_id                     go to state 93
    direct_abstract_declarator_opt  go to state 457


state 777

  441 handler: CATCH '(' exception_declaration . ')' compound_statement

    ')'  shift, and go to state 811


state 778

  147 labeled_statement: CASE constant_expression ':' statement .

    $default  reduce using rule 147 (labeled_statement)


state 779

  159 iteration_statement: DO statement WHILE '(' . expression ')' ';'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 407
    expression                 go to state 812
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 780

  469 condition_opt: condition .

    $default  reduce using rule 469 (condition_opt)


state 781

  160 iteration_statement: FOR '(' for_init_statement condition_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 813


state 782

  153 selection_statement: IF '(' condition ')' . statement
  154                    | IF '(' condition ')' . statement ELSE statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 245
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 474
    CASE              shift, and go to state 475
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 248
    CONTINUE          shift, and go to state 476
    DEFAULT           shift, and go to state 477
    DELETE            shift, and go to state 249
    DO                shift, and go to state 478
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 250
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 182
    FALSE             shift, and go to state 251
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 479
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 480
    IF                shift, and go to state 481
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 482
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 253
    RETURN            shift, and go to state 483
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 254
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 255
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 484
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TRY               shift, and go to state 485
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 259
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 486
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266
    '{'               shift, and go to state 319

    $default  reduce using rule 464 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 487
    literal                     go to state 268
    integer_literal             go to state 269
    character_literal           go to state 270
    floating_literal            go to state 271
    string_literal              go to state 272
    boolean_literal             go to state 273
    primary_expression          go to state 274
    id_expression               go to state 275
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 276
    postfix_expression          go to state 277
    unary_expression            go to state 278
    unary_operator              go to state 279
    new_expression              go to state 280
    delete_expression           go to state 281
    cast_expression             go to state 282
    pm_expression               go to state 283
    multiplicative_expression   go to state 284
    additive_expression         go to state 285
    shift_expression            go to state 286
    relational_expression       go to state 287
    equality_expression         go to state 288
    and_expression              go to state 289
    exclusive_or_expression     go to state 290
    inclusive_or_expression     go to state 291
    logical_and_expression      go to state 292
    logical_or_expression       go to state 293
    conditional_expression      go to state 294
    assignment_expression       go to state 407
    expression                  go to state 488
    statement                   go to state 814
    labeled_statement           go to state 490
    expression_statement        go to state 491
    compound_statement          go to state 492
    selection_statement         go to state 494
    iteration_statement         go to state 495
    jump_statement              go to state 496
    declaration_statement       go to state 497
    block_declaration           go to state 498
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 499
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 500
    throw_expression            go to state 300
    expression_opt              go to state 501


state 783

  157 condition: type_specifier_seq declarator . '=' assignment_expression

    '='  shift, and go to state 815


state 784

  155 selection_statement: SWITCH '(' condition ')' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 245
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 474
    CASE              shift, and go to state 475
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 248
    CONTINUE          shift, and go to state 476
    DEFAULT           shift, and go to state 477
    DELETE            shift, and go to state 249
    DO                shift, and go to state 478
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 250
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 182
    FALSE             shift, and go to state 251
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 479
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 480
    IF                shift, and go to state 481
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 482
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 253
    RETURN            shift, and go to state 483
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 254
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 255
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 484
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TRY               shift, and go to state 485
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 259
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 486
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266
    '{'               shift, and go to state 319

    $default  reduce using rule 464 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 487
    literal                     go to state 268
    integer_literal             go to state 269
    character_literal           go to state 270
    floating_literal            go to state 271
    string_literal              go to state 272
    boolean_literal             go to state 273
    primary_expression          go to state 274
    id_expression               go to state 275
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 276
    postfix_expression          go to state 277
    unary_expression            go to state 278
    unary_operator              go to state 279
    new_expression              go to state 280
    delete_expression           go to state 281
    cast_expression             go to state 282
    pm_expression               go to state 283
    multiplicative_expression   go to state 284
    additive_expression         go to state 285
    shift_expression            go to state 286
    relational_expression       go to state 287
    equality_expression         go to state 288
    and_expression              go to state 289
    exclusive_or_expression     go to state 290
    inclusive_or_expression     go to state 291
    logical_and_expression      go to state 292
    logical_or_expression       go to state 293
    conditional_expression      go to state 294
    assignment_expression       go to state 407
    expression                  go to state 488
    statement                   go to state 816
    labeled_statement           go to state 490
    expression_statement        go to state 491
    compound_statement          go to state 492
    selection_statement         go to state 494
    iteration_statement         go to state 495
    jump_statement              go to state 496
    declaration_statement       go to state 497
    block_declaration           go to state 498
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 499
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 500
    throw_expression            go to state 300
    expression_opt              go to state 501


state 785

  158 iteration_statement: WHILE '(' condition ')' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 245
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 474
    CASE              shift, and go to state 475
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 248
    CONTINUE          shift, and go to state 476
    DEFAULT           shift, and go to state 477
    DELETE            shift, and go to state 249
    DO                shift, and go to state 478
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 250
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 182
    FALSE             shift, and go to state 251
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 479
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 480
    IF                shift, and go to state 481
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 482
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 253
    RETURN            shift, and go to state 483
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 254
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 255
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 484
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TRY               shift, and go to state 485
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 259
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 486
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266
    '{'               shift, and go to state 319

    $default  reduce using rule 464 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 487
    literal                     go to state 268
    integer_literal             go to state 269
    character_literal           go to state 270
    floating_literal            go to state 271
    string_literal              go to state 272
    boolean_literal             go to state 273
    primary_expression          go to state 274
    id_expression               go to state 275
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 276
    postfix_expression          go to state 277
    unary_expression            go to state 278
    unary_operator              go to state 279
    new_expression              go to state 280
    delete_expression           go to state 281
    cast_expression             go to state 282
    pm_expression               go to state 283
    multiplicative_expression   go to state 284
    additive_expression         go to state 285
    shift_expression            go to state 286
    relational_expression       go to state 287
    equality_expression         go to state 288
    and_expression              go to state 289
    exclusive_or_expression     go to state 290
    inclusive_or_expression     go to state 291
    logical_and_expression      go to state 292
    logical_or_expression       go to state 293
    conditional_expression      go to state 294
    assignment_expression       go to state 407
    expression                  go to state 488
    statement                   go to state 817
    labeled_statement           go to state 490
    expression_statement        go to state 491
    compound_statement          go to state 492
    selection_statement         go to state 494
    iteration_statement         go to state 495
    jump_statement              go to state 496
    declaration_statement       go to state 497
    block_declaration           go to state 498
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 499
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 500
    throw_expression            go to state 300
    expression_opt              go to state 501


state 786

  448 type_id_list: type_id .

    $default  reduce using rule 448 (type_id_list)


state 787

  449 type_id_list: type_id_list . ',' type_id
  499 type_id_list_opt: type_id_list .

    ','  shift, and go to state 818

    $default  reduce using rule 499 (type_id_list_opt)


state 788

  447 exception_specification: THROW '(' type_id_list_opt . ')'

    ')'  shift, and go to state 819


state 789

  355 base_specifier: VIRTUAL COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 355 (base_specifier)


state 790

  353 base_specifier: VIRTUAL access_specifier COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 820
    template_name  go to state 51
    template_id    go to state 93


state 791

  354 base_specifier: VIRTUAL access_specifier nested_name_specifier_opt class_name .

    $default  reduce using rule 354 (base_specifier)


state 792

  359 base_specifier: access_specifier COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 359 (base_specifier)


state 793

  357 base_specifier: access_specifier VIRTUAL COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 821
    template_name  go to state 51
    template_id    go to state 93


state 794

  358 base_specifier: access_specifier VIRTUAL nested_name_specifier_opt class_name .

    $default  reduce using rule 358 (base_specifier)


state 795

  425 type_parameter: CLASS identifier '=' type_id .

    $default  reduce using rule 425 (type_parameter)


state 796

  428 type_parameter: TEMPLATE '<' template_parameter_list '>' . CLASS identifier
  429               | TEMPLATE '<' template_parameter_list '>' . CLASS identifier '=' template_name

    CLASS  shift, and go to state 822


state 797

  427 type_parameter: TYPENAME identifier '=' type_id .

    $default  reduce using rule 427 (type_parameter)


state 798

   74 new_expression: COLONCOLON NEW new_placement_opt '(' type_id ')' . new_initializer_opt

    '('  shift, and go to state 687

    $default  reduce using rule 460 (new_initializer_opt)

    new_initializer      go to state 688
    new_initializer_opt  go to state 823


state 799

   52 postfix_expression: CONST_CAST '<' type_id '>' '(' expression . ')'
  136 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 824
    ','  shift, and go to state 577


state 800

   49 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' expression . ')'
  136 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 825
    ','  shift, and go to state 577


state 801

   73 new_expression: NEW new_placement_opt '(' type_id ')' new_initializer_opt .

    $default  reduce using rule 73 (new_expression)


state 802

   81 new_initializer: '(' expression_list_opt ')' .

    $default  reduce using rule 81 (new_initializer)


state 803

   79 direct_new_declarator: '[' expression ']' .

    $default  reduce using rule 79 (direct_new_declarator)


state 804

   80 direct_new_declarator: direct_new_declarator '[' constant_expression . ']'

    ']'  shift, and go to state 826


state 805

   51 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' expression . ')'
  136 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 827
    ','  shift, and go to state 577


state 806

   50 postfix_expression: STATIC_CAST '<' type_id '>' '(' expression . ')'
  136 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 828
    ','  shift, and go to state 577


state 807

  290 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq . exception_specification
  291                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq .

    THROW  shift, and go to state 645

    $default  reduce using rule 291 (direct_abstract_declarator)

    exception_specification  go to state 829


state 808

  292 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' exception_specification .

    $default  reduce using rule 292 (direct_abstract_declarator)


state 809

  442 exception_declaration: type_specifier_seq declarator .

    $default  reduce using rule 442 (exception_declaration)


state 810

  443 exception_declaration: type_specifier_seq abstract_declarator .

    $default  reduce using rule 443 (exception_declaration)


state 811

  441 handler: CATCH '(' exception_declaration ')' . compound_statement

    '{'  shift, and go to state 319

    compound_statement  go to state 830


state 812

  136 expression: expression . ',' assignment_expression
  159 iteration_statement: DO statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 831
    ','  shift, and go to state 577


state 813

  160 iteration_statement: FOR '(' for_init_statement condition_opt ';' . expression_opt ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    $default  reduce using rule 464 (expression_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 407
    expression                 go to state 488
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300
    expression_opt             go to state 832


state 814

  153 selection_statement: IF '(' condition ')' statement .
  154                    | IF '(' condition ')' statement . ELSE statement

    ELSE  shift, and go to state 833

    ELSE      [reduce using rule 153 (selection_statement)]
    $default  reduce using rule 153 (selection_statement)


state 815

  157 condition: type_specifier_seq declarator '=' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 327
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    CONST_CAST        shift, and go to state 248
    DELETE            shift, and go to state 249
    DYNAMIC_CAST      shift, and go to state 250
    FALSE             shift, and go to state 251
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 253
    SIZEOF            shift, and go to state 254
    STATIC_CAST       shift, and go to state 255
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TYPEID            shift, and go to state 259
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 104
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 268
    integer_literal            go to state 269
    character_literal          go to state 270
    floating_literal           go to state 271
    string_literal             go to state 272
    boolean_literal            go to state 273
    primary_expression         go to state 274
    id_expression              go to state 275
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 328
    postfix_expression         go to state 277
    unary_expression           go to state 278
    unary_operator             go to state 279
    new_expression             go to state 280
    delete_expression          go to state 281
    cast_expression            go to state 282
    pm_expression              go to state 283
    multiplicative_expression  go to state 284
    additive_expression        go to state 285
    shift_expression           go to state 286
    relational_expression      go to state 287
    equality_expression        go to state 288
    and_expression             go to state 289
    exclusive_or_expression    go to state 290
    inclusive_or_expression    go to state 291
    logical_and_expression     go to state 292
    logical_or_expression      go to state 293
    conditional_expression     go to state 294
    assignment_expression      go to state 834
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 300


state 816

  155 selection_statement: SWITCH '(' condition ')' statement .

    $default  reduce using rule 155 (selection_statement)


state 817

  158 iteration_statement: WHILE '(' condition ')' statement .

    $default  reduce using rule 158 (iteration_statement)


state 818

  449 type_id_list: type_id_list ',' . type_id

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 112
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 153
    type_specifier             go to state 154
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 835
    type_specifier_seq         go to state 297
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


state 819

  447 exception_specification: THROW '(' type_id_list_opt ')' .

    $default  reduce using rule 447 (exception_specification)


state 820

  353 base_specifier: VIRTUAL access_specifier COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 353 (base_specifier)


state 821

  357 base_specifier: access_specifier VIRTUAL COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 357 (base_specifier)


state 822

  428 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS . identifier
  429               | TEMPLATE '<' template_parameter_list '>' CLASS . identifier '=' template_name

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 836


state 823

   74 new_expression: COLONCOLON NEW new_placement_opt '(' type_id ')' new_initializer_opt .

    $default  reduce using rule 74 (new_expression)


state 824

   52 postfix_expression: CONST_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 52 (postfix_expression)


state 825

   49 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 49 (postfix_expression)


state 826

   80 direct_new_declarator: direct_new_declarator '[' constant_expression ']' .

    $default  reduce using rule 80 (direct_new_declarator)


state 827

   51 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 51 (postfix_expression)


state 828

   50 postfix_expression: STATIC_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 50 (postfix_expression)


state 829

  290 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification .

    $default  reduce using rule 290 (direct_abstract_declarator)


state 830

  441 handler: CATCH '(' exception_declaration ')' compound_statement .

    $default  reduce using rule 441 (handler)


state 831

  159 iteration_statement: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 837


state 832

  160 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 838


state 833

  154 selection_statement: IF '(' condition ')' statement ELSE . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 245
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 474
    CASE              shift, and go to state 475
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 248
    CONTINUE          shift, and go to state 476
    DEFAULT           shift, and go to state 477
    DELETE            shift, and go to state 249
    DO                shift, and go to state 478
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 250
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 182
    FALSE             shift, and go to state 251
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 479
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 480
    IF                shift, and go to state 481
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 482
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 253
    RETURN            shift, and go to state 483
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 254
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 255
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 484
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TRY               shift, and go to state 485
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 259
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 486
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266
    '{'               shift, and go to state 319

    $default  reduce using rule 464 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 487
    literal                     go to state 268
    integer_literal             go to state 269
    character_literal           go to state 270
    floating_literal            go to state 271
    string_literal              go to state 272
    boolean_literal             go to state 273
    primary_expression          go to state 274
    id_expression               go to state 275
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 276
    postfix_expression          go to state 277
    unary_expression            go to state 278
    unary_operator              go to state 279
    new_expression              go to state 280
    delete_expression           go to state 281
    cast_expression             go to state 282
    pm_expression               go to state 283
    multiplicative_expression   go to state 284
    additive_expression         go to state 285
    shift_expression            go to state 286
    relational_expression       go to state 287
    equality_expression         go to state 288
    and_expression              go to state 289
    exclusive_or_expression     go to state 290
    inclusive_or_expression     go to state 291
    logical_and_expression      go to state 292
    logical_or_expression       go to state 293
    conditional_expression      go to state 294
    assignment_expression       go to state 407
    expression                  go to state 488
    statement                   go to state 839
    labeled_statement           go to state 490
    expression_statement        go to state 491
    compound_statement          go to state 492
    selection_statement         go to state 494
    iteration_statement         go to state 495
    jump_statement              go to state 496
    declaration_statement       go to state 497
    block_declaration           go to state 498
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 499
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 500
    throw_expression            go to state 300
    expression_opt              go to state 501


state 834

  157 condition: type_specifier_seq declarator '=' assignment_expression .

    $default  reduce using rule 157 (condition)


state 835

  449 type_id_list: type_id_list ',' type_id .

    $default  reduce using rule 449 (type_id_list)


state 836

  428 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier .
  429               | TEMPLATE '<' template_parameter_list '>' CLASS identifier . '=' template_name

    '='  shift, and go to state 840

    $default  reduce using rule 428 (type_parameter)


state 837

  159 iteration_statement: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 159 (iteration_statement)


state 838

  160 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt ')' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 242
    FLOATING          shift, and go to state 243
    CHARACTER         shift, and go to state 244
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 4
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 245
    PLUSPLUS          shift, and go to state 246
    MINUSMINUS        shift, and go to state 247
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 474
    CASE              shift, and go to state 475
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 248
    CONTINUE          shift, and go to state 476
    DEFAULT           shift, and go to state 477
    DELETE            shift, and go to state 249
    DO                shift, and go to state 478
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 250
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 182
    FALSE             shift, and go to state 251
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 479
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 480
    IF                shift, and go to state 481
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 482
    NEW               shift, and go to state 252
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 253
    RETURN            shift, and go to state 483
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 254
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 255
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 484
    THIS              shift, and go to state 256
    THROW             shift, and go to state 257
    TRUE              shift, and go to state 258
    TRY               shift, and go to state 485
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 259
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 486
    '('               shift, and go to state 260
    '~'               shift, and go to state 261
    '*'               shift, and go to state 262
    '&'               shift, and go to state 263
    '+'               shift, and go to state 264
    '-'               shift, and go to state 265
    '!'               shift, and go to state 266
    '{'               shift, and go to state 319

    $default  reduce using rule 464 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 487
    literal                     go to state 268
    integer_literal             go to state 269
    character_literal           go to state 270
    floating_literal            go to state 271
    string_literal              go to state 272
    boolean_literal             go to state 273
    primary_expression          go to state 274
    id_expression               go to state 275
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 276
    postfix_expression          go to state 277
    unary_expression            go to state 278
    unary_operator              go to state 279
    new_expression              go to state 280
    delete_expression           go to state 281
    cast_expression             go to state 282
    pm_expression               go to state 283
    multiplicative_expression   go to state 284
    additive_expression         go to state 285
    shift_expression            go to state 286
    relational_expression       go to state 287
    equality_expression         go to state 288
    and_expression              go to state 289
    exclusive_or_expression     go to state 290
    inclusive_or_expression     go to state 291
    logical_and_expression      go to state 292
    logical_or_expression       go to state 293
    conditional_expression      go to state 294
    assignment_expression       go to state 407
    expression                  go to state 488
    statement                   go to state 841
    labeled_statement           go to state 490
    expression_statement        go to state 491
    compound_statement          go to state 492
    selection_statement         go to state 494
    iteration_statement         go to state 495
    jump_statement              go to state 496
    declaration_statement       go to state 497
    block_declaration           go to state 498
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 499
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 500
    throw_expression            go to state 300
    expression_opt              go to state 501


state 839

  154 selection_statement: IF '(' condition ')' statement ELSE statement .

    $default  reduce using rule 154 (selection_statement)


state 840

  429 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier '=' . template_name

    TEMPLATE_NAME  shift, and go to state 6

    template_name  go to state 842


state 841

  160 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt ')' statement .

    $default  reduce using rule 160 (iteration_statement)


state 842

  429 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier '=' template_name .

    $default  reduce using rule 429 (type_parameter)
