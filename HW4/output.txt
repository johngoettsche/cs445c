*** parse successful ***
*** building types ***
simple type specifier8
type specifier1
decl specifier2
decl specifier seq1
identifier1
unqualified id1
id expression1
declarator id1
direct declarator1
parameter declaration clause4
direct declarator5
*addParamsToFunction*
*passTypeBelowPointer*
declarator1 
ctor initializer opt1
simple type specifier8
type specifier1
decl specifier2
decl specifier seq1
identifier1
unqualified id1
id expression1
declarator id1
direct declarator1
declarator1 
initializer opt1
init declarator1 
init declarator list1
simple declaration1
*passTypeBelowPointer*
block declaration1
declaration statement1
statement7
statement seq1
identifier1
unqualified id1
id expression1
primary expression4
postfix expression1
unary expression1
cast_expression1
pm_expression1
multiplicative_expression1
additive_expression1
shift_expression1
relational_expression1
equality_expression1
and_expression1
exclusive_or_expression1
inclusive_or_expression1
logical and expression1
logical or expression1
integer literal1
literal1
primary expression1
postfix expression1
unary expression1
cast_expression1
pm_expression1
multiplicative_expression1
additive_expression1
shift_expression1
relational_expression1
equality_expression1
and_expression1
exclusive_or_expression1
inclusive_or_expression1
logical and expression1
logical or expression1
conditional expression1
assignment expression1
assignment expression2
expression1
expression opt2
expression statement1
statement2
statement seq2
identifier1
unqualified id1
id expression1
primary expression4
postfix expression1
unary expression1
cast_expression1
pm_expression1
multiplicative_expression1
additive_expression1
shift_expression1
relational_expression1
integer literal1
literal1
primary expression1
postfix expression1
unary expression1
cast_expression1
pm_expression1
multiplicative_expression1
additive_expression1
shift_expression1
relational_expression3
equality_expression1
and_expression1
exclusive_or_expression1
inclusive_or_expression1
logical and expression1
logical or expression1
conditional expression1
assignment expression1
expression1
condition1
identifier1
unqualified id1
id expression1
primary expression4
postfix expression1
unary expression1
cast_expression1
pm_expression1
multiplicative_expression1
additive_expression1
shift_expression1
relational_expression1
equality_expression1
and_expression1
exclusive_or_expression1
inclusive_or_expression1
logical and expression1
logical or expression1
identifier1
unqualified id1
id expression1
primary expression4
postfix expression1
unary expression1
cast_expression1
pm_expression1
multiplicative_expression1
additive_expression1
integer literal1
literal1
primary expression1
postfix expression1
unary expression1
cast_expression1
pm_expression1
multiplicative_expression1
additive_expression3
shift_expression1
relational_expression1
equality_expression1
and_expression1
exclusive_or_expression1
inclusive_or_expression1
logical and expression1
logical or expression1
conditional expression1
assignment expression1
assignment expression2
expression1
expression opt2
expression statement1
statement2
iteration statement1
statement5
statement seq2
integer literal1
literal1
primary expression1
postfix expression1
unary expression1
cast_expression1
pm_expression1
multiplicative_expression1
additive_expression1
shift_expression1
relational_expression1
equality_expression1
and_expression1
exclusive_or_expression1
inclusive_or_expression1
logical and expression1
logical or expression1
conditional expression1
assignment expression1
expression1
expression opt2
jump_statement3statement6
statement seq2
statement seq opt2
compound statement1
function body1
function definition2
int main
declaration2
declaration seq1
declaration seq opt2
translation unit1
*** build types successful ***
	*createGlobalSymbolTable*
global ST: 31
 program: 1 program  - program
 declaration_seq_opt: 1 main  - function int
  declaration_seq: 1 main  - function int
   declaration: 1 main  - function int
    function_definition: 4 main  - function int
     decl_specifier_seq: 1 - int
      decl_specifier: 1 - int
       type_specifier: 1 - int
        simple_type_specifier: 1 - int
         INT: int - int
     declarator: 1 main  - function int
      direct_declarator: 2 main  - function int
       direct_declarator: 1 main  - function
        declarator_id: 1 main  - function
         id_expression: 1 main  - function
          unqualified_id: 1 main  - function
           identifier: 1 main  - function
            IDENTIFIER: main - function
       parameter_declaration_clause: 0 - NULL
     ctor_initializer_opt: 0 - NULL
     function_body: 1 - function
      compound_statement: 1 - statement
       statement_seq_opt: 1 - touple
        statement_seq: 2 - touple
         statement_seq: 2 - touple
          statement_seq: 2 - touple
           statement_seq: 1 i  - int
            statement: 1 i  - int
             declaration_statement: 1 i  - int
              block_declaration: 1 i  - int
               simple_declaration: 2 i  - int
                decl_specifier_seq: 1 i  - int
                 decl_specifier: 1 i  - int
                  type_specifier: 1 i  - int
                   simple_type_specifier: 1 i  - int
                    INT: int - int
                init_declarator_list: 1 i  - int
                 init_declarator: 2 i  - int
                  declarator: 1 i  - int
                   direct_declarator: 1 i  - int
                    declarator_id: 1 i  - int
                     id_expression: 1 i  - int
                      unqualified_id: 1 i  - int
                       identifier: 1 i  - int
                        IDENTIFIER: i - int
                  initializer_opt: 0 - NULL
           statement: 1 - statement
            expression_statement: 1 - statement
             expression_opt: 1 i  - UNKNOWN TYPE
              expression: 1 i  - UNKNOWN TYPE
               assignment_expression: 3 i  - UNKNOWN TYPE
                logical_or_expression: 1 i  - UNKNOWN TYPE
                 logical_and_expression: 1 i  - UNKNOWN TYPE
                  inclusive_or_expression: 1 i  - UNKNOWN TYPE
                   exclusive_or_expression: 1 i  - UNKNOWN TYPE
                    and_expression: 1 i  - UNKNOWN TYPE
                     equality_expression: 1 i  - UNKNOWN TYPE
                      relational_expression: 1 i  - UNKNOWN TYPE
                       shift_expression: 1 i  - UNKNOWN TYPE
                        additive_expression: 1 i  - UNKNOWN TYPE
                         multiplicative_expression: 1 i  - UNKNOWN TYPE
                          pm_expression: 1 i  - UNKNOWN TYPE
                           cast_expression: 1 i  - UNKNOWN TYPE
                            unary_expression: 1 i  - UNKNOWN TYPE
                             postfix_expression: 1 i  - UNKNOWN TYPE
                              primary_expression: 1 i  - UNKNOWN TYPE
                               id_expression: 1 i  - UNKNOWN TYPE
                                unqualified_id: 1 i  - UNKNOWN TYPE
                                 identifier: 1 i  - UNKNOWN TYPE
                                  IDENTIFIER: i - UNKNOWN TYPE
                assignment_operator: 0 - operator
                assignment_expression: 1 5  - int
                 conditional_expression: 1 5  - int
                  logical_or_expression: 1 5  - int
                   logical_and_expression: 1 5  - int
                    inclusive_or_expression: 1 5  - int
                     exclusive_or_expression: 1 5  - int
                      and_expression: 1 5  - int
                       equality_expression: 1 5  - int
                        relational_expression: 1 5  - int
                         shift_expression: 1 5  - int
                          additive_expression: 1 5  - int
                           multiplicative_expression: 1 5  - int
                            pm_expression: 1 5  - int
                             cast_expression: 1 5  - int
                              unary_expression: 1 5  - int
                               postfix_expression: 1 5  - int
                                primary_expression: 1 5  - int
                                 literal: 1 5  - int
                                  integer_literal: 1 5  - int
                                   INTEGER: 5 - int
          statement: 1 - statement
           iteration_statement: 3 - statement
            WHILE: while - statement
            condition: 1 - bool
             expression: 1 - bool
              assignment_expression: 1 - bool
               conditional_expression: 1 - bool
                logical_or_expression: 1 - bool
                 logical_and_expression: 1 - bool
                  inclusive_or_expression: 1 - bool
                   exclusive_or_expression: 1 - bool
                    and_expression: 1 - bool
                     equality_expression: 1 - bool
                      relational_expression: 2 - bool
                       relational_expression: 1 i  - UNKNOWN TYPE
                        shift_expression: 1 i  - UNKNOWN TYPE
                         additive_expression: 1 i  - UNKNOWN TYPE
                          multiplicative_expression: 1 i  - UNKNOWN TYPE
                           pm_expression: 1 i  - UNKNOWN TYPE
                            cast_expression: 1 i  - UNKNOWN TYPE
                             unary_expression: 1 i  - UNKNOWN TYPE
                              postfix_expression: 1 i  - UNKNOWN TYPE
                               primary_expression: 1 i  - UNKNOWN TYPE
                                id_expression: 1 i  - UNKNOWN TYPE
                                 unqualified_id: 1 i  - UNKNOWN TYPE
                                  identifier: 1 i  - UNKNOWN TYPE
                                   IDENTIFIER: i - UNKNOWN TYPE
                       shift_expression: 1 0  - int
                        additive_expression: 1 0  - int
                         multiplicative_expression: 1 0  - int
                          pm_expression: 1 0  - int
                           cast_expression: 1 0  - int
                            unary_expression: 1 0  - int
                             postfix_expression: 1 0  - int
                              primary_expression: 1 0  - int
                               literal: 1 0  - int
                                integer_literal: 1 0  - int
                                 INTEGER: 0 - int
            statement: 1 - statement
             expression_statement: 1 - statement
              expression_opt: 1 i  - UNKNOWN TYPE
               expression: 1 i  - UNKNOWN TYPE
                assignment_expression: 3 i  - UNKNOWN TYPE
                 logical_or_expression: 1 i  - UNKNOWN TYPE
                  logical_and_expression: 1 i  - UNKNOWN TYPE
                   inclusive_or_expression: 1 i  - UNKNOWN TYPE
                    exclusive_or_expression: 1 i  - UNKNOWN TYPE
                     and_expression: 1 i  - UNKNOWN TYPE
                      equality_expression: 1 i  - UNKNOWN TYPE
                       relational_expression: 1 i  - UNKNOWN TYPE
                        shift_expression: 1 i  - UNKNOWN TYPE
                         additive_expression: 1 i  - UNKNOWN TYPE
                          multiplicative_expression: 1 i  - UNKNOWN TYPE
                           pm_expression: 1 i  - UNKNOWN TYPE
                            cast_expression: 1 i  - UNKNOWN TYPE
                             unary_expression: 1 i  - UNKNOWN TYPE
                              postfix_expression: 1 i  - UNKNOWN TYPE
                               primary_expression: 1 i  - UNKNOWN TYPE
                                id_expression: 1 i  - UNKNOWN TYPE
                                 unqualified_id: 1 i  - UNKNOWN TYPE
                                  identifier: 1 i  - UNKNOWN TYPE
                                   IDENTIFIER: i - UNKNOWN TYPE
                 assignment_operator: 0 - operator
                 assignment_expression: 1 i  - UNKNOWN TYPE
                  conditional_expression: 1 i  - UNKNOWN TYPE
                   logical_or_expression: 1 i  - UNKNOWN TYPE
                    logical_and_expression: 1 i  - UNKNOWN TYPE
                     inclusive_or_expression: 1 i  - UNKNOWN TYPE
                      exclusive_or_expression: 1 i  - UNKNOWN TYPE
                       and_expression: 1 i  - UNKNOWN TYPE
                        equality_expression: 1 i  - UNKNOWN TYPE
                         relational_expression: 1 i  - UNKNOWN TYPE
                          shift_expression: 1 i  - UNKNOWN TYPE
                           additive_expression: 2 i  - UNKNOWN TYPE
                            additive_expression: 1 i  - UNKNOWN TYPE
                             multiplicative_expression: 1 i  - UNKNOWN TYPE
                              pm_expression: 1 i  - UNKNOWN TYPE
                               cast_expression: 1 i  - UNKNOWN TYPE
                                unary_expression: 1 i  - UNKNOWN TYPE
                                 postfix_expression: 1 i  - UNKNOWN TYPE
                                  primary_expression: 1 i  - UNKNOWN TYPE
                                   id_expression: 1 i  - UNKNOWN TYPE
                                    unqualified_id: 1 i  - UNKNOWN TYPE
                                     identifier: 1 i  - UNKNOWN TYPE
                                      IDENTIFIER: i - UNKNOWN TYPE
                            multiplicative_expression: 1 1  - int
                             pm_expression: 1 1  - int
                              cast_expression: 1 1  - int
                               unary_expression: 1 1  - int
                                postfix_expression: 1 1  - int
                                 primary_expression: 1 1  - int
                                  literal: 1 1  - int
                                   integer_literal: 1 1  - int
                                    INTEGER: 1 - int
         statement: 1 0  - int
          jump_statement: 2 0  - int
           RETURN: return - int
           expression_opt: 1 0  - int
            expression: 1 0  - int
             assignment_expression: 1 0  - int
              conditional_expression: 1 0  - int
               logical_or_expression: 1 0  - int
                logical_and_expression: 1 0  - int
                 inclusive_or_expression: 1 0  - int
                  exclusive_or_expression: 1 0  - int
                   and_expression: 1 0  - int
                    equality_expression: 1 0  - int
                     relational_expression: 1 0  - int
                      shift_expression: 1 0  - int
                       additive_expression: 1 0  - int
                        multiplicative_expression: 1 0  - int
                         pm_expression: 1 0  - int
                          cast_expression: 1 0  - int
                           unary_expression: 1 0  - int
                            postfix_expression: 1 0  - int
                             primary_expression: 1 0  - int
                              literal: 1 0  - int
                               integer_literal: 1 0  - int
                                INTEGER: 0 - int
*** adding symbol tables ***
identifier 1
identifier 1
identifier 1
identifier 1
identifier 1
identifier 1
additive_expression 3
	UNKNOWN TYPE : int
function definition 2
adding to symbol table program:

addToSymbolTable: [1]
	*createSymbolTable*
simple declaration 1
**addSimpleDeclarations**
adding to symbol table main:

addToSymbolTable: [1]
simple declaration 1 complete
identifier 1
expression_statement 1
expression 1
assignment_expression 2
	int : int
identifier 1
****************************************
*************************************************
temp count: 0
_Const_0 0
adding to symbol table main:

addToSymbolTable: [2]
expression 1
relational_expression
	int : int
identifier 1
****************************************
*************************************************
temp count: 1
_Const_1 0
adding to symbol table main:

addToSymbolTable: [3]
expression_statement 1
expression 1
assignment_expression 2
	int : int
identifier 1
identifier 1
****************************************
*************************************************
temp count: 2
_Const_2 0
adding to symbol table main:

addToSymbolTable: [4]
jump_statement 3*** int : int ***
	int : int
expression 1
****************************************
*************************************************
temp count: 3
_Const_3 0
adding to symbol table main:

addToSymbolTable: [5]
function definition 2 complete [5]
translation unit 1
translation unit 1 complete
*** make symbol tables successful ***
 program: 1 program  - program
 declaration_seq_opt: 1 main  - function int
  declaration_seq: 1 main  - function int
   declaration: 1 main  - function int
    function_definition: 4 main  - function int
     decl_specifier_seq: 1 - int
      decl_specifier: 1 - int
       type_specifier: 1 - int
        simple_type_specifier: 1 - int
         INT: int - int
     declarator: 1 main  - function int
      direct_declarator: 2 main  - function int
       direct_declarator: 1 main  - function
        declarator_id: 1 main  - function
         id_expression: 1 main  - function
          unqualified_id: 1 main  - function
           identifier: 1 main  - function
            IDENTIFIER: main - function
       parameter_declaration_clause: 0 - NULL
     ctor_initializer_opt: 0 - NULL
     function_body: 1 - function
      compound_statement: 1 - statement
       statement_seq_opt: 1 - touple
        statement_seq: 2 - touple
         statement_seq: 2 - touple
          statement_seq: 2 - touple
           statement_seq: 1 i  - int
            statement: 1 i  - int
             declaration_statement: 1 i  - int
              block_declaration: 1 i  - int
               simple_declaration: 2 i  - int
                decl_specifier_seq: 1 i  - int
                 decl_specifier: 1 i  - int
                  type_specifier: 1 i  - int
                   simple_type_specifier: 1 i  - int
                    INT: int - int
                init_declarator_list: 1 i  - int
                 init_declarator: 2 i  - int
                  declarator: 1 i  - int
                   direct_declarator: 1 i  - int
                    declarator_id: 1 i  - int
                     id_expression: 1 i  - int
                      unqualified_id: 1 i  - int
                       identifier: 1 i  - int
                        IDENTIFIER: i - int
                  initializer_opt: 0 - NULL
           statement: 1 - statement
            expression_statement: 1 - statement
             expression_opt: 1 i  - int
              expression: 1 i  - int
               assignment_expression: 3 i  - int
                logical_or_expression: 1 i  - int
                 logical_and_expression: 1 i  - int
                  inclusive_or_expression: 1 i  - int
                   exclusive_or_expression: 1 i  - int
                    and_expression: 1 i  - int
                     equality_expression: 1 i  - int
                      relational_expression: 1 i  - int
                       shift_expression: 1 i  - int
                        additive_expression: 1 i  - int
                         multiplicative_expression: 1 i  - int
                          pm_expression: 1 i  - int
                           cast_expression: 1 i  - int
                            unary_expression: 1 i  - int
                             postfix_expression: 1 i  - int
                              primary_expression: 1 i  - int
                               id_expression: 1 i  - int
                                unqualified_id: 1 i  - int
                                 identifier: 1 i  - int
                                  IDENTIFIER: i - int
                assignment_operator: 0 - operator
                assignment_expression: 1 _Const_0  - int
                 conditional_expression: 1 _Const_0  - int
                  logical_or_expression: 1 _Const_0  - int
                   logical_and_expression: 1 _Const_0  - int
                    inclusive_or_expression: 1 _Const_0  - int
                     exclusive_or_expression: 1 _Const_0  - int
                      and_expression: 1 _Const_0  - int
                       equality_expression: 1 _Const_0  - int
                        relational_expression: 1 _Const_0  - int
                         shift_expression: 1 _Const_0  - int
                          additive_expression: 1 _Const_0  - int
                           multiplicative_expression: 1 _Const_0  - int
                            pm_expression: 1 _Const_0  - int
                             cast_expression: 1 _Const_0  - int
                              unary_expression: 1 _Const_0  - int
                               postfix_expression: 1 _Const_0  - int
                                primary_expression: 1 _Const_0  - int
                                 literal: 1 _Const_0  - int
                                  integer_literal: 1 _Const_0  - int
                                   INTEGER: 5 - int
          statement: 1 - statement
           iteration_statement: 3 - statement
            WHILE: while - statement
            condition: 1 - bool
             expression: 1 - bool
              assignment_expression: 1 - bool
               conditional_expression: 1 - bool
                logical_or_expression: 1 - bool
                 logical_and_expression: 1 - bool
                  inclusive_or_expression: 1 - bool
                   exclusive_or_expression: 1 - bool
                    and_expression: 1 - bool
                     equality_expression: 1 - bool
                      relational_expression: 2 - bool
                       relational_expression: 1 i  - int
                        shift_expression: 1 i  - int
                         additive_expression: 1 i  - int
                          multiplicative_expression: 1 i  - int
                           pm_expression: 1 i  - int
                            cast_expression: 1 i  - int
                             unary_expression: 1 i  - int
                              postfix_expression: 1 i  - int
                               primary_expression: 1 i  - int
                                id_expression: 1 i  - int
                                 unqualified_id: 1 i  - int
                                  identifier: 1 i  - int
                                   IDENTIFIER: i - int
                       shift_expression: 1 _Const_1  - int
                        additive_expression: 1 _Const_1  - int
                         multiplicative_expression: 1 _Const_1  - int
                          pm_expression: 1 _Const_1  - int
                           cast_expression: 1 _Const_1  - int
                            unary_expression: 1 _Const_1  - int
                             postfix_expression: 1 _Const_1  - int
                              primary_expression: 1 _Const_1  - int
                               literal: 1 _Const_1  - int
                                integer_literal: 1 _Const_1  - int
                                 INTEGER: 0 - int
            statement: 1 - statement
             expression_statement: 1 - statement
              expression_opt: 1 i  - int
               expression: 1 i  - int
                assignment_expression: 3 i  - int
                 logical_or_expression: 1 i  - int
                  logical_and_expression: 1 i  - int
                   inclusive_or_expression: 1 i  - int
                    exclusive_or_expression: 1 i  - int
                     and_expression: 1 i  - int
                      equality_expression: 1 i  - int
                       relational_expression: 1 i  - int
                        shift_expression: 1 i  - int
                         additive_expression: 1 i  - int
                          multiplicative_expression: 1 i  - int
                           pm_expression: 1 i  - int
                            cast_expression: 1 i  - int
                             unary_expression: 1 i  - int
                              postfix_expression: 1 i  - int
                               primary_expression: 1 i  - int
                                id_expression: 1 i  - int
                                 unqualified_id: 1 i  - int
                                  identifier: 1 i  - int
                                   IDENTIFIER: i - int
                 assignment_operator: 0 - operator
                 assignment_expression: 1 i  - int
                  conditional_expression: 1 i  - int
                   logical_or_expression: 1 i  - int
                    logical_and_expression: 1 i  - int
                     inclusive_or_expression: 1 i  - int
                      exclusive_or_expression: 1 i  - int
                       and_expression: 1 i  - int
                        equality_expression: 1 i  - int
                         relational_expression: 1 i  - int
                          shift_expression: 1 i  - int
                           additive_expression: 2 i  - int
                            additive_expression: 1 i  - int
                             multiplicative_expression: 1 i  - int
                              pm_expression: 1 i  - int
                               cast_expression: 1 i  - int
                                unary_expression: 1 i  - int
                                 postfix_expression: 1 i  - int
                                  primary_expression: 1 i  - int
                                   id_expression: 1 i  - int
                                    unqualified_id: 1 i  - int
                                     identifier: 1 i  - int
                                      IDENTIFIER: i - int
                            multiplicative_expression: 1 _Const_2  - int
                             pm_expression: 1 _Const_2  - int
                              cast_expression: 1 _Const_2  - int
                               unary_expression: 1 _Const_2  - int
                                postfix_expression: 1 _Const_2  - int
                                 primary_expression: 1 _Const_2  - int
                                  literal: 1 _Const_2  - int
                                   integer_literal: 1 _Const_2  - int
                                    INTEGER: 1 - int
         statement: 1 _Const_3  - int
          jump_statement: 2 _Const_3  - int
           RETURN: return - int
           expression_opt: 1 _Const_3  - int
            expression: 1 _Const_3  - int
             assignment_expression: 1 _Const_3  - int
              conditional_expression: 1 _Const_3  - int
               logical_or_expression: 1 _Const_3  - int
                logical_and_expression: 1 _Const_3  - int
                 inclusive_or_expression: 1 _Const_3  - int
                  exclusive_or_expression: 1 _Const_3  - int
                   and_expression: 1 _Const_3  - int
                    equality_expression: 1 _Const_3  - int
                     relational_expression: 1 _Const_3  - int
                      shift_expression: 1 _Const_3  - int
                       additive_expression: 1 _Const_3  - int
                        multiplicative_expression: 1 _Const_3  - int
                         pm_expression: 1 _Const_3  - int
                          cast_expression: 1 _Const_3  - int
                           unary_expression: 1 _Const_3  - int
                            postfix_expression: 1 _Const_3  - int
                             primary_expression: 1 _Const_3  - int
                              literal: 1 _Const_3  - int
                               integer_literal: 1 _Const_3  - int
                                INTEGER: 0 - int
*** print tree successful ***

3
