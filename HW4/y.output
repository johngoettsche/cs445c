State 0 conflicts: 1 shift/reduce
State 4 conflicts: 2 shift/reduce
State 7 conflicts: 4 shift/reduce
State 32 conflicts: 1 shift/reduce
State 50 conflicts: 1 shift/reduce
State 59 conflicts: 1 shift/reduce
State 83 conflicts: 1 shift/reduce
State 103 conflicts: 4 shift/reduce
State 112 conflicts: 1 shift/reduce
State 113 conflicts: 1 shift/reduce
State 116 conflicts: 2 shift/reduce
State 139 conflicts: 1 shift/reduce
State 140 conflicts: 1 shift/reduce
State 158 conflicts: 4 shift/reduce
State 159 conflicts: 2 shift/reduce
State 176 conflicts: 3 shift/reduce
State 177 conflicts: 3 shift/reduce
State 210 conflicts: 1 shift/reduce
State 222 conflicts: 1 shift/reduce
State 226 conflicts: 1 shift/reduce
State 228 conflicts: 1 shift/reduce
State 238 conflicts: 2 shift/reduce
State 241 conflicts: 1 shift/reduce
State 259 conflicts: 2 shift/reduce
State 266 conflicts: 1 shift/reduce
State 275 conflicts: 2 shift/reduce
State 301 conflicts: 1 shift/reduce
State 311 conflicts: 1 shift/reduce
State 347 conflicts: 1 shift/reduce
State 348 conflicts: 1 shift/reduce
State 352 conflicts: 1 shift/reduce
State 369 conflicts: 1 shift/reduce
State 371 conflicts: 1 shift/reduce
State 400 conflicts: 1 shift/reduce
State 411 conflicts: 1 shift/reduce
State 473 conflicts: 1 shift/reduce
State 474 conflicts: 1 shift/reduce
State 540 conflicts: 2 shift/reduce
State 545 conflicts: 2 shift/reduce
State 591 conflicts: 2 shift/reduce
State 622 conflicts: 1 shift/reduce
State 623 conflicts: 1 shift/reduce
State 672 conflicts: 2 shift/reduce
State 673 conflicts: 2 shift/reduce
State 677 conflicts: 2 shift/reduce
State 678 conflicts: 2 shift/reduce
State 683 conflicts: 1 shift/reduce
State 712 conflicts: 2 shift/reduce
State 756 conflicts: 2 shift/reduce
State 761 conflicts: 2 shift/reduce
State 790 conflicts: 1 shift/reduce
State 828 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 typedef_name: TYPEDEF_NAME

    2 namespace_name: original_namespace_name

    3 original_namespace_name: NAMESPACE_NAME

    4 class_name: CLASS_NAME
    5           | template_id

    6 enum_name: ENUM_NAME

    7 template_name: TEMPLATE_NAME

    8 identifier: IDENTIFIER

    9 literal: integer_literal
   10        | character_literal
   11        | floating_literal
   12        | string_literal
   13        | boolean_literal

   14 integer_literal: INTEGER

   15 character_literal: CHARACTER

   16 floating_literal: FLOATING

   17 string_literal: STRING

   18 boolean_literal: TRUE
   19                | FALSE

   20 translation_unit: declaration_seq_opt

   21 primary_expression: literal
   22                   | THIS
   23                   | '(' expression ')'
   24                   | id_expression

   25 id_expression: unqualified_id
   26              | qualified_id

   27 unqualified_id: identifier
   28               | operator_function_id
   29               | conversion_function_id
   30               | '~' class_name

   31 qualified_id: nested_name_specifier unqualified_id
   32             | nested_name_specifier TEMPLATE unqualified_id

   33 nested_name_specifier: class_name COLONCOLON nested_name_specifier
   34                      | namespace_name COLONCOLON nested_name_specifier
   35                      | class_name COLONCOLON
   36                      | namespace_name COLONCOLON

   37 postfix_expression: primary_expression
   38                   | postfix_expression '[' expression ']'
   39                   | postfix_expression '(' expression_list_opt ')'
   40                   | postfix_expression '.' TEMPLATE COLONCOLON id_expression
   41                   | postfix_expression '.' TEMPLATE id_expression
   42                   | postfix_expression '.' COLONCOLON id_expression
   43                   | postfix_expression '.' id_expression
   44                   | postfix_expression ARROW TEMPLATE COLONCOLON id_expression
   45                   | postfix_expression ARROW TEMPLATE id_expression
   46                   | postfix_expression ARROW COLONCOLON id_expression
   47                   | postfix_expression ARROW id_expression
   48                   | postfix_expression PLUSPLUS
   49                   | postfix_expression MINUSMINUS
   50                   | DYNAMIC_CAST '<' type_id '>' '(' expression ')'
   51                   | STATIC_CAST '<' type_id '>' '(' expression ')'
   52                   | REINTERPRET_CAST '<' type_id '>' '(' expression ')'
   53                   | CONST_CAST '<' type_id '>' '(' expression ')'
   54                   | TYPEID '(' expression ')'
   55                   | TYPEID '(' type_id ')'

   56 expression_list: assignment_expression
   57                | expression_list ',' assignment_expression

   58 unary_expression: postfix_expression
   59                 | PLUSPLUS cast_expression
   60                 | MINUSMINUS cast_expression
   61                 | '*' cast_expression
   62                 | '&' cast_expression
   63                 | unary_operator cast_expression
   64                 | SIZEOF unary_expression
   65                 | SIZEOF '(' type_id ')'
   66                 | new_expression
   67                 | delete_expression

   68 unary_operator: '+'
   69               | '-'
   70               | '!'
   71               | '~'

   72 new_expression: NEW new_placement_opt new_type_id new_initializer_opt
   73               | COLONCOLON NEW new_placement_opt new_type_id new_initializer_opt
   74               | NEW new_placement_opt '(' type_id ')' new_initializer_opt
   75               | COLONCOLON NEW new_placement_opt '(' type_id ')' new_initializer_opt

   76 new_placement: '(' expression_list ')'

   77 new_type_id: type_specifier_seq new_declarator_opt

   78 new_declarator: ptr_operator new_declarator_opt
   79               | direct_new_declarator

   80 direct_new_declarator: '[' expression ']'
   81                      | direct_new_declarator '[' constant_expression ']'

   82 new_initializer: '(' expression_list_opt ')'

   83 delete_expression: DELETE cast_expression
   84                  | COLONCOLON DELETE cast_expression
   85                  | DELETE '[' ']' cast_expression
   86                  | COLONCOLON DELETE '[' ']' cast_expression

   87 cast_expression: unary_expression
   88                | '(' type_id ')' cast_expression

   89 pm_expression: cast_expression
   90              | pm_expression DOTSTAR cast_expression
   91              | pm_expression ARROWSTAR cast_expression

   92 multiplicative_expression: pm_expression
   93                          | multiplicative_expression '*' pm_expression
   94                          | multiplicative_expression '/' pm_expression
   95                          | multiplicative_expression '%' pm_expression

   96 additive_expression: multiplicative_expression
   97                    | additive_expression '+' multiplicative_expression
   98                    | additive_expression '-' multiplicative_expression

   99 shift_expression: additive_expression
  100                 | shift_expression SL additive_expression
  101                 | shift_expression SR additive_expression

  102 relational_expression: shift_expression
  103                      | relational_expression '<' shift_expression
  104                      | relational_expression '>' shift_expression
  105                      | relational_expression LTEQ shift_expression
  106                      | relational_expression GTEQ shift_expression

  107 equality_expression: relational_expression
  108                    | equality_expression EQ relational_expression
  109                    | equality_expression NOTEQ relational_expression

  110 and_expression: equality_expression
  111               | and_expression '&' equality_expression

  112 exclusive_or_expression: and_expression
  113                        | exclusive_or_expression '^' and_expression

  114 inclusive_or_expression: exclusive_or_expression
  115                        | inclusive_or_expression '|' exclusive_or_expression

  116 logical_and_expression: inclusive_or_expression
  117                       | logical_and_expression ANDAND inclusive_or_expression

  118 logical_or_expression: logical_and_expression
  119                      | logical_or_expression OROR logical_and_expression

  120 conditional_expression: logical_or_expression
  121                       | logical_or_expression '?' expression ':' assignment_expression

  122 assignment_expression: conditional_expression
  123                      | logical_or_expression assignment_operator assignment_expression
  124                      | throw_expression

  125 assignment_operator: '='
  126                    | MULEQ
  127                    | DIVEQ
  128                    | MODEQ
  129                    | ADDEQ
  130                    | SUBEQ
  131                    | SREQ
  132                    | SLEQ
  133                    | ANDEQ
  134                    | XOREQ
  135                    | OREQ

  136 expression: assignment_expression
  137           | expression ',' assignment_expression

  138 constant_expression: conditional_expression

  139 statement: labeled_statement
  140          | expression_statement
  141          | compound_statement
  142          | selection_statement
  143          | iteration_statement
  144          | jump_statement
  145          | declaration_statement
  146          | try_block

  147 labeled_statement: identifier ':' statement
  148                  | CASE constant_expression ':' statement
  149                  | DEFAULT ':' statement

  150 expression_statement: expression_opt ';'

  151 compound_statement: '{' statement_seq_opt '}'

  152 statement_seq: statement
  153              | statement_seq statement

  154 selection_statement: IF '(' condition ')' statement
  155                    | IF '(' condition ')' statement ELSE statement
  156                    | SWITCH '(' condition ')' statement

  157 condition: expression
  158          | type_specifier_seq declarator '=' assignment_expression

  159 iteration_statement: WHILE '(' condition ')' statement
  160                    | DO statement WHILE '(' expression ')' ';'
  161                    | FOR '(' for_init_statement condition_opt ';' expression_opt ')' statement

  162 for_init_statement: expression_statement
  163                   | simple_declaration

  164 jump_statement: BREAK ';'
  165               | CONTINUE ';'
  166               | RETURN expression_opt ';'
  167               | GOTO identifier ';'

  168 declaration_statement: block_declaration

  169 declaration_seq: declaration
  170                | declaration_seq declaration

  171 declaration: block_declaration
  172            | function_definition
  173            | template_declaration
  174            | explicit_instantiation
  175            | explicit_specialization
  176            | linkage_specification
  177            | namespace_definition

  178 block_declaration: simple_declaration
  179                  | asm_definition
  180                  | namespace_alias_definition
  181                  | using_declaration
  182                  | using_directive

  183 simple_declaration: decl_specifier_seq init_declarator_list ';'
  184                   | decl_specifier_seq ';'

  185 decl_specifier: storage_class_specifier
  186               | type_specifier
  187               | function_specifier
  188               | FRIEND
  189               | TYPEDEF

  190 decl_specifier_seq: decl_specifier
  191                   | decl_specifier_seq decl_specifier

  192 storage_class_specifier: AUTO
  193                        | REGISTER
  194                        | STATIC
  195                        | EXTERN
  196                        | MUTABLE

  197 function_specifier: INLINE
  198                   | VIRTUAL
  199                   | EXPLICIT

  200 type_specifier: simple_type_specifier
  201               | class_specifier
  202               | enum_specifier
  203               | elaborated_type_specifier
  204               | cv_qualifier

  205 simple_type_specifier: type_name
  206                      | nested_name_specifier type_name
  207                      | COLONCOLON nested_name_specifier_opt type_name
  208                      | CHAR
  209                      | WCHAR_T
  210                      | BOOL
  211                      | SHORT
  212                      | INT
  213                      | LONG
  214                      | SIGNED
  215                      | UNSIGNED
  216                      | FLOAT
  217                      | DOUBLE
  218                      | VOID
  219                      | STR_TYPE

  220 type_name: class_name
  221          | enum_name
  222          | typedef_name

  223 elaborated_type_specifier: class_key COLONCOLON nested_name_specifier identifier
  224                          | class_key COLONCOLON identifier
  225                          | ENUM COLONCOLON nested_name_specifier identifier
  226                          | ENUM COLONCOLON identifier
  227                          | ENUM nested_name_specifier identifier
  228                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier
  229                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'

  230 enum_specifier: ENUM identifier '{' enumerator_list_opt '}'

  231 enumerator_list: enumerator_definition
  232                | enumerator_list ',' enumerator_definition

  233 enumerator_definition: enumerator
  234                      | enumerator '=' constant_expression

  235 enumerator: identifier

  236 namespace_definition: named_namespace_definition
  237                     | unnamed_namespace_definition

  238 named_namespace_definition: original_namespace_definition
  239                           | extension_namespace_definition

  240 original_namespace_definition: NAMESPACE identifier '{' namespace_body '}'

  241 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body '}'

  242 unnamed_namespace_definition: NAMESPACE '{' namespace_body '}'

  243 namespace_body: declaration_seq_opt

  244 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier ';'

  245 qualified_namespace_specifier: COLONCOLON nested_name_specifier namespace_name
  246                              | COLONCOLON namespace_name
  247                              | nested_name_specifier namespace_name
  248                              | namespace_name

  249 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier unqualified_id ';'
  250                  | USING TYPENAME nested_name_specifier unqualified_id ';'
  251                  | USING COLONCOLON nested_name_specifier unqualified_id ';'
  252                  | USING nested_name_specifier unqualified_id ';'
  253                  | USING COLONCOLON unqualified_id ';'

  254 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier namespace_name ';'
  255                | USING NAMESPACE COLONCOLON namespace_name ';'
  256                | USING NAMESPACE nested_name_specifier namespace_name ';'
  257                | USING NAMESPACE namespace_name ';'

  258 asm_definition: ASM '(' string_literal ')' ';'

  259 linkage_specification: EXTERN string_literal '{' declaration_seq_opt '}'
  260                      | EXTERN string_literal declaration

  261 init_declarator_list: init_declarator
  262                     | init_declarator_list ',' init_declarator

  263 init_declarator: declarator initializer_opt

  264 declarator: direct_declarator
  265           | ptr_operator declarator

  266 direct_declarator: declarator_id
  267                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  268                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq
  269                  | direct_declarator '(' parameter_declaration_clause ')' exception_specification
  270                  | direct_declarator '(' parameter_declaration_clause ')'
  271                  | CLASS_NAME '(' parameter_declaration_clause ')'
  272                  | CLASS_NAME COLONCOLON declarator_id '(' parameter_declaration_clause ')'
  273                  | CLASS_NAME COLONCOLON CLASS_NAME '(' parameter_declaration_clause ')'
  274                  | direct_declarator '[' constant_expression_opt ']'
  275                  | '(' declarator ')'

  276 ptr_operator: '*'
  277             | '*' cv_qualifier_seq
  278             | '&'
  279             | nested_name_specifier '*'
  280             | nested_name_specifier '*' cv_qualifier_seq
  281             | COLONCOLON nested_name_specifier '*'
  282             | COLONCOLON nested_name_specifier '*' cv_qualifier_seq

  283 cv_qualifier_seq: cv_qualifier
  284                 | cv_qualifier cv_qualifier_seq

  285 cv_qualifier: CONST
  286             | VOLATILE

  287 declarator_id: id_expression
  288              | COLONCOLON id_expression
  289              | COLONCOLON nested_name_specifier type_name
  290              | COLONCOLON type_name

  291 type_id: type_specifier_seq abstract_declarator_opt

  292 type_specifier_seq: type_specifier type_specifier_seq_opt

  293 abstract_declarator: ptr_operator abstract_declarator_opt
  294                    | direct_abstract_declarator

  295 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  296                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq
  297                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' exception_specification
  298                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')'
  299                           | direct_abstract_declarator_opt '[' constant_expression_opt ']'
  300                           | '(' abstract_declarator ')'

  301 parameter_declaration_clause: parameter_declaration_list ELLIPSIS
  302                             | parameter_declaration_list
  303                             | ELLIPSIS
  304                             | /* empty */
  305                             | parameter_declaration_list ',' ELLIPSIS

  306 parameter_declaration_list: parameter_declaration
  307                           | parameter_declaration_list ',' parameter_declaration

  308 parameter_declaration: decl_specifier_seq declarator
  309                      | decl_specifier_seq declarator '=' assignment_expression
  310                      | decl_specifier_seq abstract_declarator_opt
  311                      | decl_specifier_seq abstract_declarator_opt '=' assignment_expression

  312 function_definition: declarator ctor_initializer_opt function_body
  313                    | decl_specifier_seq declarator ctor_initializer_opt function_body
  314                    | declarator function_try_block
  315                    | decl_specifier_seq declarator function_try_block

  316 function_body: compound_statement

  317 initializer: '=' initializer_clause
  318            | '(' expression_list ')'

  319 initializer_clause: assignment_expression
  320                   | '{' initializer_list COMMA_opt '}'
  321                   | '{' '}'

  322 initializer_list: initializer_clause
  323                 | initializer_list ',' initializer_clause

  324 class_specifier: class_head '{' member_specification_opt '}'

  325 class_head: class_key class_name
  326           | class_key class_name base_clause
  327           | class_key nested_name_specifier class_name
  328           | class_key nested_name_specifier class_name base_clause

  329 class_key: CLASS
  330          | STRUCT
  331          | UNION

  332 member_specification: member_declaration member_specification_opt
  333                     | access_specifier ':' member_specification_opt

  334 member_declaration: decl_specifier_seq member_declarator_list ';'
  335                   | decl_specifier_seq ';'
  336                   | member_declarator_list ';'
  337                   | ';'
  338                   | function_definition SEMICOLON_opt
  339                   | qualified_id ';'
  340                   | using_declaration
  341                   | template_declaration

  342 member_declarator_list: member_declarator
  343                       | member_declarator_list ',' member_declarator

  344 member_declarator: declarator
  345                  | declarator pure_specifier
  346                  | declarator constant_initializer
  347                  | identifier ':' constant_expression

  348 pure_specifier: '=' '0'

  349 constant_initializer: '=' constant_expression

  350 base_clause: ':' base_specifier_list

  351 base_specifier_list: base_specifier
  352                    | base_specifier_list ',' base_specifier

  353 base_specifier: COLONCOLON nested_name_specifier class_name
  354               | COLONCOLON class_name
  355               | nested_name_specifier class_name
  356               | class_name
  357               | VIRTUAL access_specifier COLONCOLON nested_name_specifier_opt class_name
  358               | VIRTUAL access_specifier nested_name_specifier_opt class_name
  359               | VIRTUAL COLONCOLON nested_name_specifier_opt class_name
  360               | VIRTUAL nested_name_specifier_opt class_name
  361               | access_specifier VIRTUAL COLONCOLON nested_name_specifier_opt class_name
  362               | access_specifier VIRTUAL nested_name_specifier_opt class_name
  363               | access_specifier COLONCOLON nested_name_specifier_opt class_name
  364               | access_specifier nested_name_specifier_opt class_name

  365 access_specifier: PRIVATE
  366                 | PROTECTED
  367                 | PUBLIC

  368 conversion_function_id: OPERATOR conversion_type_id

  369 conversion_type_id: type_specifier_seq conversion_declarator_opt

  370 conversion_declarator: ptr_operator conversion_declarator_opt

  371 ctor_initializer: ':' mem_initializer_list

  372 mem_initializer_list: mem_initializer
  373                     | mem_initializer ',' mem_initializer_list

  374 mem_initializer: mem_initializer_id '(' expression_list_opt ')'

  375 mem_initializer_id: COLONCOLON nested_name_specifier class_name
  376                   | COLONCOLON class_name
  377                   | nested_name_specifier class_name
  378                   | class_name
  379                   | identifier

  380 operator_function_id: OPERATOR operator

  381 operator: NEW
  382         | DELETE
  383         | NEW '[' ']'
  384         | DELETE '[' ']'
  385         | '+'
  386         | '_'
  387         | '*'
  388         | '/'
  389         | '%'
  390         | '^'
  391         | '&'
  392         | '|'
  393         | '~'
  394         | '!'
  395         | '='
  396         | '<'
  397         | '>'
  398         | ADDEQ
  399         | SUBEQ
  400         | MULEQ
  401         | DIVEQ
  402         | MODEQ
  403         | XOREQ
  404         | ANDEQ
  405         | OREQ
  406         | SL
  407         | SR
  408         | SREQ
  409         | SLEQ
  410         | EQ
  411         | NOTEQ
  412         | LTEQ
  413         | GTEQ
  414         | ANDAND
  415         | OROR
  416         | PLUSPLUS
  417         | MINUSMINUS
  418         | ','
  419         | ARROWSTAR
  420         | ARROW
  421         | '(' ')'
  422         | '[' ']'

  423 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' declaration

  424 template_parameter_list: template_parameter
  425                        | template_parameter_list ',' template_parameter

  426 template_parameter: type_parameter
  427                   | parameter_declaration

  428 type_parameter: CLASS identifier
  429               | CLASS identifier '=' type_id
  430               | TYPENAME identifier
  431               | TYPENAME identifier '=' type_id
  432               | TEMPLATE '<' template_parameter_list '>' CLASS identifier
  433               | TEMPLATE '<' template_parameter_list '>' CLASS identifier '=' template_name

  434 template_id: template_name '<' template_argument_list '>'

  435 template_argument_list: template_argument
  436                       | template_argument_list ',' template_argument

  437 template_argument: assignment_expression
  438                  | type_id
  439                  | template_name

  440 explicit_instantiation: TEMPLATE declaration

  441 explicit_specialization: TEMPLATE '<' '>' declaration

  442 try_block: TRY compound_statement handler_seq

  443 function_try_block: TRY ctor_initializer_opt function_body handler_seq

  444 handler_seq: handler handler_seq_opt

  445 handler: CATCH '(' exception_declaration ')' compound_statement

  446 exception_declaration: type_specifier_seq declarator
  447                      | type_specifier_seq abstract_declarator
  448                      | type_specifier_seq
  449                      | ELLIPSIS

  450 throw_expression: THROW assignment_expression_opt

  451 exception_specification: THROW '(' type_id_list_opt ')'

  452 type_id_list: type_id
  453             | type_id_list ',' type_id

  454 declaration_seq_opt: /* empty */
  455                    | declaration_seq

  456 nested_name_specifier_opt: /* empty */
  457                          | nested_name_specifier

  458 expression_list_opt: /* empty */
  459                    | expression_list

  460 COLONCOLON_opt: /* empty */
  461               | COLONCOLON

  462 new_placement_opt: /* empty */
  463                  | new_placement

  464 new_initializer_opt: /* empty */
  465                    | new_initializer

  466 new_declarator_opt: /* empty */
  467                   | new_declarator

  468 expression_opt: /* empty */
  469               | expression

  470 statement_seq_opt: /* empty */
  471                  | statement_seq

  472 condition_opt: /* empty */
  473              | condition

  474 enumerator_list_opt: /* empty */
  475                    | enumerator_list

  476 initializer_opt: /* empty */
  477                | initializer

  478 constant_expression_opt: /* empty */
  479                        | constant_expression

  480 abstract_declarator_opt: /* empty */
  481                        | abstract_declarator

  482 type_specifier_seq_opt: /* empty */
  483                       | type_specifier_seq

  484 direct_abstract_declarator_opt: /* empty */
  485                               | direct_abstract_declarator

  486 ctor_initializer_opt: /* empty */
  487                     | ctor_initializer

  488 COMMA_opt: /* empty */
  489          | ','

  490 member_specification_opt: /* empty */
  491                         | member_specification

  492 SEMICOLON_opt: /* empty */
  493              | ';'

  494 conversion_declarator_opt: /* empty */
  495                          | conversion_declarator

  496 EXPORT_opt: /* empty */
  497           | EXPORT

  498 handler_seq_opt: /* empty */
  499                | handler_seq

  500 assignment_expression_opt: /* empty */
  501                          | assignment_expression

  502 type_id_list_opt: /* empty */
  503                 | type_id_list


Terminals, with rules where they appear

$end (0) 0
'!' (33) 70 394
'%' (37) 95 389
'&' (38) 62 111 278 391
'(' (40) 23 39 50 51 52 53 54 55 65 74 75 76 82 88 154 155 156 159
    160 161 258 267 268 269 270 271 272 273 275 295 296 297 298 300
    318 374 421 445 451
')' (41) 23 39 50 51 52 53 54 55 65 74 75 76 82 88 154 155 156 159
    160 161 258 267 268 269 270 271 272 273 275 295 296 297 298 300
    318 374 421 445 451
'*' (42) 61 93 276 277 279 280 281 282 387
'+' (43) 68 97 385
',' (44) 57 137 232 262 305 307 323 343 352 373 418 425 436 453 489
'-' (45) 69 98
'.' (46) 40 41 42 43
'/' (47) 94 388
'0' (48) 348
':' (58) 121 147 148 149 333 347 350 371
';' (59) 150 160 161 164 165 166 167 183 184 244 249 250 251 252 253
    254 255 256 257 258 334 335 336 337 339 493
'<' (60) 50 51 52 53 103 229 396 423 432 433 434 441
'=' (61) 125 158 234 244 309 311 317 348 349 395 429 431 433
'>' (62) 50 51 52 53 104 229 397 423 432 433 434 441
'?' (63) 121
'[' (91) 38 80 81 85 86 274 299 383 384 422
']' (93) 38 80 81 85 86 274 299 383 384 422
'^' (94) 113 390
'_' (95) 386
'{' (123) 151 230 240 241 242 259 320 321 324
'|' (124) 115 392
'}' (125) 151 230 240 241 242 259 320 321 324
'~' (126) 30 71 393
error (256)
IDENTIFIER (258) 8
INTEGER (259) 14
FLOATING (260) 16
CHARACTER (261) 15
STRING (262) 17
TYPEDEF_NAME (263) 1
NAMESPACE_NAME (264) 3
CLASS_NAME (265) 4 271 272 273
ENUM_NAME (266) 6
TEMPLATE_NAME (267) 7
ELLIPSIS (268) 301 303 305 449
COLONCOLON (269) 33 34 35 36 40 42 44 46 73 75 84 86 207 223 224 225
    226 245 246 249 251 253 254 255 272 273 281 282 288 289 290 353
    354 357 359 361 363 375 376 461
DOTSTAR (270) 90
ADDEQ (271) 129 398
SUBEQ (272) 130 399
MULEQ (273) 126 400
DIVEQ (274) 127 401
MODEQ (275) 128 402
XOREQ (276) 134 403
ANDEQ (277) 133 404
OREQ (278) 135 405
SL (279) 100 406
SR (280) 101 407
SREQ (281) 131 408
SLEQ (282) 132 409
EQ (283) 108 410
NOTEQ (284) 109 411
LTEQ (285) 105 412
GTEQ (286) 106 413
ANDAND (287) 117 414
OROR (288) 119 415
PLUSPLUS (289) 48 59 416
MINUSMINUS (290) 49 60 417
ARROWSTAR (291) 91 419
ARROW (292) 44 45 46 47 420
ASM (293) 258
AUTO (294) 192
BOOL (295) 210
BREAK (296) 164
CASE (297) 148
CATCH (298) 445
CHAR (299) 208
CLASS (300) 329 428 429 432 433
CONST (301) 285
CONST_CAST (302) 53
CONTINUE (303) 165
DEFAULT (304) 149
DELETE (305) 83 84 85 86 382 384
DO (306) 160
DOUBLE (307) 217
DYNAMIC_CAST (308) 50
ELSE (309) 155
ENUM (310) 225 226 227 230
EXPLICIT (311) 199
EXPORT (312) 497
EXTERN (313) 195 259 260
FALSE (314) 19
FLOAT (315) 216
FOR (316) 161
FRIEND (317) 188
GOTO (318) 167
IF (319) 154 155
INLINE (320) 197
INT (321) 212
LONG (322) 213
MUTABLE (323) 196
NAMESPACE (324) 240 241 242 244 254 255 256 257
NEW (325) 72 73 74 75 381 383
OPERATOR (326) 368 380
PRIVATE (327) 365
PROTECTED (328) 366
PUBLIC (329) 367
REGISTER (330) 193
REINTERPRET_CAST (331) 52
RETURN (332) 166
SHORT (333) 211
SIGNED (334) 214
SIZEOF (335) 64 65
STATIC (336) 194
STATIC_CAST (337) 51
STRUCT (338) 330
SWITCH (339) 156
TEMPLATE (340) 32 40 41 44 45 423 432 433 440 441
THIS (341) 22
THROW (342) 450 451
TRUE (343) 18
TRY (344) 442 443
TYPEDEF (345) 189
TYPEID (346) 54 55
TYPENAME (347) 228 229 249 250 430 431
UNION (348) 331
UNSIGNED (349) 215
USING (350) 249 250 251 252 253 254 255 256 257
VIRTUAL (351) 198 357 358 359 360 361 362
VOID (352) 218
VOLATILE (353) 286
WCHAR_T (354) 209
WHILE (355) 159 160
STR_TYPE (356) 219


Nonterminals, with rules where they appear

$accept (128)
    on left: 0
typedef_name (129)
    on left: 1, on right: 222
namespace_name (130)
    on left: 2, on right: 34 36 245 246 247 248 254 255 256 257
original_namespace_name (131)
    on left: 3, on right: 2 241
class_name (132)
    on left: 4 5, on right: 30 33 35 220 325 326 327 328 353 354 355
    356 357 358 359 360 361 362 363 364 375 376 377 378
enum_name (133)
    on left: 6, on right: 221
template_name (134)
    on left: 7, on right: 433 434 439
identifier (135)
    on left: 8, on right: 27 147 167 223 224 225 226 227 228 229 230
    235 240 244 347 379 428 429 430 431 432 433
literal (136)
    on left: 9 10 11 12 13, on right: 21
integer_literal (137)
    on left: 14, on right: 9
character_literal (138)
    on left: 15, on right: 10
floating_literal (139)
    on left: 16, on right: 11
string_literal (140)
    on left: 17, on right: 12 258 259 260
boolean_literal (141)
    on left: 18 19, on right: 13
translation_unit (142)
    on left: 20, on right: 0
primary_expression (143)
    on left: 21 22 23 24, on right: 37
id_expression (144)
    on left: 25 26, on right: 24 40 41 42 43 44 45 46 47 287 288
unqualified_id (145)
    on left: 27 28 29 30, on right: 25 31 32 249 250 251 252 253
qualified_id (146)
    on left: 31 32, on right: 26 339
nested_name_specifier (147)
    on left: 33 34 35 36, on right: 31 32 33 34 206 223 225 227 228
    229 245 247 249 250 251 252 254 256 279 280 281 282 289 327 328
    353 355 375 377 457
postfix_expression (148)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
    55, on right: 38 39 40 41 42 43 44 45 46 47 48 49 58
expression_list (149)
    on left: 56 57, on right: 57 76 318 459
unary_expression (150)
    on left: 58 59 60 61 62 63 64 65 66 67, on right: 64 87
unary_operator (151)
    on left: 68 69 70 71, on right: 63
new_expression (152)
    on left: 72 73 74 75, on right: 66
new_placement (153)
    on left: 76, on right: 463
new_type_id (154)
    on left: 77, on right: 72 73
new_declarator (155)
    on left: 78 79, on right: 467
direct_new_declarator (156)
    on left: 80 81, on right: 79 81
new_initializer (157)
    on left: 82, on right: 465
delete_expression (158)
    on left: 83 84 85 86, on right: 67
cast_expression (159)
    on left: 87 88, on right: 59 60 61 62 63 83 84 85 86 88 89 90 91
pm_expression (160)
    on left: 89 90 91, on right: 90 91 92 93 94 95
multiplicative_expression (161)
    on left: 92 93 94 95, on right: 93 94 95 96 97 98
additive_expression (162)
    on left: 96 97 98, on right: 97 98 99 100 101
shift_expression (163)
    on left: 99 100 101, on right: 100 101 102 103 104 105 106
relational_expression (164)
    on left: 102 103 104 105 106, on right: 103 104 105 106 107 108
    109
equality_expression (165)
    on left: 107 108 109, on right: 108 109 110 111
and_expression (166)
    on left: 110 111, on right: 111 112 113
exclusive_or_expression (167)
    on left: 112 113, on right: 113 114 115
inclusive_or_expression (168)
    on left: 114 115, on right: 115 116 117
logical_and_expression (169)
    on left: 116 117, on right: 117 118 119
logical_or_expression (170)
    on left: 118 119, on right: 119 120 121 123
conditional_expression (171)
    on left: 120 121, on right: 122 138
assignment_expression (172)
    on left: 122 123 124, on right: 56 57 121 123 136 137 158 309 311
    319 437 501
assignment_operator (173)
    on left: 125 126 127 128 129 130 131 132 133 134 135, on right:
    123
expression (174)
    on left: 136 137, on right: 23 38 50 51 52 53 54 80 121 137 157
    160 469
constant_expression (175)
    on left: 138, on right: 81 148 234 347 349 479
statement (176)
    on left: 139 140 141 142 143 144 145 146, on right: 147 148 149
    152 153 154 155 156 159 160 161
labeled_statement (177)
    on left: 147 148 149, on right: 139
expression_statement (178)
    on left: 150, on right: 140 162
compound_statement (179)
    on left: 151, on right: 141 316 442 445
statement_seq (180)
    on left: 152 153, on right: 153 471
selection_statement (181)
    on left: 154 155 156, on right: 142
condition (182)
    on left: 157 158, on right: 154 155 156 159 473
iteration_statement (183)
    on left: 159 160 161, on right: 143
for_init_statement (184)
    on left: 162 163, on right: 161
jump_statement (185)
    on left: 164 165 166 167, on right: 144
declaration_statement (186)
    on left: 168, on right: 145
declaration_seq (187)
    on left: 169 170, on right: 170 455
declaration (188)
    on left: 171 172 173 174 175 176 177, on right: 169 170 260 423
    440 441
block_declaration (189)
    on left: 178 179 180 181 182, on right: 168 171
simple_declaration (190)
    on left: 183 184, on right: 163 178
decl_specifier (191)
    on left: 185 186 187 188 189, on right: 190 191
decl_specifier_seq (192)
    on left: 190 191, on right: 183 184 191 308 309 310 311 313 315
    334 335
storage_class_specifier (193)
    on left: 192 193 194 195 196, on right: 185
function_specifier (194)
    on left: 197 198 199, on right: 187
type_specifier (195)
    on left: 200 201 202 203 204, on right: 186 292
simple_type_specifier (196)
    on left: 205 206 207 208 209 210 211 212 213 214 215 216 217 218
    219, on right: 200
type_name (197)
    on left: 220 221 222, on right: 205 206 207 289 290
elaborated_type_specifier (198)
    on left: 223 224 225 226 227 228 229, on right: 203
enum_specifier (199)
    on left: 230, on right: 202
enumerator_list (200)
    on left: 231 232, on right: 232 475
enumerator_definition (201)
    on left: 233 234, on right: 231 232
enumerator (202)
    on left: 235, on right: 233 234
namespace_definition (203)
    on left: 236 237, on right: 177
named_namespace_definition (204)
    on left: 238 239, on right: 236
original_namespace_definition (205)
    on left: 240, on right: 238
extension_namespace_definition (206)
    on left: 241, on right: 239
unnamed_namespace_definition (207)
    on left: 242, on right: 237
namespace_body (208)
    on left: 243, on right: 240 241 242
namespace_alias_definition (209)
    on left: 244, on right: 180
qualified_namespace_specifier (210)
    on left: 245 246 247 248, on right: 244
using_declaration (211)
    on left: 249 250 251 252 253, on right: 181 340
using_directive (212)
    on left: 254 255 256 257, on right: 182
asm_definition (213)
    on left: 258, on right: 179
linkage_specification (214)
    on left: 259 260, on right: 176
init_declarator_list (215)
    on left: 261 262, on right: 183 262
init_declarator (216)
    on left: 263, on right: 261 262
declarator (217)
    on left: 264 265, on right: 158 263 265 275 308 309 312 313 314
    315 344 345 346 446
direct_declarator (218)
    on left: 266 267 268 269 270 271 272 273 274 275, on right: 264
    267 268 269 270 274
ptr_operator (219)
    on left: 276 277 278 279 280 281 282, on right: 78 265 293 370
cv_qualifier_seq (220)
    on left: 283 284, on right: 267 268 277 280 282 284 295 296
cv_qualifier (221)
    on left: 285 286, on right: 204 283 284
declarator_id (222)
    on left: 287 288 289 290, on right: 266 272
type_id (223)
    on left: 291, on right: 50 51 52 53 55 65 74 75 88 429 431 438
    452 453
type_specifier_seq (224)
    on left: 292, on right: 77 158 291 369 446 447 448 483
abstract_declarator (225)
    on left: 293 294, on right: 300 447 481
direct_abstract_declarator (226)
    on left: 295 296 297 298 299 300, on right: 294 485
parameter_declaration_clause (227)
    on left: 301 302 303 304 305, on right: 267 268 269 270 271 272
    273 295 296 297 298
parameter_declaration_list (228)
    on left: 306 307, on right: 301 302 305 307
parameter_declaration (229)
    on left: 308 309 310 311, on right: 306 307 427
function_definition (230)
    on left: 312 313 314 315, on right: 172 338
function_body (231)
    on left: 316, on right: 312 313 443
initializer (232)
    on left: 317 318, on right: 477
initializer_clause (233)
    on left: 319 320 321, on right: 317 322 323
initializer_list (234)
    on left: 322 323, on right: 320 323
class_specifier (235)
    on left: 324, on right: 201
class_head (236)
    on left: 325 326 327 328, on right: 324
class_key (237)
    on left: 329 330 331, on right: 223 224 325 326 327 328
member_specification (238)
    on left: 332 333, on right: 491
member_declaration (239)
    on left: 334 335 336 337 338 339 340 341, on right: 332
member_declarator_list (240)
    on left: 342 343, on right: 334 336 343
member_declarator (241)
    on left: 344 345 346 347, on right: 342 343
pure_specifier (242)
    on left: 348, on right: 345
constant_initializer (243)
    on left: 349, on right: 346
base_clause (244)
    on left: 350, on right: 326 328
base_specifier_list (245)
    on left: 351 352, on right: 350 352
base_specifier (246)
    on left: 353 354 355 356 357 358 359 360 361 362 363 364, on right:
    351 352
access_specifier (247)
    on left: 365 366 367, on right: 333 357 358 361 362 363 364
conversion_function_id (248)
    on left: 368, on right: 29
conversion_type_id (249)
    on left: 369, on right: 368
conversion_declarator (250)
    on left: 370, on right: 495
ctor_initializer (251)
    on left: 371, on right: 487
mem_initializer_list (252)
    on left: 372 373, on right: 371 373
mem_initializer (253)
    on left: 374, on right: 372 373
mem_initializer_id (254)
    on left: 375 376 377 378 379, on right: 374
operator_function_id (255)
    on left: 380, on right: 28
operator (256)
    on left: 381 382 383 384 385 386 387 388 389 390 391 392 393 394
    395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410
    411 412 413 414 415 416 417 418 419 420 421 422, on right: 380
template_declaration (257)
    on left: 423, on right: 173 341
template_parameter_list (258)
    on left: 424 425, on right: 423 425 432 433
template_parameter (259)
    on left: 426 427, on right: 424 425
type_parameter (260)
    on left: 428 429 430 431 432 433, on right: 426
template_id (261)
    on left: 434, on right: 5
template_argument_list (262)
    on left: 435 436, on right: 229 434 436
template_argument (263)
    on left: 437 438 439, on right: 435 436
explicit_instantiation (264)
    on left: 440, on right: 174
explicit_specialization (265)
    on left: 441, on right: 175
try_block (266)
    on left: 442, on right: 146
function_try_block (267)
    on left: 443, on right: 314 315
handler_seq (268)
    on left: 444, on right: 442 443 499
handler (269)
    on left: 445, on right: 444
exception_declaration (270)
    on left: 446 447 448 449, on right: 445
throw_expression (271)
    on left: 450, on right: 124
exception_specification (272)
    on left: 451, on right: 267 269 295 297
type_id_list (273)
    on left: 452 453, on right: 453 503
declaration_seq_opt (274)
    on left: 454 455, on right: 20 243 259
nested_name_specifier_opt (275)
    on left: 456 457, on right: 207 357 358 359 360 361 362 363 364
expression_list_opt (276)
    on left: 458 459, on right: 39 82 374
COLONCOLON_opt (277)
    on left: 460 461, on right: 228 229
new_placement_opt (278)
    on left: 462 463, on right: 72 73 74 75
new_initializer_opt (279)
    on left: 464 465, on right: 72 73 74 75
new_declarator_opt (280)
    on left: 466 467, on right: 77 78
expression_opt (281)
    on left: 468 469, on right: 150 161 166
statement_seq_opt (282)
    on left: 470 471, on right: 151
condition_opt (283)
    on left: 472 473, on right: 161
enumerator_list_opt (284)
    on left: 474 475, on right: 230
initializer_opt (285)
    on left: 476 477, on right: 263
constant_expression_opt (286)
    on left: 478 479, on right: 274 299
abstract_declarator_opt (287)
    on left: 480 481, on right: 291 293 310 311
type_specifier_seq_opt (288)
    on left: 482 483, on right: 292
direct_abstract_declarator_opt (289)
    on left: 484 485, on right: 295 296 297 298 299
ctor_initializer_opt (290)
    on left: 486 487, on right: 312 313 443
COMMA_opt (291)
    on left: 488 489, on right: 320
member_specification_opt (292)
    on left: 490 491, on right: 324 332 333
SEMICOLON_opt (293)
    on left: 492 493, on right: 338
conversion_declarator_opt (294)
    on left: 494 495, on right: 369 370
EXPORT_opt (295)
    on left: 496 497, on right: 423
handler_seq_opt (296)
    on left: 498 499, on right: 444
assignment_expression_opt (297)
    on left: 500 501, on right: 450
type_id_list_opt (298)
    on left: 502 503, on right: 451


state 0

    0 $accept: . translation_unit $end

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 496 (EXPORT_opt)]
    $default  reduce using rule 454 (declaration_seq_opt)

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    translation_unit                go to state 54
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration_seq                 go to state 59
    declaration                     go to state 60
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    declaration_seq_opt             go to state 97
    EXPORT_opt                      go to state 98


state 1

    8 identifier: IDENTIFIER .

    $default  reduce using rule 8 (identifier)


state 2

    1 typedef_name: TYPEDEF_NAME .

    $default  reduce using rule 1 (typedef_name)


state 3

    3 original_namespace_name: NAMESPACE_NAME .

    $default  reduce using rule 3 (original_namespace_name)


state 4

    4 class_name: CLASS_NAME .
  271 direct_declarator: CLASS_NAME . '(' parameter_declaration_clause ')'
  272                  | CLASS_NAME . COLONCOLON declarator_id '(' parameter_declaration_clause ')'
  273                  | CLASS_NAME . COLONCOLON CLASS_NAME '(' parameter_declaration_clause ')'

    COLONCOLON  shift, and go to state 99
    '('         shift, and go to state 100

    COLONCOLON  [reduce using rule 4 (class_name)]
    '('         [reduce using rule 4 (class_name)]
    $default    reduce using rule 4 (class_name)


state 5

    6 enum_name: ENUM_NAME .

    $default  reduce using rule 6 (enum_name)


state 6

    7 template_name: TEMPLATE_NAME .

    $default  reduce using rule 7 (template_name)


state 7

  207 simple_type_specifier: COLONCOLON . nested_name_specifier_opt type_name
  281 ptr_operator: COLONCOLON . nested_name_specifier '*'
  282             | COLONCOLON . nested_name_specifier '*' cv_qualifier_seq
  288 declarator_id: COLONCOLON . id_expression
  289              | COLONCOLON . nested_name_specifier type_name
  290              | COLONCOLON . type_name

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    TYPEDEF_NAME   [reduce using rule 456 (nested_name_specifier_opt)]
    CLASS_NAME     [reduce using rule 456 (nested_name_specifier_opt)]
    ENUM_NAME      [reduce using rule 456 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 456 (nested_name_specifier_opt)]

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    id_expression              go to state 102
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 103
    type_name                  go to state 104
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    nested_name_specifier_opt  go to state 105


state 8

  258 asm_definition: ASM . '(' string_literal ')' ';'

    '('  shift, and go to state 106


state 9

  192 storage_class_specifier: AUTO .

    $default  reduce using rule 192 (storage_class_specifier)


state 10

  210 simple_type_specifier: BOOL .

    $default  reduce using rule 210 (simple_type_specifier)


state 11

  208 simple_type_specifier: CHAR .

    $default  reduce using rule 208 (simple_type_specifier)


state 12

  329 class_key: CLASS .

    $default  reduce using rule 329 (class_key)


state 13

  285 cv_qualifier: CONST .

    $default  reduce using rule 285 (cv_qualifier)


state 14

  217 simple_type_specifier: DOUBLE .

    $default  reduce using rule 217 (simple_type_specifier)


state 15

  225 elaborated_type_specifier: ENUM . COLONCOLON nested_name_specifier identifier
  226                          | ENUM . COLONCOLON identifier
  227                          | ENUM . nested_name_specifier identifier
  230 enum_specifier: ENUM . identifier '{' enumerator_list_opt '}'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 107

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 109
    nested_name_specifier    go to state 110
    template_id              go to state 94


state 16

  199 function_specifier: EXPLICIT .

    $default  reduce using rule 199 (function_specifier)


state 17

  497 EXPORT_opt: EXPORT .

    $default  reduce using rule 497 (EXPORT_opt)


state 18

  195 storage_class_specifier: EXTERN .
  259 linkage_specification: EXTERN . string_literal '{' declaration_seq_opt '}'
  260                      | EXTERN . string_literal declaration

    STRING  shift, and go to state 111

    $default  reduce using rule 195 (storage_class_specifier)

    string_literal  go to state 112


state 19

  216 simple_type_specifier: FLOAT .

    $default  reduce using rule 216 (simple_type_specifier)


state 20

  188 decl_specifier: FRIEND .

    $default  reduce using rule 188 (decl_specifier)


state 21

  197 function_specifier: INLINE .

    $default  reduce using rule 197 (function_specifier)


state 22

  212 simple_type_specifier: INT .

    $default  reduce using rule 212 (simple_type_specifier)


state 23

  213 simple_type_specifier: LONG .

    $default  reduce using rule 213 (simple_type_specifier)


state 24

  196 storage_class_specifier: MUTABLE .

    $default  reduce using rule 196 (storage_class_specifier)


state 25

  240 original_namespace_definition: NAMESPACE . identifier '{' namespace_body '}'
  241 extension_namespace_definition: NAMESPACE . original_namespace_name '{' namespace_body '}'
  242 unnamed_namespace_definition: NAMESPACE . '{' namespace_body '}'
  244 namespace_alias_definition: NAMESPACE . identifier '=' qualified_namespace_specifier ';'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    '{'             shift, and go to state 113

    original_namespace_name  go to state 114
    identifier               go to state 115


state 26

  368 conversion_function_id: OPERATOR . conversion_type_id
  380 operator_function_id: OPERATOR . operator

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 116
    ADDEQ           shift, and go to state 117
    SUBEQ           shift, and go to state 118
    MULEQ           shift, and go to state 119
    DIVEQ           shift, and go to state 120
    MODEQ           shift, and go to state 121
    XOREQ           shift, and go to state 122
    ANDEQ           shift, and go to state 123
    OREQ            shift, and go to state 124
    SL              shift, and go to state 125
    SR              shift, and go to state 126
    SREQ            shift, and go to state 127
    SLEQ            shift, and go to state 128
    EQ              shift, and go to state 129
    NOTEQ           shift, and go to state 130
    LTEQ            shift, and go to state 131
    GTEQ            shift, and go to state 132
    ANDAND          shift, and go to state 133
    OROR            shift, and go to state 134
    PLUSPLUS        shift, and go to state 135
    MINUSMINUS      shift, and go to state 136
    ARROWSTAR       shift, and go to state 137
    ARROW           shift, and go to state 138
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DELETE          shift, and go to state 139
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    NEW             shift, and go to state 140
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 141
    '~'             shift, and go to state 142
    '['             shift, and go to state 143
    '<'             shift, and go to state 144
    '>'             shift, and go to state 145
    ','             shift, and go to state 146
    '*'             shift, and go to state 147
    '&'             shift, and go to state 148
    '+'             shift, and go to state 149
    '!'             shift, and go to state 150
    '/'             shift, and go to state 151
    '%'             shift, and go to state 152
    '^'             shift, and go to state 153
    '|'             shift, and go to state 154
    '='             shift, and go to state 155
    '_'             shift, and go to state 156

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 157
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 159
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_type_id         go to state 160
    operator                   go to state 161
    template_id                go to state 94


state 27

  193 storage_class_specifier: REGISTER .

    $default  reduce using rule 193 (storage_class_specifier)


state 28

  211 simple_type_specifier: SHORT .

    $default  reduce using rule 211 (simple_type_specifier)


state 29

  214 simple_type_specifier: SIGNED .

    $default  reduce using rule 214 (simple_type_specifier)


state 30

  194 storage_class_specifier: STATIC .

    $default  reduce using rule 194 (storage_class_specifier)


state 31

  330 class_key: STRUCT .

    $default  reduce using rule 330 (class_key)


state 32

  440 explicit_instantiation: TEMPLATE . declaration
  441 explicit_specialization: TEMPLATE . '<' '>' declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '<'             shift, and go to state 162
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 496 (EXPORT_opt)]

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration                     go to state 163
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    EXPORT_opt                      go to state 98


state 33

  189 decl_specifier: TYPEDEF .

    $default  reduce using rule 189 (decl_specifier)


state 34

  228 elaborated_type_specifier: TYPENAME . COLONCOLON_opt nested_name_specifier identifier
  229                          | TYPENAME . COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'

    COLONCOLON  shift, and go to state 164

    $default  reduce using rule 460 (COLONCOLON_opt)

    COLONCOLON_opt  go to state 165


state 35

  331 class_key: UNION .

    $default  reduce using rule 331 (class_key)


state 36

  215 simple_type_specifier: UNSIGNED .

    $default  reduce using rule 215 (simple_type_specifier)


state 37

  249 using_declaration: USING . TYPENAME COLONCOLON nested_name_specifier unqualified_id ';'
  250                  | USING . TYPENAME nested_name_specifier unqualified_id ';'
  251                  | USING . COLONCOLON nested_name_specifier unqualified_id ';'
  252                  | USING . nested_name_specifier unqualified_id ';'
  253                  | USING . COLONCOLON unqualified_id ';'
  254 using_directive: USING . NAMESPACE COLONCOLON nested_name_specifier namespace_name ';'
  255                | USING . NAMESPACE COLONCOLON namespace_name ';'
  256                | USING . NAMESPACE nested_name_specifier namespace_name ';'
  257                | USING . NAMESPACE namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 166
    NAMESPACE       shift, and go to state 167
    TYPENAME        shift, and go to state 168

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    nested_name_specifier    go to state 169
    template_id              go to state 94


state 38

  198 function_specifier: VIRTUAL .

    $default  reduce using rule 198 (function_specifier)


state 39

  218 simple_type_specifier: VOID .

    $default  reduce using rule 218 (simple_type_specifier)


state 40

  286 cv_qualifier: VOLATILE .

    $default  reduce using rule 286 (cv_qualifier)


state 41

  209 simple_type_specifier: WCHAR_T .

    $default  reduce using rule 209 (simple_type_specifier)


state 42

  219 simple_type_specifier: STR_TYPE .

    $default  reduce using rule 219 (simple_type_specifier)


state 43

  275 direct_declarator: '(' . declarator ')'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 170
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 55
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 171
    declarator               go to state 172
    direct_declarator        go to state 83
    ptr_operator             go to state 84
    declarator_id            go to state 86
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 44

   30 unqualified_id: '~' . class_name

    CLASS_NAME     shift, and go to state 101
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 173
    template_name  go to state 52
    template_id    go to state 94


state 45

  276 ptr_operator: '*' .
  277             | '*' . cv_qualifier_seq

    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 276 (ptr_operator)

    cv_qualifier_seq  go to state 174
    cv_qualifier      go to state 175


state 46

  278 ptr_operator: '&' .

    $default  reduce using rule 278 (ptr_operator)


state 47

  222 type_name: typedef_name .

    $default  reduce using rule 222 (type_name)


state 48

   34 nested_name_specifier: namespace_name . COLONCOLON nested_name_specifier
   36                      | namespace_name . COLONCOLON

    COLONCOLON  shift, and go to state 176


state 49

    2 namespace_name: original_namespace_name .

    $default  reduce using rule 2 (namespace_name)


state 50

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON
  220 type_name: class_name .

    COLONCOLON  shift, and go to state 177

    COLONCOLON  [reduce using rule 220 (type_name)]
    $default    reduce using rule 220 (type_name)


state 51

  221 type_name: enum_name .

    $default  reduce using rule 221 (type_name)


state 52

  434 template_id: template_name . '<' template_argument_list '>'

    '<'  shift, and go to state 178


state 53

   27 unqualified_id: identifier .

    $default  reduce using rule 27 (unqualified_id)


state 54

    0 $accept: translation_unit . $end

    $end  shift, and go to state 179


state 55

  287 declarator_id: id_expression .

    $default  reduce using rule 287 (declarator_id)


state 56

   25 id_expression: unqualified_id .

    $default  reduce using rule 25 (id_expression)


state 57

   26 id_expression: qualified_id .

    $default  reduce using rule 26 (id_expression)


state 58

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  206 simple_type_specifier: nested_name_specifier . type_name
  279 ptr_operator: nested_name_specifier . '*'
  280             | nested_name_specifier . '*' cv_qualifier_seq

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 101
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 180
    '~'            shift, and go to state 44
    '*'            shift, and go to state 181

    typedef_name            go to state 47
    class_name              go to state 182
    enum_name               go to state 51
    template_name           go to state 52
    identifier              go to state 53
    unqualified_id          go to state 183
    type_name               go to state 184
    conversion_function_id  go to state 91
    operator_function_id    go to state 92
    template_id             go to state 94


state 59

  170 declaration_seq: declaration_seq . declaration
  455 declaration_seq_opt: declaration_seq .

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 496 (EXPORT_opt)]
    $default  reduce using rule 455 (declaration_seq_opt)

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration                     go to state 185
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    EXPORT_opt                      go to state 98


state 60

  169 declaration_seq: declaration .

    $default  reduce using rule 169 (declaration_seq)


state 61

  171 declaration: block_declaration .

    $default  reduce using rule 171 (declaration)


state 62

  178 block_declaration: simple_declaration .

    $default  reduce using rule 178 (block_declaration)


state 63

  190 decl_specifier_seq: decl_specifier .

    $default  reduce using rule 190 (decl_specifier_seq)


state 64

  183 simple_declaration: decl_specifier_seq . init_declarator_list ';'
  184                   | decl_specifier_seq . ';'
  191 decl_specifier_seq: decl_specifier_seq . decl_specifier
  313 function_definition: decl_specifier_seq . declarator ctor_initializer_opt function_body
  315                    | decl_specifier_seq . declarator function_try_block

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 186
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46
    ';'             shift, and go to state 187

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    id_expression              go to state 55
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 58
    decl_specifier             go to state 188
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    init_declarator_list       go to state 189
    init_declarator            go to state 190
    declarator                 go to state 191
    direct_declarator          go to state 83
    ptr_operator               go to state 84
    cv_qualifier               go to state 85
    declarator_id              go to state 86
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 65

  185 decl_specifier: storage_class_specifier .

    $default  reduce using rule 185 (decl_specifier)


state 66

  187 decl_specifier: function_specifier .

    $default  reduce using rule 187 (decl_specifier)


state 67

  186 decl_specifier: type_specifier .

    $default  reduce using rule 186 (decl_specifier)


state 68

  200 type_specifier: simple_type_specifier .

    $default  reduce using rule 200 (type_specifier)


state 69

  205 simple_type_specifier: type_name .

    $default  reduce using rule 205 (simple_type_specifier)


state 70

  203 type_specifier: elaborated_type_specifier .

    $default  reduce using rule 203 (type_specifier)


state 71

  202 type_specifier: enum_specifier .

    $default  reduce using rule 202 (type_specifier)


state 72

  177 declaration: namespace_definition .

    $default  reduce using rule 177 (declaration)


state 73

  236 namespace_definition: named_namespace_definition .

    $default  reduce using rule 236 (namespace_definition)


state 74

  238 named_namespace_definition: original_namespace_definition .

    $default  reduce using rule 238 (named_namespace_definition)


state 75

  239 named_namespace_definition: extension_namespace_definition .

    $default  reduce using rule 239 (named_namespace_definition)


state 76

  237 namespace_definition: unnamed_namespace_definition .

    $default  reduce using rule 237 (namespace_definition)


state 77

  180 block_declaration: namespace_alias_definition .

    $default  reduce using rule 180 (block_declaration)


state 78

  181 block_declaration: using_declaration .

    $default  reduce using rule 181 (block_declaration)


state 79

  182 block_declaration: using_directive .

    $default  reduce using rule 182 (block_declaration)


state 80

  179 block_declaration: asm_definition .

    $default  reduce using rule 179 (block_declaration)


state 81

  176 declaration: linkage_specification .

    $default  reduce using rule 176 (declaration)


state 82

  312 function_definition: declarator . ctor_initializer_opt function_body
  314                    | declarator . function_try_block

    TRY  shift, and go to state 192
    ':'  shift, and go to state 193

    $default  reduce using rule 486 (ctor_initializer_opt)

    ctor_initializer      go to state 194
    function_try_block    go to state 195
    ctor_initializer_opt  go to state 196


state 83

  264 declarator: direct_declarator .
  267 direct_declarator: direct_declarator . '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  268                  | direct_declarator . '(' parameter_declaration_clause ')' cv_qualifier_seq
  269                  | direct_declarator . '(' parameter_declaration_clause ')' exception_specification
  270                  | direct_declarator . '(' parameter_declaration_clause ')'
  274                  | direct_declarator . '[' constant_expression_opt ']'

    '('  shift, and go to state 197
    '['  shift, and go to state 198

    '('       [reduce using rule 264 (declarator)]
    $default  reduce using rule 264 (declarator)


state 84

  265 declarator: ptr_operator . declarator

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 170
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 55
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 171
    declarator               go to state 199
    direct_declarator        go to state 83
    ptr_operator             go to state 84
    declarator_id            go to state 86
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 85

  204 type_specifier: cv_qualifier .

    $default  reduce using rule 204 (type_specifier)


state 86

  266 direct_declarator: declarator_id .

    $default  reduce using rule 266 (direct_declarator)


state 87

  172 declaration: function_definition .

    $default  reduce using rule 172 (declaration)


state 88

  201 type_specifier: class_specifier .

    $default  reduce using rule 201 (type_specifier)


state 89

  324 class_specifier: class_head . '{' member_specification_opt '}'

    '{'  shift, and go to state 200


state 90

  223 elaborated_type_specifier: class_key . COLONCOLON nested_name_specifier identifier
  224                          | class_key . COLONCOLON identifier
  325 class_head: class_key . class_name
  326           | class_key . class_name base_clause
  327           | class_key . nested_name_specifier class_name
  328           | class_key . nested_name_specifier class_name base_clause

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 201

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 202
    template_name            go to state 52
    nested_name_specifier    go to state 203
    template_id              go to state 94


state 91

   29 unqualified_id: conversion_function_id .

    $default  reduce using rule 29 (unqualified_id)


state 92

   28 unqualified_id: operator_function_id .

    $default  reduce using rule 28 (unqualified_id)


state 93

  173 declaration: template_declaration .

    $default  reduce using rule 173 (declaration)


state 94

    5 class_name: template_id .

    $default  reduce using rule 5 (class_name)


state 95

  174 declaration: explicit_instantiation .

    $default  reduce using rule 174 (declaration)


state 96

  175 declaration: explicit_specialization .

    $default  reduce using rule 175 (declaration)


state 97

   20 translation_unit: declaration_seq_opt .

    $default  reduce using rule 20 (translation_unit)


state 98

  423 template_declaration: EXPORT_opt . TEMPLATE '<' template_parameter_list '>' declaration

    TEMPLATE  shift, and go to state 204


state 99

  272 direct_declarator: CLASS_NAME COLONCOLON . declarator_id '(' parameter_declaration_clause ')'
  273                  | CLASS_NAME COLONCOLON . CLASS_NAME '(' parameter_declaration_clause ')'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 205
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 206
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 55
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    declarator_id            go to state 208
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 100

  271 direct_declarator: CLASS_NAME '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 209
    COLONCOLON      shift, and go to state 116
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 186
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    $default  reduce using rule 304 (parameter_declaration_clause)

    typedef_name                  go to state 47
    namespace_name                go to state 48
    original_namespace_name       go to state 49
    class_name                    go to state 50
    enum_name                     go to state 51
    template_name                 go to state 52
    nested_name_specifier         go to state 157
    decl_specifier                go to state 63
    decl_specifier_seq            go to state 210
    storage_class_specifier       go to state 65
    function_specifier            go to state 66
    type_specifier                go to state 67
    simple_type_specifier         go to state 68
    type_name                     go to state 69
    elaborated_type_specifier     go to state 70
    enum_specifier                go to state 71
    cv_qualifier                  go to state 85
    parameter_declaration_clause  go to state 211
    parameter_declaration_list    go to state 212
    parameter_declaration         go to state 213
    class_specifier               go to state 88
    class_head                    go to state 89
    class_key                     go to state 90
    template_id                   go to state 94


state 101

    4 class_name: CLASS_NAME .

    $default  reduce using rule 4 (class_name)


state 102

  288 declarator_id: COLONCOLON id_expression .

    $default  reduce using rule 288 (declarator_id)


state 103

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  281 ptr_operator: COLONCOLON nested_name_specifier . '*'
  282             | COLONCOLON nested_name_specifier . '*' cv_qualifier_seq
  289 declarator_id: COLONCOLON nested_name_specifier . type_name
  457 nested_name_specifier_opt: nested_name_specifier .

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 101
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 180
    '~'            shift, and go to state 44
    '*'            shift, and go to state 214

    TYPEDEF_NAME   [reduce using rule 457 (nested_name_specifier_opt)]
    CLASS_NAME     [reduce using rule 457 (nested_name_specifier_opt)]
    ENUM_NAME      [reduce using rule 457 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 457 (nested_name_specifier_opt)]

    typedef_name            go to state 47
    class_name              go to state 182
    enum_name               go to state 51
    template_name           go to state 52
    identifier              go to state 53
    unqualified_id          go to state 183
    type_name               go to state 215
    conversion_function_id  go to state 91
    operator_function_id    go to state 92
    template_id             go to state 94


state 104

  290 declarator_id: COLONCOLON type_name .

    $default  reduce using rule 290 (declarator_id)


state 105

  207 simple_type_specifier: COLONCOLON nested_name_specifier_opt . type_name

    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 101
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6

    typedef_name   go to state 47
    class_name     go to state 182
    enum_name      go to state 51
    template_name  go to state 52
    type_name      go to state 216
    template_id    go to state 94


state 106

  258 asm_definition: ASM '(' . string_literal ')' ';'

    STRING  shift, and go to state 111

    string_literal  go to state 217


state 107

  225 elaborated_type_specifier: ENUM COLONCOLON . nested_name_specifier identifier
  226                          | ENUM COLONCOLON . identifier

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 218
    nested_name_specifier    go to state 219
    template_id              go to state 94


state 108

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON

    COLONCOLON  shift, and go to state 177


state 109

  230 enum_specifier: ENUM identifier . '{' enumerator_list_opt '}'

    '{'  shift, and go to state 220


state 110

  227 elaborated_type_specifier: ENUM nested_name_specifier . identifier

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 221


state 111

   17 string_literal: STRING .

    $default  reduce using rule 17 (string_literal)


state 112

  259 linkage_specification: EXTERN string_literal . '{' declaration_seq_opt '}'
  260                      | EXTERN string_literal . declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46
    '{'             shift, and go to state 222

    TEMPLATE  [reduce using rule 496 (EXPORT_opt)]

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration                     go to state 223
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    EXPORT_opt                      go to state 98


state 113

  242 unnamed_namespace_definition: NAMESPACE '{' . namespace_body '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 496 (EXPORT_opt)]
    $default  reduce using rule 454 (declaration_seq_opt)

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration_seq                 go to state 59
    declaration                     go to state 60
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_body                  go to state 224
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    declaration_seq_opt             go to state 225
    EXPORT_opt                      go to state 98


state 114

  241 extension_namespace_definition: NAMESPACE original_namespace_name . '{' namespace_body '}'

    '{'  shift, and go to state 226


state 115

  240 original_namespace_definition: NAMESPACE identifier . '{' namespace_body '}'
  244 namespace_alias_definition: NAMESPACE identifier . '=' qualified_namespace_specifier ';'

    '='  shift, and go to state 227
    '{'  shift, and go to state 228


state 116

  207 simple_type_specifier: COLONCOLON . nested_name_specifier_opt type_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 456 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 456 (nested_name_specifier_opt)]
    $default       reduce using rule 456 (nested_name_specifier_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    nested_name_specifier      go to state 229
    template_id                go to state 94
    nested_name_specifier_opt  go to state 105


state 117

  398 operator: ADDEQ .

    $default  reduce using rule 398 (operator)


state 118

  399 operator: SUBEQ .

    $default  reduce using rule 399 (operator)


state 119

  400 operator: MULEQ .

    $default  reduce using rule 400 (operator)


state 120

  401 operator: DIVEQ .

    $default  reduce using rule 401 (operator)


state 121

  402 operator: MODEQ .

    $default  reduce using rule 402 (operator)


state 122

  403 operator: XOREQ .

    $default  reduce using rule 403 (operator)


state 123

  404 operator: ANDEQ .

    $default  reduce using rule 404 (operator)


state 124

  405 operator: OREQ .

    $default  reduce using rule 405 (operator)


state 125

  406 operator: SL .

    $default  reduce using rule 406 (operator)


state 126

  407 operator: SR .

    $default  reduce using rule 407 (operator)


state 127

  408 operator: SREQ .

    $default  reduce using rule 408 (operator)


state 128

  409 operator: SLEQ .

    $default  reduce using rule 409 (operator)


state 129

  410 operator: EQ .

    $default  reduce using rule 410 (operator)


state 130

  411 operator: NOTEQ .

    $default  reduce using rule 411 (operator)


state 131

  412 operator: LTEQ .

    $default  reduce using rule 412 (operator)


state 132

  413 operator: GTEQ .

    $default  reduce using rule 413 (operator)


state 133

  414 operator: ANDAND .

    $default  reduce using rule 414 (operator)


state 134

  415 operator: OROR .

    $default  reduce using rule 415 (operator)


state 135

  416 operator: PLUSPLUS .

    $default  reduce using rule 416 (operator)


state 136

  417 operator: MINUSMINUS .

    $default  reduce using rule 417 (operator)


state 137

  419 operator: ARROWSTAR .

    $default  reduce using rule 419 (operator)


state 138

  420 operator: ARROW .

    $default  reduce using rule 420 (operator)


state 139

  382 operator: DELETE .
  384         | DELETE . '[' ']'

    '['  shift, and go to state 230

    '['       [reduce using rule 382 (operator)]
    $default  reduce using rule 382 (operator)


state 140

  381 operator: NEW .
  383         | NEW . '[' ']'

    '['  shift, and go to state 231

    '['       [reduce using rule 381 (operator)]
    $default  reduce using rule 381 (operator)


state 141

  421 operator: '(' . ')'

    ')'  shift, and go to state 232


state 142

  393 operator: '~' .

    $default  reduce using rule 393 (operator)


state 143

  422 operator: '[' . ']'

    ']'  shift, and go to state 233


state 144

  396 operator: '<' .

    $default  reduce using rule 396 (operator)


state 145

  397 operator: '>' .

    $default  reduce using rule 397 (operator)


state 146

  418 operator: ',' .

    $default  reduce using rule 418 (operator)


state 147

  387 operator: '*' .

    $default  reduce using rule 387 (operator)


state 148

  391 operator: '&' .

    $default  reduce using rule 391 (operator)


state 149

  385 operator: '+' .

    $default  reduce using rule 385 (operator)


state 150

  394 operator: '!' .

    $default  reduce using rule 394 (operator)


state 151

  388 operator: '/' .

    $default  reduce using rule 388 (operator)


state 152

  389 operator: '%' .

    $default  reduce using rule 389 (operator)


state 153

  390 operator: '^' .

    $default  reduce using rule 390 (operator)


state 154

  392 operator: '|' .

    $default  reduce using rule 392 (operator)


state 155

  395 operator: '=' .

    $default  reduce using rule 395 (operator)


state 156

  386 operator: '_' .

    $default  reduce using rule 386 (operator)


state 157

  206 simple_type_specifier: nested_name_specifier . type_name

    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 101
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6

    typedef_name   go to state 47
    class_name     go to state 182
    enum_name      go to state 51
    template_name  go to state 52
    type_name      go to state 184
    template_id    go to state 94


state 158

  292 type_specifier_seq: type_specifier . type_specifier_seq_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 116
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    NAMESPACE_NAME  [reduce using rule 482 (type_specifier_seq_opt)]
    CLASS_NAME      [reduce using rule 482 (type_specifier_seq_opt)]
    TEMPLATE_NAME   [reduce using rule 482 (type_specifier_seq_opt)]
    COLONCOLON      [reduce using rule 482 (type_specifier_seq_opt)]
    $default        reduce using rule 482 (type_specifier_seq_opt)

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 157
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 234
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94
    type_specifier_seq_opt     go to state 235


state 159

  369 conversion_type_id: type_specifier_seq . conversion_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 236
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '*'       [reduce using rule 494 (conversion_declarator_opt)]
    '&'       [reduce using rule 494 (conversion_declarator_opt)]
    $default  reduce using rule 494 (conversion_declarator_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    nested_name_specifier      go to state 237
    ptr_operator               go to state 238
    conversion_declarator      go to state 239
    template_id                go to state 94
    conversion_declarator_opt  go to state 240


state 160

  368 conversion_function_id: OPERATOR conversion_type_id .

    $default  reduce using rule 368 (conversion_function_id)


state 161

  380 operator_function_id: OPERATOR operator .

    $default  reduce using rule 380 (operator_function_id)


state 162

  441 explicit_specialization: TEMPLATE '<' . '>' declaration

    '>'  shift, and go to state 241


state 163

  440 explicit_instantiation: TEMPLATE declaration .

    $default  reduce using rule 440 (explicit_instantiation)


state 164

  461 COLONCOLON_opt: COLONCOLON .

    $default  reduce using rule 461 (COLONCOLON_opt)


state 165

  228 elaborated_type_specifier: TYPENAME COLONCOLON_opt . nested_name_specifier identifier
  229                          | TYPENAME COLONCOLON_opt . nested_name_specifier identifier '<' template_argument_list '>'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    nested_name_specifier    go to state 242
    template_id              go to state 94


state 166

  251 using_declaration: USING COLONCOLON . nested_name_specifier unqualified_id ';'
  253                  | USING COLONCOLON . unqualified_id ';'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    unqualified_id           go to state 243
    nested_name_specifier    go to state 244
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 167

  254 using_directive: USING NAMESPACE . COLONCOLON nested_name_specifier namespace_name ';'
  255                | USING NAMESPACE . COLONCOLON namespace_name ';'
  256                | USING NAMESPACE . nested_name_specifier namespace_name ';'
  257                | USING NAMESPACE . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 245

    namespace_name           go to state 246
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    nested_name_specifier    go to state 247
    template_id              go to state 94


state 168

  249 using_declaration: USING TYPENAME . COLONCOLON nested_name_specifier unqualified_id ';'
  250                  | USING TYPENAME . nested_name_specifier unqualified_id ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 248

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    nested_name_specifier    go to state 249
    template_id              go to state 94


state 169

  252 using_declaration: USING nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 44

    identifier              go to state 53
    unqualified_id          go to state 250
    conversion_function_id  go to state 91
    operator_function_id    go to state 92


state 170

  281 ptr_operator: COLONCOLON . nested_name_specifier '*'
  282             | COLONCOLON . nested_name_specifier '*' cv_qualifier_seq
  288 declarator_id: COLONCOLON . id_expression
  289              | COLONCOLON . nested_name_specifier type_name
  290              | COLONCOLON . type_name

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    typedef_name             go to state 47
    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 50
    enum_name                go to state 51
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 102
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 251
    type_name                go to state 104
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 171

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  279 ptr_operator: nested_name_specifier . '*'
  280             | nested_name_specifier . '*' cv_qualifier_seq

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    TEMPLATE    shift, and go to state 180
    '~'         shift, and go to state 44
    '*'         shift, and go to state 181

    identifier              go to state 53
    unqualified_id          go to state 183
    conversion_function_id  go to state 91
    operator_function_id    go to state 92


state 172

  275 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 252


state 173

   30 unqualified_id: '~' class_name .

    $default  reduce using rule 30 (unqualified_id)


state 174

  277 ptr_operator: '*' cv_qualifier_seq .

    $default  reduce using rule 277 (ptr_operator)


state 175

  283 cv_qualifier_seq: cv_qualifier .
  284                 | cv_qualifier . cv_qualifier_seq

    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 283 (cv_qualifier_seq)

    cv_qualifier_seq  go to state 253
    cv_qualifier      go to state 175


state 176

   34 nested_name_specifier: namespace_name COLONCOLON . nested_name_specifier
   36                      | namespace_name COLONCOLON .

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6

    NAMESPACE_NAME  [reduce using rule 36 (nested_name_specifier)]
    CLASS_NAME      [reduce using rule 36 (nested_name_specifier)]
    TEMPLATE_NAME   [reduce using rule 36 (nested_name_specifier)]
    $default        reduce using rule 36 (nested_name_specifier)

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    nested_name_specifier    go to state 254
    template_id              go to state 94


state 177

   33 nested_name_specifier: class_name COLONCOLON . nested_name_specifier
   35                      | class_name COLONCOLON .

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6

    NAMESPACE_NAME  [reduce using rule 35 (nested_name_specifier)]
    CLASS_NAME      [reduce using rule 35 (nested_name_specifier)]
    TEMPLATE_NAME   [reduce using rule 35 (nested_name_specifier)]
    $default        reduce using rule 35 (nested_name_specifier)

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    nested_name_specifier    go to state 255
    template_id              go to state 94


state 178

  434 template_id: template_name '<' . template_argument_list '>'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 259
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 264
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 265
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 281
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 290
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 309
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 310
    type_specifier_seq         go to state 311
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    template_argument_list     go to state 312
    template_argument          go to state 313
    throw_expression           go to state 314


state 179

    0 $accept: translation_unit $end .

    $default  accept


state 180

   32 qualified_id: nested_name_specifier TEMPLATE . unqualified_id

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 44

    identifier              go to state 53
    unqualified_id          go to state 315
    conversion_function_id  go to state 91
    operator_function_id    go to state 92


state 181

  279 ptr_operator: nested_name_specifier '*' .
  280             | nested_name_specifier '*' . cv_qualifier_seq

    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 279 (ptr_operator)

    cv_qualifier_seq  go to state 316
    cv_qualifier      go to state 175


state 182

  220 type_name: class_name .

    $default  reduce using rule 220 (type_name)


state 183

   31 qualified_id: nested_name_specifier unqualified_id .

    $default  reduce using rule 31 (qualified_id)


state 184

  206 simple_type_specifier: nested_name_specifier type_name .

    $default  reduce using rule 206 (simple_type_specifier)


state 185

  170 declaration_seq: declaration_seq declaration .

    $default  reduce using rule 170 (declaration_seq)


state 186

  195 storage_class_specifier: EXTERN .

    $default  reduce using rule 195 (storage_class_specifier)


state 187

  184 simple_declaration: decl_specifier_seq ';' .

    $default  reduce using rule 184 (simple_declaration)


state 188

  191 decl_specifier_seq: decl_specifier_seq decl_specifier .

    $default  reduce using rule 191 (decl_specifier_seq)


state 189

  183 simple_declaration: decl_specifier_seq init_declarator_list . ';'
  262 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 317
    ';'  shift, and go to state 318


state 190

  261 init_declarator_list: init_declarator .

    $default  reduce using rule 261 (init_declarator_list)


state 191

  263 init_declarator: declarator . initializer_opt
  313 function_definition: decl_specifier_seq declarator . ctor_initializer_opt function_body
  315                    | decl_specifier_seq declarator . function_try_block

    TRY  shift, and go to state 192
    '('  shift, and go to state 319
    ':'  shift, and go to state 193
    '='  shift, and go to state 320

    '{'       reduce using rule 486 (ctor_initializer_opt)
    $default  reduce using rule 476 (initializer_opt)

    initializer           go to state 321
    ctor_initializer      go to state 194
    function_try_block    go to state 322
    initializer_opt       go to state 323
    ctor_initializer_opt  go to state 324


state 192

  443 function_try_block: TRY . ctor_initializer_opt function_body handler_seq

    ':'  shift, and go to state 193

    $default  reduce using rule 486 (ctor_initializer_opt)

    ctor_initializer      go to state 194
    ctor_initializer_opt  go to state 325


state 193

  371 ctor_initializer: ':' . mem_initializer_list

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 326

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 327
    template_name            go to state 52
    identifier               go to state 328
    nested_name_specifier    go to state 329
    mem_initializer_list     go to state 330
    mem_initializer          go to state 331
    mem_initializer_id       go to state 332
    template_id              go to state 94


state 194

  487 ctor_initializer_opt: ctor_initializer .

    $default  reduce using rule 487 (ctor_initializer_opt)


state 195

  314 function_definition: declarator function_try_block .

    $default  reduce using rule 314 (function_definition)


state 196

  312 function_definition: declarator ctor_initializer_opt . function_body

    '{'  shift, and go to state 333

    compound_statement  go to state 334
    function_body       go to state 335


state 197

  267 direct_declarator: direct_declarator '(' . parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  268                  | direct_declarator '(' . parameter_declaration_clause ')' cv_qualifier_seq
  269                  | direct_declarator '(' . parameter_declaration_clause ')' exception_specification
  270                  | direct_declarator '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 209
    COLONCOLON      shift, and go to state 116
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 186
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    $default  reduce using rule 304 (parameter_declaration_clause)

    typedef_name                  go to state 47
    namespace_name                go to state 48
    original_namespace_name       go to state 49
    class_name                    go to state 50
    enum_name                     go to state 51
    template_name                 go to state 52
    nested_name_specifier         go to state 157
    decl_specifier                go to state 63
    decl_specifier_seq            go to state 210
    storage_class_specifier       go to state 65
    function_specifier            go to state 66
    type_specifier                go to state 67
    simple_type_specifier         go to state 68
    type_name                     go to state 69
    elaborated_type_specifier     go to state 70
    enum_specifier                go to state 71
    cv_qualifier                  go to state 85
    parameter_declaration_clause  go to state 336
    parameter_declaration_list    go to state 212
    parameter_declaration         go to state 213
    class_specifier               go to state 88
    class_head                    go to state 89
    class_key                     go to state 90
    template_id                   go to state 94


state 198

  274 direct_declarator: direct_declarator '[' . constant_expression_opt ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    $default  reduce using rule 478 (constant_expression_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 338
    conditional_expression     go to state 339
    constant_expression        go to state 340
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    constant_expression_opt    go to state 341


state 199

  265 declarator: ptr_operator declarator .

    $default  reduce using rule 265 (declarator)


state 200

  324 class_specifier: class_head '{' . member_specification_opt '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 186
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    PRIVATE         shift, and go to state 342
    PROTECTED       shift, and go to state 343
    PUBLIC          shift, and go to state 344
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 345
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46
    ';'             shift, and go to state 346

    TEMPLATE  reduce using rule 496 (EXPORT_opt)
    $default  reduce using rule 490 (member_specification_opt)

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 347
    id_expression              go to state 55
    unqualified_id             go to state 56
    qualified_id               go to state 348
    nested_name_specifier      go to state 58
    decl_specifier             go to state 63
    decl_specifier_seq         go to state 349
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    using_declaration          go to state 350
    declarator                 go to state 351
    direct_declarator          go to state 83
    ptr_operator               go to state 84
    cv_qualifier               go to state 85
    declarator_id              go to state 86
    function_definition        go to state 352
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    member_specification       go to state 353
    member_declaration         go to state 354
    member_declarator_list     go to state 355
    member_declarator          go to state 356
    access_specifier           go to state 357
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_declaration       go to state 358
    template_id                go to state 94
    member_specification_opt   go to state 359
    EXPORT_opt                 go to state 98


state 201

  223 elaborated_type_specifier: class_key COLONCOLON . nested_name_specifier identifier
  224                          | class_key COLONCOLON . identifier

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 360
    nested_name_specifier    go to state 361
    template_id              go to state 94


state 202

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON
  325 class_head: class_key class_name .
  326           | class_key class_name . base_clause

    COLONCOLON  shift, and go to state 177
    ':'         shift, and go to state 362

    $default  reduce using rule 325 (class_head)

    base_clause  go to state 363


state 203

  327 class_head: class_key nested_name_specifier . class_name
  328           | class_key nested_name_specifier . class_name base_clause

    CLASS_NAME     shift, and go to state 101
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 364
    template_name  go to state 52
    template_id    go to state 94


state 204

  423 template_declaration: EXPORT_opt TEMPLATE . '<' template_parameter_list '>' declaration

    '<'  shift, and go to state 365


state 205

    4 class_name: CLASS_NAME .
  273 direct_declarator: CLASS_NAME COLONCOLON CLASS_NAME . '(' parameter_declaration_clause ')'

    '('  shift, and go to state 366

    $default  reduce using rule 4 (class_name)


state 206

  288 declarator_id: COLONCOLON . id_expression
  289              | COLONCOLON . nested_name_specifier type_name
  290              | COLONCOLON . type_name

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    typedef_name             go to state 47
    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 50
    enum_name                go to state 51
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 102
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 367
    type_name                go to state 104
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 207

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    TEMPLATE    shift, and go to state 180
    '~'         shift, and go to state 44

    identifier              go to state 53
    unqualified_id          go to state 183
    conversion_function_id  go to state 91
    operator_function_id    go to state 92


state 208

  272 direct_declarator: CLASS_NAME COLONCOLON declarator_id . '(' parameter_declaration_clause ')'

    '('  shift, and go to state 368


state 209

  303 parameter_declaration_clause: ELLIPSIS .

    $default  reduce using rule 303 (parameter_declaration_clause)


state 210

  191 decl_specifier_seq: decl_specifier_seq . decl_specifier
  308 parameter_declaration: decl_specifier_seq . declarator
  309                      | decl_specifier_seq . declarator '=' assignment_expression
  310                      | decl_specifier_seq . abstract_declarator_opt
  311                      | decl_specifier_seq . abstract_declarator_opt '=' assignment_expression

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 186
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 369
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '('       [reduce using rule 484 (direct_abstract_declarator_opt)]
    '['       reduce using rule 484 (direct_abstract_declarator_opt)
    $default  reduce using rule 480 (abstract_declarator_opt)

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    decl_specifier                  go to state 188
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    declarator                      go to state 370
    direct_declarator               go to state 83
    ptr_operator                    go to state 371
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    abstract_declarator             go to state 372
    direct_abstract_declarator      go to state 373
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_id                     go to state 94
    abstract_declarator_opt         go to state 374
    direct_abstract_declarator_opt  go to state 375


state 211

  271 direct_declarator: CLASS_NAME '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 376


state 212

  301 parameter_declaration_clause: parameter_declaration_list . ELLIPSIS
  302                             | parameter_declaration_list .
  305                             | parameter_declaration_list . ',' ELLIPSIS
  307 parameter_declaration_list: parameter_declaration_list . ',' parameter_declaration

    ELLIPSIS  shift, and go to state 377
    ','       shift, and go to state 378

    $default  reduce using rule 302 (parameter_declaration_clause)


state 213

  306 parameter_declaration_list: parameter_declaration .

    $default  reduce using rule 306 (parameter_declaration_list)


state 214

  281 ptr_operator: COLONCOLON nested_name_specifier '*' .
  282             | COLONCOLON nested_name_specifier '*' . cv_qualifier_seq

    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 281 (ptr_operator)

    cv_qualifier_seq  go to state 379
    cv_qualifier      go to state 175


state 215

  289 declarator_id: COLONCOLON nested_name_specifier type_name .

    $default  reduce using rule 289 (declarator_id)


state 216

  207 simple_type_specifier: COLONCOLON nested_name_specifier_opt type_name .

    $default  reduce using rule 207 (simple_type_specifier)


state 217

  258 asm_definition: ASM '(' string_literal . ')' ';'

    ')'  shift, and go to state 380


state 218

  226 elaborated_type_specifier: ENUM COLONCOLON identifier .

    $default  reduce using rule 226 (elaborated_type_specifier)


state 219

  225 elaborated_type_specifier: ENUM COLONCOLON nested_name_specifier . identifier

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 381


state 220

  230 enum_specifier: ENUM identifier '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 474 (enumerator_list_opt)

    identifier             go to state 382
    enumerator_list        go to state 383
    enumerator_definition  go to state 384
    enumerator             go to state 385
    enumerator_list_opt    go to state 386


state 221

  227 elaborated_type_specifier: ENUM nested_name_specifier identifier .

    $default  reduce using rule 227 (elaborated_type_specifier)


state 222

  259 linkage_specification: EXTERN string_literal '{' . declaration_seq_opt '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 496 (EXPORT_opt)]
    $default  reduce using rule 454 (declaration_seq_opt)

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration_seq                 go to state 59
    declaration                     go to state 60
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    declaration_seq_opt             go to state 387
    EXPORT_opt                      go to state 98


state 223

  260 linkage_specification: EXTERN string_literal declaration .

    $default  reduce using rule 260 (linkage_specification)


state 224

  242 unnamed_namespace_definition: NAMESPACE '{' namespace_body . '}'

    '}'  shift, and go to state 388


state 225

  243 namespace_body: declaration_seq_opt .

    $default  reduce using rule 243 (namespace_body)


state 226

  241 extension_namespace_definition: NAMESPACE original_namespace_name '{' . namespace_body '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 496 (EXPORT_opt)]
    $default  reduce using rule 454 (declaration_seq_opt)

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration_seq                 go to state 59
    declaration                     go to state 60
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_body                  go to state 389
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    declaration_seq_opt             go to state 225
    EXPORT_opt                      go to state 98


state 227

  244 namespace_alias_definition: NAMESPACE identifier '=' . qualified_namespace_specifier ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 390

    namespace_name                 go to state 391
    original_namespace_name        go to state 49
    class_name                     go to state 108
    template_name                  go to state 52
    nested_name_specifier          go to state 392
    qualified_namespace_specifier  go to state 393
    template_id                    go to state 94


state 228

  240 original_namespace_definition: NAMESPACE identifier '{' . namespace_body '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 496 (EXPORT_opt)]
    $default  reduce using rule 454 (declaration_seq_opt)

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration_seq                 go to state 59
    declaration                     go to state 60
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_body                  go to state 394
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    declaration_seq_opt             go to state 225
    EXPORT_opt                      go to state 98


state 229

  457 nested_name_specifier_opt: nested_name_specifier .

    $default  reduce using rule 457 (nested_name_specifier_opt)


state 230

  384 operator: DELETE '[' . ']'

    ']'  shift, and go to state 395


state 231

  383 operator: NEW '[' . ']'

    ']'  shift, and go to state 396


state 232

  421 operator: '(' ')' .

    $default  reduce using rule 421 (operator)


state 233

  422 operator: '[' ']' .

    $default  reduce using rule 422 (operator)


state 234

  483 type_specifier_seq_opt: type_specifier_seq .

    $default  reduce using rule 483 (type_specifier_seq_opt)


state 235

  292 type_specifier_seq: type_specifier type_specifier_seq_opt .

    $default  reduce using rule 292 (type_specifier_seq)


state 236

  281 ptr_operator: COLONCOLON . nested_name_specifier '*'
  282             | COLONCOLON . nested_name_specifier '*' cv_qualifier_seq

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    nested_name_specifier    go to state 397
    template_id              go to state 94


state 237

  279 ptr_operator: nested_name_specifier . '*'
  280             | nested_name_specifier . '*' cv_qualifier_seq

    '*'  shift, and go to state 181


state 238

  370 conversion_declarator: ptr_operator . conversion_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 236
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '*'       [reduce using rule 494 (conversion_declarator_opt)]
    '&'       [reduce using rule 494 (conversion_declarator_opt)]
    $default  reduce using rule 494 (conversion_declarator_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    nested_name_specifier      go to state 237
    ptr_operator               go to state 238
    conversion_declarator      go to state 239
    template_id                go to state 94
    conversion_declarator_opt  go to state 398


state 239

  495 conversion_declarator_opt: conversion_declarator .

    $default  reduce using rule 495 (conversion_declarator_opt)


state 240

  369 conversion_type_id: type_specifier_seq conversion_declarator_opt .

    $default  reduce using rule 369 (conversion_type_id)


state 241

  441 explicit_specialization: TEMPLATE '<' '>' . declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 496 (EXPORT_opt)]

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration                     go to state 399
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    EXPORT_opt                      go to state 98


state 242

  228 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier . identifier
  229                          | TYPENAME COLONCOLON_opt nested_name_specifier . identifier '<' template_argument_list '>'

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 400


state 243

  253 using_declaration: USING COLONCOLON unqualified_id . ';'

    ';'  shift, and go to state 401


state 244

  251 using_declaration: USING COLONCOLON nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 44

    identifier              go to state 53
    unqualified_id          go to state 402
    conversion_function_id  go to state 91
    operator_function_id    go to state 92


state 245

  254 using_directive: USING NAMESPACE COLONCOLON . nested_name_specifier namespace_name ';'
  255                | USING NAMESPACE COLONCOLON . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 403
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    nested_name_specifier    go to state 404
    template_id              go to state 94


state 246

   34 nested_name_specifier: namespace_name . COLONCOLON nested_name_specifier
   36                      | namespace_name . COLONCOLON
  257 using_directive: USING NAMESPACE namespace_name . ';'

    COLONCOLON  shift, and go to state 176
    ';'         shift, and go to state 405


state 247

  256 using_directive: USING NAMESPACE nested_name_specifier . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 406
    original_namespace_name  go to state 49


state 248

  249 using_declaration: USING TYPENAME COLONCOLON . nested_name_specifier unqualified_id ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    nested_name_specifier    go to state 407
    template_id              go to state 94


state 249

  250 using_declaration: USING TYPENAME nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 44

    identifier              go to state 53
    unqualified_id          go to state 408
    conversion_function_id  go to state 91
    operator_function_id    go to state 92


state 250

  252 using_declaration: USING nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 409


state 251

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  281 ptr_operator: COLONCOLON nested_name_specifier . '*'
  282             | COLONCOLON nested_name_specifier . '*' cv_qualifier_seq
  289 declarator_id: COLONCOLON nested_name_specifier . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 101
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 180
    '~'            shift, and go to state 44
    '*'            shift, and go to state 214

    typedef_name            go to state 47
    class_name              go to state 182
    enum_name               go to state 51
    template_name           go to state 52
    identifier              go to state 53
    unqualified_id          go to state 183
    type_name               go to state 215
    conversion_function_id  go to state 91
    operator_function_id    go to state 92
    template_id             go to state 94


state 252

  275 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 275 (direct_declarator)


state 253

  284 cv_qualifier_seq: cv_qualifier cv_qualifier_seq .

    $default  reduce using rule 284 (cv_qualifier_seq)


state 254

   34 nested_name_specifier: namespace_name COLONCOLON nested_name_specifier .

    $default  reduce using rule 34 (nested_name_specifier)


state 255

   33 nested_name_specifier: class_name COLONCOLON nested_name_specifier .

    $default  reduce using rule 33 (nested_name_specifier)


state 256

   14 integer_literal: INTEGER .

    $default  reduce using rule 14 (integer_literal)


state 257

   16 floating_literal: FLOATING .

    $default  reduce using rule 16 (floating_literal)


state 258

   15 character_literal: CHARACTER .

    $default  reduce using rule 15 (character_literal)


state 259

   73 new_expression: COLONCOLON . NEW new_placement_opt new_type_id new_initializer_opt
   75               | COLONCOLON . NEW new_placement_opt '(' type_id ')' new_initializer_opt
   84 delete_expression: COLONCOLON . DELETE cast_expression
   86                  | COLONCOLON . DELETE '[' ']' cast_expression
  207 simple_type_specifier: COLONCOLON . nested_name_specifier_opt type_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    DELETE          shift, and go to state 410
    NEW             shift, and go to state 411

    CLASS_NAME     [reduce using rule 456 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 456 (nested_name_specifier_opt)]
    $default       reduce using rule 456 (nested_name_specifier_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    nested_name_specifier      go to state 229
    template_id                go to state 94
    nested_name_specifier_opt  go to state 105


state 260

   59 unary_expression: PLUSPLUS . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 282
    integer_literal          go to state 283
    character_literal        go to state 284
    floating_literal         go to state 285
    string_literal           go to state 286
    boolean_literal          go to state 287
    primary_expression       go to state 288
    id_expression            go to state 289
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    postfix_expression       go to state 291
    unary_expression         go to state 292
    unary_operator           go to state 293
    new_expression           go to state 294
    delete_expression        go to state 295
    cast_expression          go to state 412
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 261

   60 unary_expression: MINUSMINUS . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 282
    integer_literal          go to state 283
    character_literal        go to state 284
    floating_literal         go to state 285
    string_literal           go to state 286
    boolean_literal          go to state 287
    primary_expression       go to state 288
    id_expression            go to state 289
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    postfix_expression       go to state 291
    unary_expression         go to state 292
    unary_operator           go to state 293
    new_expression           go to state 294
    delete_expression        go to state 295
    cast_expression          go to state 413
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 262

   53 postfix_expression: CONST_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 414


state 263

   83 delete_expression: DELETE . cast_expression
   85                  | DELETE . '[' ']' cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '['               shift, and go to state 415
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 282
    integer_literal          go to state 283
    character_literal        go to state 284
    floating_literal         go to state 285
    string_literal           go to state 286
    boolean_literal          go to state 287
    primary_expression       go to state 288
    id_expression            go to state 289
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    postfix_expression       go to state 291
    unary_expression         go to state 292
    unary_operator           go to state 293
    new_expression           go to state 294
    delete_expression        go to state 295
    cast_expression          go to state 416
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 264

   50 postfix_expression: DYNAMIC_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 417


state 265

   19 boolean_literal: FALSE .

    $default  reduce using rule 19 (boolean_literal)


state 266

   72 new_expression: NEW . new_placement_opt new_type_id new_initializer_opt
   74               | NEW . new_placement_opt '(' type_id ')' new_initializer_opt

    '('  shift, and go to state 418

    '('       [reduce using rule 462 (new_placement_opt)]
    $default  reduce using rule 462 (new_placement_opt)

    new_placement      go to state 419
    new_placement_opt  go to state 420


state 267

   52 postfix_expression: REINTERPRET_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 421


state 268

   64 unary_expression: SIZEOF . unary_expression
   65                 | SIZEOF . '(' type_id ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 422
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 282
    integer_literal          go to state 283
    character_literal        go to state 284
    floating_literal         go to state 285
    string_literal           go to state 286
    boolean_literal          go to state 287
    primary_expression       go to state 288
    id_expression            go to state 289
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    postfix_expression       go to state 291
    unary_expression         go to state 423
    unary_operator           go to state 293
    new_expression           go to state 294
    delete_expression        go to state 295
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 269

   51 postfix_expression: STATIC_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 424


state 270

   22 primary_expression: THIS .

    $default  reduce using rule 22 (primary_expression)


state 271

  450 throw_expression: THROW . assignment_expression_opt

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    $default  reduce using rule 500 (assignment_expression_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 425
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314
    assignment_expression_opt  go to state 426


state 272

   18 boolean_literal: TRUE .

    $default  reduce using rule 18 (boolean_literal)


state 273

   54 postfix_expression: TYPEID . '(' expression ')'
   55                   | TYPEID . '(' type_id ')'

    '('  shift, and go to state 427


state 274

   23 primary_expression: '(' . expression ')'
   88 cast_expression: '(' . type_id ')' cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 259
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 264
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 265
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 290
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 428
    expression                 go to state 429
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 430
    type_specifier_seq         go to state 311
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 275

   30 unqualified_id: '~' . class_name
   71 unary_operator: '~' .

    CLASS_NAME     shift, and go to state 101
    TEMPLATE_NAME  shift, and go to state 6

    CLASS_NAME     [reduce using rule 71 (unary_operator)]
    TEMPLATE_NAME  [reduce using rule 71 (unary_operator)]
    $default       reduce using rule 71 (unary_operator)

    class_name     go to state 173
    template_name  go to state 52
    template_id    go to state 94


state 276

   61 unary_expression: '*' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 282
    integer_literal          go to state 283
    character_literal        go to state 284
    floating_literal         go to state 285
    string_literal           go to state 286
    boolean_literal          go to state 287
    primary_expression       go to state 288
    id_expression            go to state 289
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    postfix_expression       go to state 291
    unary_expression         go to state 292
    unary_operator           go to state 293
    new_expression           go to state 294
    delete_expression        go to state 295
    cast_expression          go to state 431
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 277

   62 unary_expression: '&' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 282
    integer_literal          go to state 283
    character_literal        go to state 284
    floating_literal         go to state 285
    string_literal           go to state 286
    boolean_literal          go to state 287
    primary_expression       go to state 288
    id_expression            go to state 289
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    postfix_expression       go to state 291
    unary_expression         go to state 292
    unary_operator           go to state 293
    new_expression           go to state 294
    delete_expression        go to state 295
    cast_expression          go to state 432
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 278

   68 unary_operator: '+' .

    $default  reduce using rule 68 (unary_operator)


state 279

   69 unary_operator: '-' .

    $default  reduce using rule 69 (unary_operator)


state 280

   70 unary_operator: '!' .

    $default  reduce using rule 70 (unary_operator)


state 281

  434 template_id: template_name . '<' template_argument_list '>'
  439 template_argument: template_name .

    '<'  shift, and go to state 178

    $default  reduce using rule 439 (template_argument)


state 282

   21 primary_expression: literal .

    $default  reduce using rule 21 (primary_expression)


state 283

    9 literal: integer_literal .

    $default  reduce using rule 9 (literal)


state 284

   10 literal: character_literal .

    $default  reduce using rule 10 (literal)


state 285

   11 literal: floating_literal .

    $default  reduce using rule 11 (literal)


state 286

   12 literal: string_literal .

    $default  reduce using rule 12 (literal)


state 287

   13 literal: boolean_literal .

    $default  reduce using rule 13 (literal)


state 288

   37 postfix_expression: primary_expression .

    $default  reduce using rule 37 (postfix_expression)


state 289

   24 primary_expression: id_expression .

    $default  reduce using rule 24 (primary_expression)


state 290

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  206 simple_type_specifier: nested_name_specifier . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 101
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 180
    '~'            shift, and go to state 44

    typedef_name            go to state 47
    class_name              go to state 182
    enum_name               go to state 51
    template_name           go to state 52
    identifier              go to state 53
    unqualified_id          go to state 183
    type_name               go to state 184
    conversion_function_id  go to state 91
    operator_function_id    go to state 92
    template_id             go to state 94


state 291

   38 postfix_expression: postfix_expression . '[' expression ']'
   39                   | postfix_expression . '(' expression_list_opt ')'
   40                   | postfix_expression . '.' TEMPLATE COLONCOLON id_expression
   41                   | postfix_expression . '.' TEMPLATE id_expression
   42                   | postfix_expression . '.' COLONCOLON id_expression
   43                   | postfix_expression . '.' id_expression
   44                   | postfix_expression . ARROW TEMPLATE COLONCOLON id_expression
   45                   | postfix_expression . ARROW TEMPLATE id_expression
   46                   | postfix_expression . ARROW COLONCOLON id_expression
   47                   | postfix_expression . ARROW id_expression
   48                   | postfix_expression . PLUSPLUS
   49                   | postfix_expression . MINUSMINUS
   58 unary_expression: postfix_expression .

    PLUSPLUS    shift, and go to state 433
    MINUSMINUS  shift, and go to state 434
    ARROW       shift, and go to state 435
    '('         shift, and go to state 436
    '['         shift, and go to state 437
    '.'         shift, and go to state 438

    $default  reduce using rule 58 (unary_expression)


state 292

   87 cast_expression: unary_expression .

    $default  reduce using rule 87 (cast_expression)


state 293

   63 unary_expression: unary_operator . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 282
    integer_literal          go to state 283
    character_literal        go to state 284
    floating_literal         go to state 285
    string_literal           go to state 286
    boolean_literal          go to state 287
    primary_expression       go to state 288
    id_expression            go to state 289
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    postfix_expression       go to state 291
    unary_expression         go to state 292
    unary_operator           go to state 293
    new_expression           go to state 294
    delete_expression        go to state 295
    cast_expression          go to state 439
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 294

   66 unary_expression: new_expression .

    $default  reduce using rule 66 (unary_expression)


state 295

   67 unary_expression: delete_expression .

    $default  reduce using rule 67 (unary_expression)


state 296

   89 pm_expression: cast_expression .

    $default  reduce using rule 89 (pm_expression)


state 297

   90 pm_expression: pm_expression . DOTSTAR cast_expression
   91              | pm_expression . ARROWSTAR cast_expression
   92 multiplicative_expression: pm_expression .

    DOTSTAR    shift, and go to state 440
    ARROWSTAR  shift, and go to state 441

    $default  reduce using rule 92 (multiplicative_expression)


state 298

   93 multiplicative_expression: multiplicative_expression . '*' pm_expression
   94                          | multiplicative_expression . '/' pm_expression
   95                          | multiplicative_expression . '%' pm_expression
   96 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 442
    '/'  shift, and go to state 443
    '%'  shift, and go to state 444

    $default  reduce using rule 96 (additive_expression)


state 299

   97 additive_expression: additive_expression . '+' multiplicative_expression
   98                    | additive_expression . '-' multiplicative_expression
   99 shift_expression: additive_expression .

    '+'  shift, and go to state 445
    '-'  shift, and go to state 446

    $default  reduce using rule 99 (shift_expression)


state 300

  100 shift_expression: shift_expression . SL additive_expression
  101                 | shift_expression . SR additive_expression
  102 relational_expression: shift_expression .

    SL  shift, and go to state 447
    SR  shift, and go to state 448

    $default  reduce using rule 102 (relational_expression)


state 301

  103 relational_expression: relational_expression . '<' shift_expression
  104                      | relational_expression . '>' shift_expression
  105                      | relational_expression . LTEQ shift_expression
  106                      | relational_expression . GTEQ shift_expression
  107 equality_expression: relational_expression .

    LTEQ  shift, and go to state 449
    GTEQ  shift, and go to state 450
    '<'   shift, and go to state 451
    '>'   shift, and go to state 452

    '>'       [reduce using rule 107 (equality_expression)]
    $default  reduce using rule 107 (equality_expression)


state 302

  108 equality_expression: equality_expression . EQ relational_expression
  109                    | equality_expression . NOTEQ relational_expression
  110 and_expression: equality_expression .

    EQ     shift, and go to state 453
    NOTEQ  shift, and go to state 454

    $default  reduce using rule 110 (and_expression)


state 303

  111 and_expression: and_expression . '&' equality_expression
  112 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 455

    $default  reduce using rule 112 (exclusive_or_expression)


state 304

  113 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  114 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 456

    $default  reduce using rule 114 (inclusive_or_expression)


state 305

  115 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  116 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 457

    $default  reduce using rule 116 (logical_and_expression)


state 306

  117 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression
  118 logical_or_expression: logical_and_expression .

    ANDAND  shift, and go to state 458

    $default  reduce using rule 118 (logical_or_expression)


state 307

  119 logical_or_expression: logical_or_expression . OROR logical_and_expression
  120 conditional_expression: logical_or_expression .
  121                       | logical_or_expression . '?' expression ':' assignment_expression
  123 assignment_expression: logical_or_expression . assignment_operator assignment_expression

    ADDEQ  shift, and go to state 459
    SUBEQ  shift, and go to state 460
    MULEQ  shift, and go to state 461
    DIVEQ  shift, and go to state 462
    MODEQ  shift, and go to state 463
    XOREQ  shift, and go to state 464
    ANDEQ  shift, and go to state 465
    OREQ   shift, and go to state 466
    SREQ   shift, and go to state 467
    SLEQ   shift, and go to state 468
    OROR   shift, and go to state 469
    '?'    shift, and go to state 470
    '='    shift, and go to state 471

    $default  reduce using rule 120 (conditional_expression)

    assignment_operator  go to state 472


state 308

  122 assignment_expression: conditional_expression .

    $default  reduce using rule 122 (assignment_expression)


state 309

  437 template_argument: assignment_expression .

    $default  reduce using rule 437 (template_argument)


state 310

  438 template_argument: type_id .

    $default  reduce using rule 438 (template_argument)


state 311

  291 type_id: type_specifier_seq . abstract_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 236
    '('             shift, and go to state 473
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '('       [reduce using rule 484 (direct_abstract_declarator_opt)]
    '['       reduce using rule 484 (direct_abstract_declarator_opt)
    $default  reduce using rule 480 (abstract_declarator_opt)

    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 108
    template_name                   go to state 52
    nested_name_specifier           go to state 237
    ptr_operator                    go to state 474
    abstract_declarator             go to state 372
    direct_abstract_declarator      go to state 373
    template_id                     go to state 94
    abstract_declarator_opt         go to state 475
    direct_abstract_declarator_opt  go to state 375


state 312

  434 template_id: template_name '<' template_argument_list . '>'
  436 template_argument_list: template_argument_list . ',' template_argument

    '>'  shift, and go to state 476
    ','  shift, and go to state 477


state 313

  435 template_argument_list: template_argument .

    $default  reduce using rule 435 (template_argument_list)


state 314

  124 assignment_expression: throw_expression .

    $default  reduce using rule 124 (assignment_expression)


state 315

   32 qualified_id: nested_name_specifier TEMPLATE unqualified_id .

    $default  reduce using rule 32 (qualified_id)


state 316

  280 ptr_operator: nested_name_specifier '*' cv_qualifier_seq .

    $default  reduce using rule 280 (ptr_operator)


state 317

  262 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 170
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 55
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 171
    init_declarator          go to state 478
    declarator               go to state 479
    direct_declarator        go to state 83
    ptr_operator             go to state 84
    declarator_id            go to state 86
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 318

  183 simple_declaration: decl_specifier_seq init_declarator_list ';' .

    $default  reduce using rule 183 (simple_declaration)


state 319

  318 initializer: '(' . expression_list ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    expression_list            go to state 480
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 481
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 320

  317 initializer: '=' . initializer_clause

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280
    '{'               shift, and go to state 482

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 483
    initializer_clause         go to state 484
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 321

  477 initializer_opt: initializer .

    $default  reduce using rule 477 (initializer_opt)


state 322

  315 function_definition: decl_specifier_seq declarator function_try_block .

    $default  reduce using rule 315 (function_definition)


state 323

  263 init_declarator: declarator initializer_opt .

    $default  reduce using rule 263 (init_declarator)


state 324

  313 function_definition: decl_specifier_seq declarator ctor_initializer_opt . function_body

    '{'  shift, and go to state 333

    compound_statement  go to state 334
    function_body       go to state 485


state 325

  443 function_try_block: TRY ctor_initializer_opt . function_body handler_seq

    '{'  shift, and go to state 333

    compound_statement  go to state 334
    function_body       go to state 486


state 326

  375 mem_initializer_id: COLONCOLON . nested_name_specifier class_name
  376                   | COLONCOLON . class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 487
    template_name            go to state 52
    nested_name_specifier    go to state 488
    template_id              go to state 94


state 327

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON
  378 mem_initializer_id: class_name .

    COLONCOLON  shift, and go to state 177

    $default  reduce using rule 378 (mem_initializer_id)


state 328

  379 mem_initializer_id: identifier .

    $default  reduce using rule 379 (mem_initializer_id)


state 329

  377 mem_initializer_id: nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 101
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 489
    template_name  go to state 52
    template_id    go to state 94


state 330

  371 ctor_initializer: ':' mem_initializer_list .

    $default  reduce using rule 371 (ctor_initializer)


state 331

  372 mem_initializer_list: mem_initializer .
  373                     | mem_initializer . ',' mem_initializer_list

    ','  shift, and go to state 490

    $default  reduce using rule 372 (mem_initializer_list)


state 332

  374 mem_initializer: mem_initializer_id . '(' expression_list_opt ')'

    '('  shift, and go to state 491


state 333

  151 compound_statement: '{' . statement_seq_opt '}'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 259
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 492
    CASE              shift, and go to state 493
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    CONTINUE          shift, and go to state 494
    DEFAULT           shift, and go to state 495
    DELETE            shift, and go to state 263
    DO                shift, and go to state 496
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 264
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 186
    FALSE             shift, and go to state 265
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 497
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 498
    IF                shift, and go to state 499
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 500
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 267
    RETURN            shift, and go to state 501
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 268
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 269
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 502
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TRY               shift, and go to state 503
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 273
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 504
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280
    '{'               shift, and go to state 333

    '}'       reduce using rule 470 (statement_seq_opt)
    $default  reduce using rule 468 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 505
    literal                     go to state 282
    integer_literal             go to state 283
    character_literal           go to state 284
    floating_literal            go to state 285
    string_literal              go to state 286
    boolean_literal             go to state 287
    primary_expression          go to state 288
    id_expression               go to state 289
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 290
    postfix_expression          go to state 291
    unary_expression            go to state 292
    unary_operator              go to state 293
    new_expression              go to state 294
    delete_expression           go to state 295
    cast_expression             go to state 296
    pm_expression               go to state 297
    multiplicative_expression   go to state 298
    additive_expression         go to state 299
    shift_expression            go to state 300
    relational_expression       go to state 301
    equality_expression         go to state 302
    and_expression              go to state 303
    exclusive_or_expression     go to state 304
    inclusive_or_expression     go to state 305
    logical_and_expression      go to state 306
    logical_or_expression       go to state 307
    conditional_expression      go to state 308
    assignment_expression       go to state 428
    expression                  go to state 506
    statement                   go to state 507
    labeled_statement           go to state 508
    expression_statement        go to state 509
    compound_statement          go to state 510
    statement_seq               go to state 511
    selection_statement         go to state 512
    iteration_statement         go to state 513
    jump_statement              go to state 514
    declaration_statement       go to state 515
    block_declaration           go to state 516
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 517
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 518
    throw_expression            go to state 314
    expression_opt              go to state 519
    statement_seq_opt           go to state 520


state 334

  316 function_body: compound_statement .

    $default  reduce using rule 316 (function_body)


state 335

  312 function_definition: declarator ctor_initializer_opt function_body .

    $default  reduce using rule 312 (function_definition)


state 336

  267 direct_declarator: direct_declarator '(' parameter_declaration_clause . ')' cv_qualifier_seq exception_specification
  268                  | direct_declarator '(' parameter_declaration_clause . ')' cv_qualifier_seq
  269                  | direct_declarator '(' parameter_declaration_clause . ')' exception_specification
  270                  | direct_declarator '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 521


state 337

   73 new_expression: COLONCOLON . NEW new_placement_opt new_type_id new_initializer_opt
   75               | COLONCOLON . NEW new_placement_opt '(' type_id ')' new_initializer_opt
   84 delete_expression: COLONCOLON . DELETE cast_expression
   86                  | COLONCOLON . DELETE '[' ']' cast_expression

    DELETE  shift, and go to state 410
    NEW     shift, and go to state 411


state 338

  119 logical_or_expression: logical_or_expression . OROR logical_and_expression
  120 conditional_expression: logical_or_expression .
  121                       | logical_or_expression . '?' expression ':' assignment_expression

    OROR  shift, and go to state 469
    '?'   shift, and go to state 470

    $default  reduce using rule 120 (conditional_expression)


state 339

  138 constant_expression: conditional_expression .

    $default  reduce using rule 138 (constant_expression)


state 340

  479 constant_expression_opt: constant_expression .

    $default  reduce using rule 479 (constant_expression_opt)


state 341

  274 direct_declarator: direct_declarator '[' constant_expression_opt . ']'

    ']'  shift, and go to state 522


state 342

  365 access_specifier: PRIVATE .

    $default  reduce using rule 365 (access_specifier)


state 343

  366 access_specifier: PROTECTED .

    $default  reduce using rule 366 (access_specifier)


state 344

  367 access_specifier: PUBLIC .

    $default  reduce using rule 367 (access_specifier)


state 345

  249 using_declaration: USING . TYPENAME COLONCOLON nested_name_specifier unqualified_id ';'
  250                  | USING . TYPENAME nested_name_specifier unqualified_id ';'
  251                  | USING . COLONCOLON nested_name_specifier unqualified_id ';'
  252                  | USING . nested_name_specifier unqualified_id ';'
  253                  | USING . COLONCOLON unqualified_id ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 166
    TYPENAME        shift, and go to state 168

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    nested_name_specifier    go to state 169
    template_id              go to state 94


state 346

  337 member_declaration: ';' .

    $default  reduce using rule 337 (member_declaration)


state 347

   27 unqualified_id: identifier .
  347 member_declarator: identifier . ':' constant_expression

    ':'  shift, and go to state 523

    ':'       [reduce using rule 27 (unqualified_id)]
    $default  reduce using rule 27 (unqualified_id)


state 348

   26 id_expression: qualified_id .
  339 member_declaration: qualified_id . ';'

    ';'  shift, and go to state 524

    ';'       [reduce using rule 26 (id_expression)]
    $default  reduce using rule 26 (id_expression)


state 349

  191 decl_specifier_seq: decl_specifier_seq . decl_specifier
  313 function_definition: decl_specifier_seq . declarator ctor_initializer_opt function_body
  315                    | decl_specifier_seq . declarator function_try_block
  334 member_declaration: decl_specifier_seq . member_declarator_list ';'
  335                   | decl_specifier_seq . ';'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 186
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46
    ';'             shift, and go to state 525

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 347
    id_expression              go to state 55
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 58
    decl_specifier             go to state 188
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    declarator                 go to state 526
    direct_declarator          go to state 83
    ptr_operator               go to state 84
    cv_qualifier               go to state 85
    declarator_id              go to state 86
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    member_declarator_list     go to state 527
    member_declarator          go to state 356
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 350

  340 member_declaration: using_declaration .

    $default  reduce using rule 340 (member_declaration)


state 351

  312 function_definition: declarator . ctor_initializer_opt function_body
  314                    | declarator . function_try_block
  344 member_declarator: declarator .
  345                  | declarator . pure_specifier
  346                  | declarator . constant_initializer

    TRY  shift, and go to state 192
    ':'  shift, and go to state 193
    '='  shift, and go to state 528

    '{'       reduce using rule 486 (ctor_initializer_opt)
    $default  reduce using rule 344 (member_declarator)

    pure_specifier        go to state 529
    constant_initializer  go to state 530
    ctor_initializer      go to state 194
    function_try_block    go to state 195
    ctor_initializer_opt  go to state 196


state 352

  338 member_declaration: function_definition . SEMICOLON_opt

    ';'  shift, and go to state 531

    ';'       [reduce using rule 492 (SEMICOLON_opt)]
    $default  reduce using rule 492 (SEMICOLON_opt)

    SEMICOLON_opt  go to state 532


state 353

  491 member_specification_opt: member_specification .

    $default  reduce using rule 491 (member_specification_opt)


state 354

  332 member_specification: member_declaration . member_specification_opt

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 186
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    PRIVATE         shift, and go to state 342
    PROTECTED       shift, and go to state 343
    PUBLIC          shift, and go to state 344
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 345
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46
    ';'             shift, and go to state 346

    TEMPLATE  reduce using rule 496 (EXPORT_opt)
    $default  reduce using rule 490 (member_specification_opt)

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 347
    id_expression              go to state 55
    unqualified_id             go to state 56
    qualified_id               go to state 348
    nested_name_specifier      go to state 58
    decl_specifier             go to state 63
    decl_specifier_seq         go to state 349
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    using_declaration          go to state 350
    declarator                 go to state 351
    direct_declarator          go to state 83
    ptr_operator               go to state 84
    cv_qualifier               go to state 85
    declarator_id              go to state 86
    function_definition        go to state 352
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    member_specification       go to state 353
    member_declaration         go to state 354
    member_declarator_list     go to state 355
    member_declarator          go to state 356
    access_specifier           go to state 357
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_declaration       go to state 358
    template_id                go to state 94
    member_specification_opt   go to state 533
    EXPORT_opt                 go to state 98


state 355

  336 member_declaration: member_declarator_list . ';'
  343 member_declarator_list: member_declarator_list . ',' member_declarator

    ','  shift, and go to state 534
    ';'  shift, and go to state 535


state 356

  342 member_declarator_list: member_declarator .

    $default  reduce using rule 342 (member_declarator_list)


state 357

  333 member_specification: access_specifier . ':' member_specification_opt

    ':'  shift, and go to state 536


state 358

  341 member_declaration: template_declaration .

    $default  reduce using rule 341 (member_declaration)


state 359

  324 class_specifier: class_head '{' member_specification_opt . '}'

    '}'  shift, and go to state 537


state 360

  224 elaborated_type_specifier: class_key COLONCOLON identifier .

    $default  reduce using rule 224 (elaborated_type_specifier)


state 361

  223 elaborated_type_specifier: class_key COLONCOLON nested_name_specifier . identifier

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 538


state 362

  350 base_clause: ':' . base_specifier_list

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 539
    PRIVATE         shift, and go to state 342
    PROTECTED       shift, and go to state 343
    PUBLIC          shift, and go to state 344
    VIRTUAL         shift, and go to state 540

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 541
    template_name            go to state 52
    nested_name_specifier    go to state 542
    base_specifier_list      go to state 543
    base_specifier           go to state 544
    access_specifier         go to state 545
    template_id              go to state 94


state 363

  326 class_head: class_key class_name base_clause .

    $default  reduce using rule 326 (class_head)


state 364

  327 class_head: class_key nested_name_specifier class_name .
  328           | class_key nested_name_specifier class_name . base_clause

    ':'  shift, and go to state 362

    $default  reduce using rule 327 (class_head)

    base_clause  go to state 546


state 365

  423 template_declaration: EXPORT_opt TEMPLATE '<' . template_parameter_list '>' declaration

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 116
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 547
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 186
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 548
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 549
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 157
    decl_specifier             go to state 63
    decl_specifier_seq         go to state 210
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    parameter_declaration      go to state 550
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_parameter_list    go to state 551
    template_parameter         go to state 552
    type_parameter             go to state 553
    template_id                go to state 94


state 366

  273 direct_declarator: CLASS_NAME COLONCOLON CLASS_NAME '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 209
    COLONCOLON      shift, and go to state 116
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 186
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    $default  reduce using rule 304 (parameter_declaration_clause)

    typedef_name                  go to state 47
    namespace_name                go to state 48
    original_namespace_name       go to state 49
    class_name                    go to state 50
    enum_name                     go to state 51
    template_name                 go to state 52
    nested_name_specifier         go to state 157
    decl_specifier                go to state 63
    decl_specifier_seq            go to state 210
    storage_class_specifier       go to state 65
    function_specifier            go to state 66
    type_specifier                go to state 67
    simple_type_specifier         go to state 68
    type_name                     go to state 69
    elaborated_type_specifier     go to state 70
    enum_specifier                go to state 71
    cv_qualifier                  go to state 85
    parameter_declaration_clause  go to state 554
    parameter_declaration_list    go to state 212
    parameter_declaration         go to state 213
    class_specifier               go to state 88
    class_head                    go to state 89
    class_key                     go to state 90
    template_id                   go to state 94


state 367

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  289 declarator_id: COLONCOLON nested_name_specifier . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 101
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 180
    '~'            shift, and go to state 44

    typedef_name            go to state 47
    class_name              go to state 182
    enum_name               go to state 51
    template_name           go to state 52
    identifier              go to state 53
    unqualified_id          go to state 183
    type_name               go to state 215
    conversion_function_id  go to state 91
    operator_function_id    go to state 92
    template_id             go to state 94


state 368

  272 direct_declarator: CLASS_NAME COLONCOLON declarator_id '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 209
    COLONCOLON      shift, and go to state 116
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 186
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    $default  reduce using rule 304 (parameter_declaration_clause)

    typedef_name                  go to state 47
    namespace_name                go to state 48
    original_namespace_name       go to state 49
    class_name                    go to state 50
    enum_name                     go to state 51
    template_name                 go to state 52
    nested_name_specifier         go to state 157
    decl_specifier                go to state 63
    decl_specifier_seq            go to state 210
    storage_class_specifier       go to state 65
    function_specifier            go to state 66
    type_specifier                go to state 67
    simple_type_specifier         go to state 68
    type_name                     go to state 69
    elaborated_type_specifier     go to state 70
    enum_specifier                go to state 71
    cv_qualifier                  go to state 85
    parameter_declaration_clause  go to state 555
    parameter_declaration_list    go to state 212
    parameter_declaration         go to state 213
    class_specifier               go to state 88
    class_head                    go to state 89
    class_key                     go to state 90
    template_id                   go to state 94


state 369

  275 direct_declarator: '(' . declarator ')'
  300 direct_abstract_declarator: '(' . abstract_declarator ')'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 170
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 369
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '('       [reduce using rule 484 (direct_abstract_declarator_opt)]
    $default  reduce using rule 484 (direct_abstract_declarator_opt)

    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 108
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 171
    declarator                      go to state 172
    direct_declarator               go to state 83
    ptr_operator                    go to state 371
    declarator_id                   go to state 86
    abstract_declarator             go to state 556
    direct_abstract_declarator      go to state 373
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_id                     go to state 94
    direct_abstract_declarator_opt  go to state 375


state 370

  308 parameter_declaration: decl_specifier_seq declarator .
  309                      | decl_specifier_seq declarator . '=' assignment_expression

    '='  shift, and go to state 557

    $default  reduce using rule 308 (parameter_declaration)


state 371

  265 declarator: ptr_operator . declarator
  293 abstract_declarator: ptr_operator . abstract_declarator_opt

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 170
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 369
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '('       [reduce using rule 484 (direct_abstract_declarator_opt)]
    '['       reduce using rule 484 (direct_abstract_declarator_opt)
    $default  reduce using rule 480 (abstract_declarator_opt)

    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 108
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 171
    declarator                      go to state 199
    direct_declarator               go to state 83
    ptr_operator                    go to state 371
    declarator_id                   go to state 86
    abstract_declarator             go to state 372
    direct_abstract_declarator      go to state 373
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_id                     go to state 94
    abstract_declarator_opt         go to state 558
    direct_abstract_declarator_opt  go to state 375


state 372

  481 abstract_declarator_opt: abstract_declarator .

    $default  reduce using rule 481 (abstract_declarator_opt)


state 373

  294 abstract_declarator: direct_abstract_declarator .
  485 direct_abstract_declarator_opt: direct_abstract_declarator .

    '('       reduce using rule 485 (direct_abstract_declarator_opt)
    '['       reduce using rule 485 (direct_abstract_declarator_opt)
    $default  reduce using rule 294 (abstract_declarator)


state 374

  310 parameter_declaration: decl_specifier_seq abstract_declarator_opt .
  311                      | decl_specifier_seq abstract_declarator_opt . '=' assignment_expression

    '='  shift, and go to state 559

    $default  reduce using rule 310 (parameter_declaration)


state 375

  295 direct_abstract_declarator: direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  296                           | direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' cv_qualifier_seq
  297                           | direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' exception_specification
  298                           | direct_abstract_declarator_opt . '(' parameter_declaration_clause ')'
  299                           | direct_abstract_declarator_opt . '[' constant_expression_opt ']'

    '('  shift, and go to state 560
    '['  shift, and go to state 561


state 376

  271 direct_declarator: CLASS_NAME '(' parameter_declaration_clause ')' .

    $default  reduce using rule 271 (direct_declarator)


state 377

  301 parameter_declaration_clause: parameter_declaration_list ELLIPSIS .

    $default  reduce using rule 301 (parameter_declaration_clause)


state 378

  305 parameter_declaration_clause: parameter_declaration_list ',' . ELLIPSIS
  307 parameter_declaration_list: parameter_declaration_list ',' . parameter_declaration

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 562
    COLONCOLON      shift, and go to state 116
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 186
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 157
    decl_specifier             go to state 63
    decl_specifier_seq         go to state 210
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    parameter_declaration      go to state 563
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 379

  282 ptr_operator: COLONCOLON nested_name_specifier '*' cv_qualifier_seq .

    $default  reduce using rule 282 (ptr_operator)


state 380

  258 asm_definition: ASM '(' string_literal ')' . ';'

    ';'  shift, and go to state 564


state 381

  225 elaborated_type_specifier: ENUM COLONCOLON nested_name_specifier identifier .

    $default  reduce using rule 225 (elaborated_type_specifier)


state 382

  235 enumerator: identifier .

    $default  reduce using rule 235 (enumerator)


state 383

  232 enumerator_list: enumerator_list . ',' enumerator_definition
  475 enumerator_list_opt: enumerator_list .

    ','  shift, and go to state 565

    $default  reduce using rule 475 (enumerator_list_opt)


state 384

  231 enumerator_list: enumerator_definition .

    $default  reduce using rule 231 (enumerator_list)


state 385

  233 enumerator_definition: enumerator .
  234                      | enumerator . '=' constant_expression

    '='  shift, and go to state 566

    $default  reduce using rule 233 (enumerator_definition)


state 386

  230 enum_specifier: ENUM identifier '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 567


state 387

  259 linkage_specification: EXTERN string_literal '{' declaration_seq_opt . '}'

    '}'  shift, and go to state 568


state 388

  242 unnamed_namespace_definition: NAMESPACE '{' namespace_body '}' .

    $default  reduce using rule 242 (unnamed_namespace_definition)


state 389

  241 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body . '}'

    '}'  shift, and go to state 569


state 390

  245 qualified_namespace_specifier: COLONCOLON . nested_name_specifier namespace_name
  246                              | COLONCOLON . namespace_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 570
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    nested_name_specifier    go to state 571
    template_id              go to state 94


state 391

   34 nested_name_specifier: namespace_name . COLONCOLON nested_name_specifier
   36                      | namespace_name . COLONCOLON
  248 qualified_namespace_specifier: namespace_name .

    COLONCOLON  shift, and go to state 176

    $default  reduce using rule 248 (qualified_namespace_specifier)


state 392

  247 qualified_namespace_specifier: nested_name_specifier . namespace_name

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 572
    original_namespace_name  go to state 49


state 393

  244 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier . ';'

    ';'  shift, and go to state 573


state 394

  240 original_namespace_definition: NAMESPACE identifier '{' namespace_body . '}'

    '}'  shift, and go to state 574


state 395

  384 operator: DELETE '[' ']' .

    $default  reduce using rule 384 (operator)


state 396

  383 operator: NEW '[' ']' .

    $default  reduce using rule 383 (operator)


state 397

  281 ptr_operator: COLONCOLON nested_name_specifier . '*'
  282             | COLONCOLON nested_name_specifier . '*' cv_qualifier_seq

    '*'  shift, and go to state 214


state 398

  370 conversion_declarator: ptr_operator conversion_declarator_opt .

    $default  reduce using rule 370 (conversion_declarator)


state 399

  441 explicit_specialization: TEMPLATE '<' '>' declaration .

    $default  reduce using rule 441 (explicit_specialization)


state 400

  228 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier .
  229                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier . '<' template_argument_list '>'

    '<'  shift, and go to state 575

    '<'       [reduce using rule 228 (elaborated_type_specifier)]
    $default  reduce using rule 228 (elaborated_type_specifier)


state 401

  253 using_declaration: USING COLONCOLON unqualified_id ';' .

    $default  reduce using rule 253 (using_declaration)


state 402

  251 using_declaration: USING COLONCOLON nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 576


state 403

   34 nested_name_specifier: namespace_name . COLONCOLON nested_name_specifier
   36                      | namespace_name . COLONCOLON
  255 using_directive: USING NAMESPACE COLONCOLON namespace_name . ';'

    COLONCOLON  shift, and go to state 176
    ';'         shift, and go to state 577


state 404

  254 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 578
    original_namespace_name  go to state 49


state 405

  257 using_directive: USING NAMESPACE namespace_name ';' .

    $default  reduce using rule 257 (using_directive)


state 406

  256 using_directive: USING NAMESPACE nested_name_specifier namespace_name . ';'

    ';'  shift, and go to state 579


state 407

  249 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 44

    identifier              go to state 53
    unqualified_id          go to state 580
    conversion_function_id  go to state 91
    operator_function_id    go to state 92


state 408

  250 using_declaration: USING TYPENAME nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 581


state 409

  252 using_declaration: USING nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 252 (using_declaration)


state 410

   84 delete_expression: COLONCOLON DELETE . cast_expression
   86                  | COLONCOLON DELETE . '[' ']' cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '['               shift, and go to state 582
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 282
    integer_literal          go to state 283
    character_literal        go to state 284
    floating_literal         go to state 285
    string_literal           go to state 286
    boolean_literal          go to state 287
    primary_expression       go to state 288
    id_expression            go to state 289
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    postfix_expression       go to state 291
    unary_expression         go to state 292
    unary_operator           go to state 293
    new_expression           go to state 294
    delete_expression        go to state 295
    cast_expression          go to state 583
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 411

   73 new_expression: COLONCOLON NEW . new_placement_opt new_type_id new_initializer_opt
   75               | COLONCOLON NEW . new_placement_opt '(' type_id ')' new_initializer_opt

    '('  shift, and go to state 418

    '('       [reduce using rule 462 (new_placement_opt)]
    $default  reduce using rule 462 (new_placement_opt)

    new_placement      go to state 419
    new_placement_opt  go to state 584


state 412

   59 unary_expression: PLUSPLUS cast_expression .

    $default  reduce using rule 59 (unary_expression)


state 413

   60 unary_expression: MINUSMINUS cast_expression .

    $default  reduce using rule 60 (unary_expression)


state 414

   53 postfix_expression: CONST_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 116
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 157
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 585
    type_specifier_seq         go to state 311
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 415

   85 delete_expression: DELETE '[' . ']' cast_expression

    ']'  shift, and go to state 586


state 416

   83 delete_expression: DELETE cast_expression .

    $default  reduce using rule 83 (delete_expression)


state 417

   50 postfix_expression: DYNAMIC_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 116
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 157
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 587
    type_specifier_seq         go to state 311
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 418

   76 new_placement: '(' . expression_list ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    expression_list            go to state 588
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 481
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 419

  463 new_placement_opt: new_placement .

    $default  reduce using rule 463 (new_placement_opt)


state 420

   72 new_expression: NEW new_placement_opt . new_type_id new_initializer_opt
   74               | NEW new_placement_opt . '(' type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 116
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 589

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 157
    new_type_id                go to state 590
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 591
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 421

   52 postfix_expression: REINTERPRET_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 116
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 157
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 592
    type_specifier_seq         go to state 311
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 422

   23 primary_expression: '(' . expression ')'
   65 unary_expression: SIZEOF '(' . type_id ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 259
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 264
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 265
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 290
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 428
    expression                 go to state 429
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 593
    type_specifier_seq         go to state 311
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 423

   64 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 64 (unary_expression)


state 424

   51 postfix_expression: STATIC_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 116
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 157
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 594
    type_specifier_seq         go to state 311
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 425

  501 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 501 (assignment_expression_opt)


state 426

  450 throw_expression: THROW assignment_expression_opt .

    $default  reduce using rule 450 (throw_expression)


state 427

   54 postfix_expression: TYPEID '(' . expression ')'
   55                   | TYPEID '(' . type_id ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 259
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 264
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 265
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 290
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 428
    expression                 go to state 595
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 596
    type_specifier_seq         go to state 311
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 428

  136 expression: assignment_expression .

    $default  reduce using rule 136 (expression)


state 429

   23 primary_expression: '(' expression . ')'
  137 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 597
    ','  shift, and go to state 598


state 430

   88 cast_expression: '(' type_id . ')' cast_expression

    ')'  shift, and go to state 599


state 431

   61 unary_expression: '*' cast_expression .

    $default  reduce using rule 61 (unary_expression)


state 432

   62 unary_expression: '&' cast_expression .

    $default  reduce using rule 62 (unary_expression)


state 433

   48 postfix_expression: postfix_expression PLUSPLUS .

    $default  reduce using rule 48 (postfix_expression)


state 434

   49 postfix_expression: postfix_expression MINUSMINUS .

    $default  reduce using rule 49 (postfix_expression)


state 435

   44 postfix_expression: postfix_expression ARROW . TEMPLATE COLONCOLON id_expression
   45                   | postfix_expression ARROW . TEMPLATE id_expression
   46                   | postfix_expression ARROW . COLONCOLON id_expression
   47                   | postfix_expression ARROW . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 600
    OPERATOR        shift, and go to state 26
    TEMPLATE        shift, and go to state 601
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 602
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 436

   39 postfix_expression: postfix_expression '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    $default  reduce using rule 458 (expression_list_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    expression_list            go to state 603
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 481
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314
    expression_list_opt        go to state 604


state 437

   38 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 428
    expression                 go to state 605
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 438

   40 postfix_expression: postfix_expression '.' . TEMPLATE COLONCOLON id_expression
   41                   | postfix_expression '.' . TEMPLATE id_expression
   42                   | postfix_expression '.' . COLONCOLON id_expression
   43                   | postfix_expression '.' . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 606
    OPERATOR        shift, and go to state 26
    TEMPLATE        shift, and go to state 607
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 608
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 439

   63 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 63 (unary_expression)


state 440

   90 pm_expression: pm_expression DOTSTAR . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 282
    integer_literal          go to state 283
    character_literal        go to state 284
    floating_literal         go to state 285
    string_literal           go to state 286
    boolean_literal          go to state 287
    primary_expression       go to state 288
    id_expression            go to state 289
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    postfix_expression       go to state 291
    unary_expression         go to state 292
    unary_operator           go to state 293
    new_expression           go to state 294
    delete_expression        go to state 295
    cast_expression          go to state 609
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 441

   91 pm_expression: pm_expression ARROWSTAR . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 282
    integer_literal          go to state 283
    character_literal        go to state 284
    floating_literal         go to state 285
    string_literal           go to state 286
    boolean_literal          go to state 287
    primary_expression       go to state 288
    id_expression            go to state 289
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    postfix_expression       go to state 291
    unary_expression         go to state 292
    unary_operator           go to state 293
    new_expression           go to state 294
    delete_expression        go to state 295
    cast_expression          go to state 610
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 442

   93 multiplicative_expression: multiplicative_expression '*' . pm_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 282
    integer_literal          go to state 283
    character_literal        go to state 284
    floating_literal         go to state 285
    string_literal           go to state 286
    boolean_literal          go to state 287
    primary_expression       go to state 288
    id_expression            go to state 289
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    postfix_expression       go to state 291
    unary_expression         go to state 292
    unary_operator           go to state 293
    new_expression           go to state 294
    delete_expression        go to state 295
    cast_expression          go to state 296
    pm_expression            go to state 611
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 443

   94 multiplicative_expression: multiplicative_expression '/' . pm_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 282
    integer_literal          go to state 283
    character_literal        go to state 284
    floating_literal         go to state 285
    string_literal           go to state 286
    boolean_literal          go to state 287
    primary_expression       go to state 288
    id_expression            go to state 289
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    postfix_expression       go to state 291
    unary_expression         go to state 292
    unary_operator           go to state 293
    new_expression           go to state 294
    delete_expression        go to state 295
    cast_expression          go to state 296
    pm_expression            go to state 612
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 444

   95 multiplicative_expression: multiplicative_expression '%' . pm_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 282
    integer_literal          go to state 283
    character_literal        go to state 284
    floating_literal         go to state 285
    string_literal           go to state 286
    boolean_literal          go to state 287
    primary_expression       go to state 288
    id_expression            go to state 289
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    postfix_expression       go to state 291
    unary_expression         go to state 292
    unary_operator           go to state 293
    new_expression           go to state 294
    delete_expression        go to state 295
    cast_expression          go to state 296
    pm_expression            go to state 613
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 445

   97 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 614
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 446

   98 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 615
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 447

  100 shift_expression: shift_expression SL . additive_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 616
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 448

  101 shift_expression: shift_expression SR . additive_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 617
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 449

  105 relational_expression: relational_expression LTEQ . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 618
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 450

  106 relational_expression: relational_expression GTEQ . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 619
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 451

  103 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 620
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 452

  104 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 621
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 453

  108 equality_expression: equality_expression EQ . relational_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 622
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 454

  109 equality_expression: equality_expression NOTEQ . relational_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 623
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 455

  111 and_expression: and_expression '&' . equality_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 624
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 456

  113 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 625
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 457

  115 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 626
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 458

  117 logical_and_expression: logical_and_expression ANDAND . inclusive_or_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 627
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 459

  129 assignment_operator: ADDEQ .

    $default  reduce using rule 129 (assignment_operator)


state 460

  130 assignment_operator: SUBEQ .

    $default  reduce using rule 130 (assignment_operator)


state 461

  126 assignment_operator: MULEQ .

    $default  reduce using rule 126 (assignment_operator)


state 462

  127 assignment_operator: DIVEQ .

    $default  reduce using rule 127 (assignment_operator)


state 463

  128 assignment_operator: MODEQ .

    $default  reduce using rule 128 (assignment_operator)


state 464

  134 assignment_operator: XOREQ .

    $default  reduce using rule 134 (assignment_operator)


state 465

  133 assignment_operator: ANDEQ .

    $default  reduce using rule 133 (assignment_operator)


state 466

  135 assignment_operator: OREQ .

    $default  reduce using rule 135 (assignment_operator)


state 467

  131 assignment_operator: SREQ .

    $default  reduce using rule 131 (assignment_operator)


state 468

  132 assignment_operator: SLEQ .

    $default  reduce using rule 132 (assignment_operator)


state 469

  119 logical_or_expression: logical_or_expression OROR . logical_and_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 628
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 470

  121 conditional_expression: logical_or_expression '?' . expression ':' assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 428
    expression                 go to state 629
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 471

  125 assignment_operator: '=' .

    $default  reduce using rule 125 (assignment_operator)


state 472

  123 assignment_expression: logical_or_expression assignment_operator . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 630
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 473

  300 direct_abstract_declarator: '(' . abstract_declarator ')'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 236
    '('             shift, and go to state 473
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '('       [reduce using rule 484 (direct_abstract_declarator_opt)]
    $default  reduce using rule 484 (direct_abstract_declarator_opt)

    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 108
    template_name                   go to state 52
    nested_name_specifier           go to state 237
    ptr_operator                    go to state 474
    abstract_declarator             go to state 556
    direct_abstract_declarator      go to state 373
    template_id                     go to state 94
    direct_abstract_declarator_opt  go to state 375


state 474

  293 abstract_declarator: ptr_operator . abstract_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 236
    '('             shift, and go to state 473
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '('       [reduce using rule 484 (direct_abstract_declarator_opt)]
    '['       reduce using rule 484 (direct_abstract_declarator_opt)
    $default  reduce using rule 480 (abstract_declarator_opt)

    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 108
    template_name                   go to state 52
    nested_name_specifier           go to state 237
    ptr_operator                    go to state 474
    abstract_declarator             go to state 372
    direct_abstract_declarator      go to state 373
    template_id                     go to state 94
    abstract_declarator_opt         go to state 558
    direct_abstract_declarator_opt  go to state 375


state 475

  291 type_id: type_specifier_seq abstract_declarator_opt .

    $default  reduce using rule 291 (type_id)


state 476

  434 template_id: template_name '<' template_argument_list '>' .

    $default  reduce using rule 434 (template_id)


state 477

  436 template_argument_list: template_argument_list ',' . template_argument

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 259
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 264
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 265
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 281
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 290
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 309
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 310
    type_specifier_seq         go to state 311
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    template_argument          go to state 631
    throw_expression           go to state 314


state 478

  262 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 262 (init_declarator_list)


state 479

  263 init_declarator: declarator . initializer_opt

    '('  shift, and go to state 319
    '='  shift, and go to state 320

    $default  reduce using rule 476 (initializer_opt)

    initializer      go to state 321
    initializer_opt  go to state 323


state 480

   57 expression_list: expression_list . ',' assignment_expression
  318 initializer: '(' expression_list . ')'

    ')'  shift, and go to state 632
    ','  shift, and go to state 633


state 481

   56 expression_list: assignment_expression .

    $default  reduce using rule 56 (expression_list)


state 482

  320 initializer_clause: '{' . initializer_list COMMA_opt '}'
  321                   | '{' . '}'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280
    '{'               shift, and go to state 482
    '}'               shift, and go to state 634

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 483
    initializer_clause         go to state 635
    initializer_list           go to state 636
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 483

  319 initializer_clause: assignment_expression .

    $default  reduce using rule 319 (initializer_clause)


state 484

  317 initializer: '=' initializer_clause .

    $default  reduce using rule 317 (initializer)


state 485

  313 function_definition: decl_specifier_seq declarator ctor_initializer_opt function_body .

    $default  reduce using rule 313 (function_definition)


state 486

  443 function_try_block: TRY ctor_initializer_opt function_body . handler_seq

    CATCH  shift, and go to state 637

    handler_seq  go to state 638
    handler      go to state 639


state 487

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON
  376 mem_initializer_id: COLONCOLON class_name .

    COLONCOLON  shift, and go to state 177

    $default  reduce using rule 376 (mem_initializer_id)


state 488

  375 mem_initializer_id: COLONCOLON nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 101
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 640
    template_name  go to state 52
    template_id    go to state 94


state 489

  377 mem_initializer_id: nested_name_specifier class_name .

    $default  reduce using rule 377 (mem_initializer_id)


state 490

  373 mem_initializer_list: mem_initializer ',' . mem_initializer_list

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 326

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 327
    template_name            go to state 52
    identifier               go to state 328
    nested_name_specifier    go to state 329
    mem_initializer_list     go to state 641
    mem_initializer          go to state 331
    mem_initializer_id       go to state 332
    template_id              go to state 94


state 491

  374 mem_initializer: mem_initializer_id '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    $default  reduce using rule 458 (expression_list_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    expression_list            go to state 603
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 481
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314
    expression_list_opt        go to state 642


state 492

  164 jump_statement: BREAK . ';'

    ';'  shift, and go to state 643


state 493

  148 labeled_statement: CASE . constant_expression ':' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 338
    conditional_expression     go to state 339
    constant_expression        go to state 644
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 494

  165 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 645


state 495

  149 labeled_statement: DEFAULT . ':' statement

    ':'  shift, and go to state 646


state 496

  160 iteration_statement: DO . statement WHILE '(' expression ')' ';'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 259
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 492
    CASE              shift, and go to state 493
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    CONTINUE          shift, and go to state 494
    DEFAULT           shift, and go to state 495
    DELETE            shift, and go to state 263
    DO                shift, and go to state 496
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 264
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 186
    FALSE             shift, and go to state 265
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 497
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 498
    IF                shift, and go to state 499
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 500
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 267
    RETURN            shift, and go to state 501
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 268
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 269
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 502
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TRY               shift, and go to state 503
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 273
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 504
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280
    '{'               shift, and go to state 333

    $default  reduce using rule 468 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 505
    literal                     go to state 282
    integer_literal             go to state 283
    character_literal           go to state 284
    floating_literal            go to state 285
    string_literal              go to state 286
    boolean_literal             go to state 287
    primary_expression          go to state 288
    id_expression               go to state 289
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 290
    postfix_expression          go to state 291
    unary_expression            go to state 292
    unary_operator              go to state 293
    new_expression              go to state 294
    delete_expression           go to state 295
    cast_expression             go to state 296
    pm_expression               go to state 297
    multiplicative_expression   go to state 298
    additive_expression         go to state 299
    shift_expression            go to state 300
    relational_expression       go to state 301
    equality_expression         go to state 302
    and_expression              go to state 303
    exclusive_or_expression     go to state 304
    inclusive_or_expression     go to state 305
    logical_and_expression      go to state 306
    logical_or_expression       go to state 307
    conditional_expression      go to state 308
    assignment_expression       go to state 428
    expression                  go to state 506
    statement                   go to state 647
    labeled_statement           go to state 508
    expression_statement        go to state 509
    compound_statement          go to state 510
    selection_statement         go to state 512
    iteration_statement         go to state 513
    jump_statement              go to state 514
    declaration_statement       go to state 515
    block_declaration           go to state 516
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 517
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 518
    throw_expression            go to state 314
    expression_opt              go to state 519


state 497

  161 iteration_statement: FOR . '(' for_init_statement condition_opt ';' expression_opt ')' statement

    '('  shift, and go to state 648


state 498

  167 jump_statement: GOTO . identifier ';'

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 649


state 499

  154 selection_statement: IF . '(' condition ')' statement
  155                    | IF . '(' condition ')' statement ELSE statement

    '('  shift, and go to state 650


state 500

  244 namespace_alias_definition: NAMESPACE . identifier '=' qualified_namespace_specifier ';'

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 651


state 501

  166 jump_statement: RETURN . expression_opt ';'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    $default  reduce using rule 468 (expression_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 428
    expression                 go to state 506
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314
    expression_opt             go to state 652


state 502

  156 selection_statement: SWITCH . '(' condition ')' statement

    '('  shift, and go to state 653


state 503

  442 try_block: TRY . compound_statement handler_seq

    '{'  shift, and go to state 333

    compound_statement  go to state 654


state 504

  159 iteration_statement: WHILE . '(' condition ')' statement

    '('  shift, and go to state 655


state 505

   27 unqualified_id: identifier .
  147 labeled_statement: identifier . ':' statement

    ':'  shift, and go to state 656

    $default  reduce using rule 27 (unqualified_id)


state 506

  137 expression: expression . ',' assignment_expression
  469 expression_opt: expression .

    ','  shift, and go to state 598

    $default  reduce using rule 469 (expression_opt)


state 507

  152 statement_seq: statement .

    $default  reduce using rule 152 (statement_seq)


state 508

  139 statement: labeled_statement .

    $default  reduce using rule 139 (statement)


state 509

  140 statement: expression_statement .

    $default  reduce using rule 140 (statement)


state 510

  141 statement: compound_statement .

    $default  reduce using rule 141 (statement)


state 511

  153 statement_seq: statement_seq . statement
  471 statement_seq_opt: statement_seq .

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 259
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 492
    CASE              shift, and go to state 493
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    CONTINUE          shift, and go to state 494
    DEFAULT           shift, and go to state 495
    DELETE            shift, and go to state 263
    DO                shift, and go to state 496
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 264
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 186
    FALSE             shift, and go to state 265
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 497
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 498
    IF                shift, and go to state 499
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 500
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 267
    RETURN            shift, and go to state 501
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 268
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 269
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 502
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TRY               shift, and go to state 503
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 273
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 504
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280
    '{'               shift, and go to state 333

    '}'       reduce using rule 471 (statement_seq_opt)
    $default  reduce using rule 468 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 505
    literal                     go to state 282
    integer_literal             go to state 283
    character_literal           go to state 284
    floating_literal            go to state 285
    string_literal              go to state 286
    boolean_literal             go to state 287
    primary_expression          go to state 288
    id_expression               go to state 289
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 290
    postfix_expression          go to state 291
    unary_expression            go to state 292
    unary_operator              go to state 293
    new_expression              go to state 294
    delete_expression           go to state 295
    cast_expression             go to state 296
    pm_expression               go to state 297
    multiplicative_expression   go to state 298
    additive_expression         go to state 299
    shift_expression            go to state 300
    relational_expression       go to state 301
    equality_expression         go to state 302
    and_expression              go to state 303
    exclusive_or_expression     go to state 304
    inclusive_or_expression     go to state 305
    logical_and_expression      go to state 306
    logical_or_expression       go to state 307
    conditional_expression      go to state 308
    assignment_expression       go to state 428
    expression                  go to state 506
    statement                   go to state 657
    labeled_statement           go to state 508
    expression_statement        go to state 509
    compound_statement          go to state 510
    selection_statement         go to state 512
    iteration_statement         go to state 513
    jump_statement              go to state 514
    declaration_statement       go to state 515
    block_declaration           go to state 516
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 517
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 518
    throw_expression            go to state 314
    expression_opt              go to state 519


state 512

  142 statement: selection_statement .

    $default  reduce using rule 142 (statement)


state 513

  143 statement: iteration_statement .

    $default  reduce using rule 143 (statement)


state 514

  144 statement: jump_statement .

    $default  reduce using rule 144 (statement)


state 515

  145 statement: declaration_statement .

    $default  reduce using rule 145 (statement)


state 516

  168 declaration_statement: block_declaration .

    $default  reduce using rule 168 (declaration_statement)


state 517

  183 simple_declaration: decl_specifier_seq . init_declarator_list ';'
  184                   | decl_specifier_seq . ';'
  191 decl_specifier_seq: decl_specifier_seq . decl_specifier

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 186
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46
    ';'             shift, and go to state 187

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    id_expression              go to state 55
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 58
    decl_specifier             go to state 188
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    init_declarator_list       go to state 189
    init_declarator            go to state 190
    declarator                 go to state 479
    direct_declarator          go to state 83
    ptr_operator               go to state 84
    cv_qualifier               go to state 85
    declarator_id              go to state 86
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 518

  146 statement: try_block .

    $default  reduce using rule 146 (statement)


state 519

  150 expression_statement: expression_opt . ';'

    ';'  shift, and go to state 658


state 520

  151 compound_statement: '{' statement_seq_opt . '}'

    '}'  shift, and go to state 659


state 521

  267 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' . cv_qualifier_seq exception_specification
  268                  | direct_declarator '(' parameter_declaration_clause ')' . cv_qualifier_seq
  269                  | direct_declarator '(' parameter_declaration_clause ')' . exception_specification
  270                  | direct_declarator '(' parameter_declaration_clause ')' .

    CONST     shift, and go to state 13
    THROW     shift, and go to state 660
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 270 (direct_declarator)

    cv_qualifier_seq         go to state 661
    cv_qualifier             go to state 175
    exception_specification  go to state 662


state 522

  274 direct_declarator: direct_declarator '[' constant_expression_opt ']' .

    $default  reduce using rule 274 (direct_declarator)


state 523

  347 member_declarator: identifier ':' . constant_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 338
    conditional_expression     go to state 339
    constant_expression        go to state 663
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 524

  339 member_declaration: qualified_id ';' .

    $default  reduce using rule 339 (member_declaration)


state 525

  335 member_declaration: decl_specifier_seq ';' .

    $default  reduce using rule 335 (member_declaration)


state 526

  313 function_definition: decl_specifier_seq declarator . ctor_initializer_opt function_body
  315                    | decl_specifier_seq declarator . function_try_block
  344 member_declarator: declarator .
  345                  | declarator . pure_specifier
  346                  | declarator . constant_initializer

    TRY  shift, and go to state 192
    ':'  shift, and go to state 193
    '='  shift, and go to state 528

    '{'       reduce using rule 486 (ctor_initializer_opt)
    $default  reduce using rule 344 (member_declarator)

    pure_specifier        go to state 529
    constant_initializer  go to state 530
    ctor_initializer      go to state 194
    function_try_block    go to state 322
    ctor_initializer_opt  go to state 324


state 527

  334 member_declaration: decl_specifier_seq member_declarator_list . ';'
  343 member_declarator_list: member_declarator_list . ',' member_declarator

    ','  shift, and go to state 534
    ';'  shift, and go to state 664


state 528

  348 pure_specifier: '=' . '0'
  349 constant_initializer: '=' . constant_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280
    '0'               shift, and go to state 665

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 338
    conditional_expression     go to state 339
    constant_expression        go to state 666
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 529

  345 member_declarator: declarator pure_specifier .

    $default  reduce using rule 345 (member_declarator)


state 530

  346 member_declarator: declarator constant_initializer .

    $default  reduce using rule 346 (member_declarator)


state 531

  493 SEMICOLON_opt: ';' .

    $default  reduce using rule 493 (SEMICOLON_opt)


state 532

  338 member_declaration: function_definition SEMICOLON_opt .

    $default  reduce using rule 338 (member_declaration)


state 533

  332 member_specification: member_declaration member_specification_opt .

    $default  reduce using rule 332 (member_specification)


state 534

  343 member_declarator_list: member_declarator_list ',' . member_declarator

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 170
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 347
    id_expression            go to state 55
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 171
    declarator               go to state 667
    direct_declarator        go to state 83
    ptr_operator             go to state 84
    declarator_id            go to state 86
    member_declarator        go to state 668
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 535

  336 member_declaration: member_declarator_list ';' .

    $default  reduce using rule 336 (member_declaration)


state 536

  333 member_specification: access_specifier ':' . member_specification_opt

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 186
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    PRIVATE         shift, and go to state 342
    PROTECTED       shift, and go to state 343
    PUBLIC          shift, and go to state 344
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 345
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46
    ';'             shift, and go to state 346

    TEMPLATE  reduce using rule 496 (EXPORT_opt)
    $default  reduce using rule 490 (member_specification_opt)

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 347
    id_expression              go to state 55
    unqualified_id             go to state 56
    qualified_id               go to state 348
    nested_name_specifier      go to state 58
    decl_specifier             go to state 63
    decl_specifier_seq         go to state 349
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    using_declaration          go to state 350
    declarator                 go to state 351
    direct_declarator          go to state 83
    ptr_operator               go to state 84
    cv_qualifier               go to state 85
    declarator_id              go to state 86
    function_definition        go to state 352
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    member_specification       go to state 353
    member_declaration         go to state 354
    member_declarator_list     go to state 355
    member_declarator          go to state 356
    access_specifier           go to state 357
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_declaration       go to state 358
    template_id                go to state 94
    member_specification_opt   go to state 669
    EXPORT_opt                 go to state 98


state 537

  324 class_specifier: class_head '{' member_specification_opt '}' .

    $default  reduce using rule 324 (class_specifier)


state 538

  223 elaborated_type_specifier: class_key COLONCOLON nested_name_specifier identifier .

    $default  reduce using rule 223 (elaborated_type_specifier)


state 539

  353 base_specifier: COLONCOLON . nested_name_specifier class_name
  354               | COLONCOLON . class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 670
    template_name            go to state 52
    nested_name_specifier    go to state 671
    template_id              go to state 94


state 540

  357 base_specifier: VIRTUAL . access_specifier COLONCOLON nested_name_specifier_opt class_name
  358               | VIRTUAL . access_specifier nested_name_specifier_opt class_name
  359               | VIRTUAL . COLONCOLON nested_name_specifier_opt class_name
  360               | VIRTUAL . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 672
    PRIVATE         shift, and go to state 342
    PROTECTED       shift, and go to state 343
    PUBLIC          shift, and go to state 344

    CLASS_NAME     [reduce using rule 456 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 456 (nested_name_specifier_opt)]

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    nested_name_specifier      go to state 229
    access_specifier           go to state 673
    template_id                go to state 94
    nested_name_specifier_opt  go to state 674


state 541

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON
  356 base_specifier: class_name .

    COLONCOLON  shift, and go to state 177

    $default  reduce using rule 356 (base_specifier)


state 542

  355 base_specifier: nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 101
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 675
    template_name  go to state 52
    template_id    go to state 94


state 543

  350 base_clause: ':' base_specifier_list .
  352 base_specifier_list: base_specifier_list . ',' base_specifier

    ','  shift, and go to state 676

    $default  reduce using rule 350 (base_clause)


state 544

  351 base_specifier_list: base_specifier .

    $default  reduce using rule 351 (base_specifier_list)


state 545

  361 base_specifier: access_specifier . VIRTUAL COLONCOLON nested_name_specifier_opt class_name
  362               | access_specifier . VIRTUAL nested_name_specifier_opt class_name
  363               | access_specifier . COLONCOLON nested_name_specifier_opt class_name
  364               | access_specifier . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 677
    VIRTUAL         shift, and go to state 678

    CLASS_NAME     [reduce using rule 456 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 456 (nested_name_specifier_opt)]

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    nested_name_specifier      go to state 229
    template_id                go to state 94
    nested_name_specifier_opt  go to state 679


state 546

  328 class_head: class_key nested_name_specifier class_name base_clause .

    $default  reduce using rule 328 (class_head)


state 547

  329 class_key: CLASS .
  428 type_parameter: CLASS . identifier
  429               | CLASS . identifier '=' type_id

    IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 329 (class_key)

    identifier  go to state 680


state 548

  432 type_parameter: TEMPLATE . '<' template_parameter_list '>' CLASS identifier
  433               | TEMPLATE . '<' template_parameter_list '>' CLASS identifier '=' template_name

    '<'  shift, and go to state 681


state 549

  228 elaborated_type_specifier: TYPENAME . COLONCOLON_opt nested_name_specifier identifier
  229                          | TYPENAME . COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'
  430 type_parameter: TYPENAME . identifier
  431               | TYPENAME . identifier '=' type_id

    IDENTIFIER  shift, and go to state 1
    COLONCOLON  shift, and go to state 164

    $default  reduce using rule 460 (COLONCOLON_opt)

    identifier      go to state 682
    COLONCOLON_opt  go to state 165


state 550

  427 template_parameter: parameter_declaration .

    $default  reduce using rule 427 (template_parameter)


state 551

  423 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list . '>' declaration
  425 template_parameter_list: template_parameter_list . ',' template_parameter

    '>'  shift, and go to state 683
    ','  shift, and go to state 684


state 552

  424 template_parameter_list: template_parameter .

    $default  reduce using rule 424 (template_parameter_list)


state 553

  426 template_parameter: type_parameter .

    $default  reduce using rule 426 (template_parameter)


state 554

  273 direct_declarator: CLASS_NAME COLONCOLON CLASS_NAME '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 685


state 555

  272 direct_declarator: CLASS_NAME COLONCOLON declarator_id '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 686


state 556

  300 direct_abstract_declarator: '(' abstract_declarator . ')'

    ')'  shift, and go to state 687


state 557

  309 parameter_declaration: decl_specifier_seq declarator '=' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 688
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 558

  293 abstract_declarator: ptr_operator abstract_declarator_opt .

    $default  reduce using rule 293 (abstract_declarator)


state 559

  311 parameter_declaration: decl_specifier_seq abstract_declarator_opt '=' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 689
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 560

  295 direct_abstract_declarator: direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  296                           | direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' cv_qualifier_seq
  297                           | direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' exception_specification
  298                           | direct_abstract_declarator_opt '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 209
    COLONCOLON      shift, and go to state 116
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 186
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    $default  reduce using rule 304 (parameter_declaration_clause)

    typedef_name                  go to state 47
    namespace_name                go to state 48
    original_namespace_name       go to state 49
    class_name                    go to state 50
    enum_name                     go to state 51
    template_name                 go to state 52
    nested_name_specifier         go to state 157
    decl_specifier                go to state 63
    decl_specifier_seq            go to state 210
    storage_class_specifier       go to state 65
    function_specifier            go to state 66
    type_specifier                go to state 67
    simple_type_specifier         go to state 68
    type_name                     go to state 69
    elaborated_type_specifier     go to state 70
    enum_specifier                go to state 71
    cv_qualifier                  go to state 85
    parameter_declaration_clause  go to state 690
    parameter_declaration_list    go to state 212
    parameter_declaration         go to state 213
    class_specifier               go to state 88
    class_head                    go to state 89
    class_key                     go to state 90
    template_id                   go to state 94


state 561

  299 direct_abstract_declarator: direct_abstract_declarator_opt '[' . constant_expression_opt ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    $default  reduce using rule 478 (constant_expression_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 338
    conditional_expression     go to state 339
    constant_expression        go to state 340
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    constant_expression_opt    go to state 691


state 562

  305 parameter_declaration_clause: parameter_declaration_list ',' ELLIPSIS .

    $default  reduce using rule 305 (parameter_declaration_clause)


state 563

  307 parameter_declaration_list: parameter_declaration_list ',' parameter_declaration .

    $default  reduce using rule 307 (parameter_declaration_list)


state 564

  258 asm_definition: ASM '(' string_literal ')' ';' .

    $default  reduce using rule 258 (asm_definition)


state 565

  232 enumerator_list: enumerator_list ',' . enumerator_definition

    IDENTIFIER  shift, and go to state 1

    identifier             go to state 382
    enumerator_definition  go to state 692
    enumerator             go to state 385


state 566

  234 enumerator_definition: enumerator '=' . constant_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 338
    conditional_expression     go to state 339
    constant_expression        go to state 693
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 567

  230 enum_specifier: ENUM identifier '{' enumerator_list_opt '}' .

    $default  reduce using rule 230 (enum_specifier)


state 568

  259 linkage_specification: EXTERN string_literal '{' declaration_seq_opt '}' .

    $default  reduce using rule 259 (linkage_specification)


state 569

  241 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body '}' .

    $default  reduce using rule 241 (extension_namespace_definition)


state 570

   34 nested_name_specifier: namespace_name . COLONCOLON nested_name_specifier
   36                      | namespace_name . COLONCOLON
  246 qualified_namespace_specifier: COLONCOLON namespace_name .

    COLONCOLON  shift, and go to state 176

    $default  reduce using rule 246 (qualified_namespace_specifier)


state 571

  245 qualified_namespace_specifier: COLONCOLON nested_name_specifier . namespace_name

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 694
    original_namespace_name  go to state 49


state 572

  247 qualified_namespace_specifier: nested_name_specifier namespace_name .

    $default  reduce using rule 247 (qualified_namespace_specifier)


state 573

  244 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier ';' .

    $default  reduce using rule 244 (namespace_alias_definition)


state 574

  240 original_namespace_definition: NAMESPACE identifier '{' namespace_body '}' .

    $default  reduce using rule 240 (original_namespace_definition)


state 575

  229 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' . template_argument_list '>'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 259
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 264
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 265
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 281
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 290
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 309
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 310
    type_specifier_seq         go to state 311
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    template_argument_list     go to state 695
    template_argument          go to state 313
    throw_expression           go to state 314


state 576

  251 using_declaration: USING COLONCOLON nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 251 (using_declaration)


state 577

  255 using_directive: USING NAMESPACE COLONCOLON namespace_name ';' .

    $default  reduce using rule 255 (using_directive)


state 578

  254 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier namespace_name . ';'

    ';'  shift, and go to state 696


state 579

  256 using_directive: USING NAMESPACE nested_name_specifier namespace_name ';' .

    $default  reduce using rule 256 (using_directive)


state 580

  249 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 697


state 581

  250 using_declaration: USING TYPENAME nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 250 (using_declaration)


state 582

   86 delete_expression: COLONCOLON DELETE '[' . ']' cast_expression

    ']'  shift, and go to state 698


state 583

   84 delete_expression: COLONCOLON DELETE cast_expression .

    $default  reduce using rule 84 (delete_expression)


state 584

   73 new_expression: COLONCOLON NEW new_placement_opt . new_type_id new_initializer_opt
   75               | COLONCOLON NEW new_placement_opt . '(' type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 116
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 699

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 157
    new_type_id                go to state 700
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 591
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 585

   53 postfix_expression: CONST_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 701


state 586

   85 delete_expression: DELETE '[' ']' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 282
    integer_literal          go to state 283
    character_literal        go to state 284
    floating_literal         go to state 285
    string_literal           go to state 286
    boolean_literal          go to state 287
    primary_expression       go to state 288
    id_expression            go to state 289
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    postfix_expression       go to state 291
    unary_expression         go to state 292
    unary_operator           go to state 293
    new_expression           go to state 294
    delete_expression        go to state 295
    cast_expression          go to state 702
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 587

   50 postfix_expression: DYNAMIC_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 703


state 588

   57 expression_list: expression_list . ',' assignment_expression
   76 new_placement: '(' expression_list . ')'

    ')'  shift, and go to state 704
    ','  shift, and go to state 633


state 589

   74 new_expression: NEW new_placement_opt '(' . type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 116
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 157
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 705
    type_specifier_seq         go to state 311
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 590

   72 new_expression: NEW new_placement_opt new_type_id . new_initializer_opt

    '('  shift, and go to state 706

    $default  reduce using rule 464 (new_initializer_opt)

    new_initializer      go to state 707
    new_initializer_opt  go to state 708


state 591

   77 new_type_id: type_specifier_seq . new_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 236
    '['             shift, and go to state 709
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '*'       [reduce using rule 466 (new_declarator_opt)]
    '&'       [reduce using rule 466 (new_declarator_opt)]
    $default  reduce using rule 466 (new_declarator_opt)

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    nested_name_specifier    go to state 237
    new_declarator           go to state 710
    direct_new_declarator    go to state 711
    ptr_operator             go to state 712
    template_id              go to state 94
    new_declarator_opt       go to state 713


state 592

   52 postfix_expression: REINTERPRET_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 714


state 593

   65 unary_expression: SIZEOF '(' type_id . ')'

    ')'  shift, and go to state 715


state 594

   51 postfix_expression: STATIC_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 716


state 595

   54 postfix_expression: TYPEID '(' expression . ')'
  137 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 717
    ','  shift, and go to state 598


state 596

   55 postfix_expression: TYPEID '(' type_id . ')'

    ')'  shift, and go to state 718


state 597

   23 primary_expression: '(' expression ')' .

    $default  reduce using rule 23 (primary_expression)


state 598

  137 expression: expression ',' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 719
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 599

   88 cast_expression: '(' type_id ')' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 282
    integer_literal          go to state 283
    character_literal        go to state 284
    floating_literal         go to state 285
    string_literal           go to state 286
    boolean_literal          go to state 287
    primary_expression       go to state 288
    id_expression            go to state 289
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    postfix_expression       go to state 291
    unary_expression         go to state 292
    unary_operator           go to state 293
    new_expression           go to state 294
    delete_expression        go to state 295
    cast_expression          go to state 720
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 600

   46 postfix_expression: postfix_expression ARROW COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 721
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 601

   44 postfix_expression: postfix_expression ARROW TEMPLATE . COLONCOLON id_expression
   45                   | postfix_expression ARROW TEMPLATE . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 722
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 723
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 602

   47 postfix_expression: postfix_expression ARROW id_expression .

    $default  reduce using rule 47 (postfix_expression)


state 603

   57 expression_list: expression_list . ',' assignment_expression
  459 expression_list_opt: expression_list .

    ','  shift, and go to state 633

    $default  reduce using rule 459 (expression_list_opt)


state 604

   39 postfix_expression: postfix_expression '(' expression_list_opt . ')'

    ')'  shift, and go to state 724


state 605

   38 postfix_expression: postfix_expression '[' expression . ']'
  137 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 725
    ','  shift, and go to state 598


state 606

   42 postfix_expression: postfix_expression '.' COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 726
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 607

   40 postfix_expression: postfix_expression '.' TEMPLATE . COLONCOLON id_expression
   41                   | postfix_expression '.' TEMPLATE . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 727
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 728
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 608

   43 postfix_expression: postfix_expression '.' id_expression .

    $default  reduce using rule 43 (postfix_expression)


state 609

   90 pm_expression: pm_expression DOTSTAR cast_expression .

    $default  reduce using rule 90 (pm_expression)


state 610

   91 pm_expression: pm_expression ARROWSTAR cast_expression .

    $default  reduce using rule 91 (pm_expression)


state 611

   90 pm_expression: pm_expression . DOTSTAR cast_expression
   91              | pm_expression . ARROWSTAR cast_expression
   93 multiplicative_expression: multiplicative_expression '*' pm_expression .

    DOTSTAR    shift, and go to state 440
    ARROWSTAR  shift, and go to state 441

    $default  reduce using rule 93 (multiplicative_expression)


state 612

   90 pm_expression: pm_expression . DOTSTAR cast_expression
   91              | pm_expression . ARROWSTAR cast_expression
   94 multiplicative_expression: multiplicative_expression '/' pm_expression .

    DOTSTAR    shift, and go to state 440
    ARROWSTAR  shift, and go to state 441

    $default  reduce using rule 94 (multiplicative_expression)


state 613

   90 pm_expression: pm_expression . DOTSTAR cast_expression
   91              | pm_expression . ARROWSTAR cast_expression
   95 multiplicative_expression: multiplicative_expression '%' pm_expression .

    DOTSTAR    shift, and go to state 440
    ARROWSTAR  shift, and go to state 441

    $default  reduce using rule 95 (multiplicative_expression)


state 614

   93 multiplicative_expression: multiplicative_expression . '*' pm_expression
   94                          | multiplicative_expression . '/' pm_expression
   95                          | multiplicative_expression . '%' pm_expression
   97 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 442
    '/'  shift, and go to state 443
    '%'  shift, and go to state 444

    $default  reduce using rule 97 (additive_expression)


state 615

   93 multiplicative_expression: multiplicative_expression . '*' pm_expression
   94                          | multiplicative_expression . '/' pm_expression
   95                          | multiplicative_expression . '%' pm_expression
   98 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 442
    '/'  shift, and go to state 443
    '%'  shift, and go to state 444

    $default  reduce using rule 98 (additive_expression)


state 616

   97 additive_expression: additive_expression . '+' multiplicative_expression
   98                    | additive_expression . '-' multiplicative_expression
  100 shift_expression: shift_expression SL additive_expression .

    '+'  shift, and go to state 445
    '-'  shift, and go to state 446

    $default  reduce using rule 100 (shift_expression)


state 617

   97 additive_expression: additive_expression . '+' multiplicative_expression
   98                    | additive_expression . '-' multiplicative_expression
  101 shift_expression: shift_expression SR additive_expression .

    '+'  shift, and go to state 445
    '-'  shift, and go to state 446

    $default  reduce using rule 101 (shift_expression)


state 618

  100 shift_expression: shift_expression . SL additive_expression
  101                 | shift_expression . SR additive_expression
  105 relational_expression: relational_expression LTEQ shift_expression .

    SL  shift, and go to state 447
    SR  shift, and go to state 448

    $default  reduce using rule 105 (relational_expression)


state 619

  100 shift_expression: shift_expression . SL additive_expression
  101                 | shift_expression . SR additive_expression
  106 relational_expression: relational_expression GTEQ shift_expression .

    SL  shift, and go to state 447
    SR  shift, and go to state 448

    $default  reduce using rule 106 (relational_expression)


state 620

  100 shift_expression: shift_expression . SL additive_expression
  101                 | shift_expression . SR additive_expression
  103 relational_expression: relational_expression '<' shift_expression .

    SL  shift, and go to state 447
    SR  shift, and go to state 448

    $default  reduce using rule 103 (relational_expression)


state 621

  100 shift_expression: shift_expression . SL additive_expression
  101                 | shift_expression . SR additive_expression
  104 relational_expression: relational_expression '>' shift_expression .

    SL  shift, and go to state 447
    SR  shift, and go to state 448

    $default  reduce using rule 104 (relational_expression)


state 622

  103 relational_expression: relational_expression . '<' shift_expression
  104                      | relational_expression . '>' shift_expression
  105                      | relational_expression . LTEQ shift_expression
  106                      | relational_expression . GTEQ shift_expression
  108 equality_expression: equality_expression EQ relational_expression .

    LTEQ  shift, and go to state 449
    GTEQ  shift, and go to state 450
    '<'   shift, and go to state 451
    '>'   shift, and go to state 452

    '>'       [reduce using rule 108 (equality_expression)]
    $default  reduce using rule 108 (equality_expression)


state 623

  103 relational_expression: relational_expression . '<' shift_expression
  104                      | relational_expression . '>' shift_expression
  105                      | relational_expression . LTEQ shift_expression
  106                      | relational_expression . GTEQ shift_expression
  109 equality_expression: equality_expression NOTEQ relational_expression .

    LTEQ  shift, and go to state 449
    GTEQ  shift, and go to state 450
    '<'   shift, and go to state 451
    '>'   shift, and go to state 452

    '>'       [reduce using rule 109 (equality_expression)]
    $default  reduce using rule 109 (equality_expression)


state 624

  108 equality_expression: equality_expression . EQ relational_expression
  109                    | equality_expression . NOTEQ relational_expression
  111 and_expression: and_expression '&' equality_expression .

    EQ     shift, and go to state 453
    NOTEQ  shift, and go to state 454

    $default  reduce using rule 111 (and_expression)


state 625

  111 and_expression: and_expression . '&' equality_expression
  113 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 455

    $default  reduce using rule 113 (exclusive_or_expression)


state 626

  113 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  115 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 456

    $default  reduce using rule 115 (inclusive_or_expression)


state 627

  115 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  117 logical_and_expression: logical_and_expression ANDAND inclusive_or_expression .

    '|'  shift, and go to state 457

    $default  reduce using rule 117 (logical_and_expression)


state 628

  117 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression
  119 logical_or_expression: logical_or_expression OROR logical_and_expression .

    ANDAND  shift, and go to state 458

    $default  reduce using rule 119 (logical_or_expression)


state 629

  121 conditional_expression: logical_or_expression '?' expression . ':' assignment_expression
  137 expression: expression . ',' assignment_expression

    ','  shift, and go to state 598
    ':'  shift, and go to state 729


state 630

  123 assignment_expression: logical_or_expression assignment_operator assignment_expression .

    $default  reduce using rule 123 (assignment_expression)


state 631

  436 template_argument_list: template_argument_list ',' template_argument .

    $default  reduce using rule 436 (template_argument_list)


state 632

  318 initializer: '(' expression_list ')' .

    $default  reduce using rule 318 (initializer)


state 633

   57 expression_list: expression_list ',' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 730
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 634

  321 initializer_clause: '{' '}' .

    $default  reduce using rule 321 (initializer_clause)


state 635

  322 initializer_list: initializer_clause .

    $default  reduce using rule 322 (initializer_list)


state 636

  320 initializer_clause: '{' initializer_list . COMMA_opt '}'
  323 initializer_list: initializer_list . ',' initializer_clause

    ','  shift, and go to state 731

    $default  reduce using rule 488 (COMMA_opt)

    COMMA_opt  go to state 732


state 637

  445 handler: CATCH . '(' exception_declaration ')' compound_statement

    '('  shift, and go to state 733


state 638

  443 function_try_block: TRY ctor_initializer_opt function_body handler_seq .

    $default  reduce using rule 443 (function_try_block)


state 639

  444 handler_seq: handler . handler_seq_opt

    CATCH  shift, and go to state 637

    $default  reduce using rule 498 (handler_seq_opt)

    handler_seq      go to state 734
    handler          go to state 639
    handler_seq_opt  go to state 735


state 640

  375 mem_initializer_id: COLONCOLON nested_name_specifier class_name .

    $default  reduce using rule 375 (mem_initializer_id)


state 641

  373 mem_initializer_list: mem_initializer ',' mem_initializer_list .

    $default  reduce using rule 373 (mem_initializer_list)


state 642

  374 mem_initializer: mem_initializer_id '(' expression_list_opt . ')'

    ')'  shift, and go to state 736


state 643

  164 jump_statement: BREAK ';' .

    $default  reduce using rule 164 (jump_statement)


state 644

  148 labeled_statement: CASE constant_expression . ':' statement

    ':'  shift, and go to state 737


state 645

  165 jump_statement: CONTINUE ';' .

    $default  reduce using rule 165 (jump_statement)


state 646

  149 labeled_statement: DEFAULT ':' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 259
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 492
    CASE              shift, and go to state 493
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    CONTINUE          shift, and go to state 494
    DEFAULT           shift, and go to state 495
    DELETE            shift, and go to state 263
    DO                shift, and go to state 496
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 264
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 186
    FALSE             shift, and go to state 265
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 497
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 498
    IF                shift, and go to state 499
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 500
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 267
    RETURN            shift, and go to state 501
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 268
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 269
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 502
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TRY               shift, and go to state 503
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 273
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 504
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280
    '{'               shift, and go to state 333

    $default  reduce using rule 468 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 505
    literal                     go to state 282
    integer_literal             go to state 283
    character_literal           go to state 284
    floating_literal            go to state 285
    string_literal              go to state 286
    boolean_literal             go to state 287
    primary_expression          go to state 288
    id_expression               go to state 289
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 290
    postfix_expression          go to state 291
    unary_expression            go to state 292
    unary_operator              go to state 293
    new_expression              go to state 294
    delete_expression           go to state 295
    cast_expression             go to state 296
    pm_expression               go to state 297
    multiplicative_expression   go to state 298
    additive_expression         go to state 299
    shift_expression            go to state 300
    relational_expression       go to state 301
    equality_expression         go to state 302
    and_expression              go to state 303
    exclusive_or_expression     go to state 304
    inclusive_or_expression     go to state 305
    logical_and_expression      go to state 306
    logical_or_expression       go to state 307
    conditional_expression      go to state 308
    assignment_expression       go to state 428
    expression                  go to state 506
    statement                   go to state 738
    labeled_statement           go to state 508
    expression_statement        go to state 509
    compound_statement          go to state 510
    selection_statement         go to state 512
    iteration_statement         go to state 513
    jump_statement              go to state 514
    declaration_statement       go to state 515
    block_declaration           go to state 516
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 517
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 518
    throw_expression            go to state 314
    expression_opt              go to state 519


state 647

  160 iteration_statement: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 739


state 648

  161 iteration_statement: FOR '(' . for_init_statement condition_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 259
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 264
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 186
    FALSE             shift, and go to state 265
    FLOAT             shift, and go to state 19
    FRIEND            shift, and go to state 20
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 267
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 268
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 269
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 273
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    $default  reduce using rule 468 (expression_opt)

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 290
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 428
    expression                 go to state 506
    expression_statement       go to state 740
    for_init_statement         go to state 741
    simple_declaration         go to state 742
    decl_specifier             go to state 63
    decl_specifier_seq         go to state 517
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314
    expression_opt             go to state 519


state 649

  167 jump_statement: GOTO identifier . ';'

    ';'  shift, and go to state 743


state 650

  154 selection_statement: IF '(' . condition ')' statement
  155                    | IF '(' . condition ')' statement ELSE statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 259
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 264
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 265
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 290
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 428
    expression                 go to state 744
    condition                  go to state 745
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 746
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 651

  244 namespace_alias_definition: NAMESPACE identifier . '=' qualified_namespace_specifier ';'

    '='  shift, and go to state 227


state 652

  166 jump_statement: RETURN expression_opt . ';'

    ';'  shift, and go to state 747


state 653

  156 selection_statement: SWITCH '(' . condition ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 259
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 264
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 265
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 290
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 428
    expression                 go to state 744
    condition                  go to state 748
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 746
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 654

  442 try_block: TRY compound_statement . handler_seq

    CATCH  shift, and go to state 637

    handler_seq  go to state 749
    handler      go to state 639


state 655

  159 iteration_statement: WHILE '(' . condition ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 259
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 264
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 265
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 290
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 428
    expression                 go to state 744
    condition                  go to state 750
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 746
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 656

  147 labeled_statement: identifier ':' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 259
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 492
    CASE              shift, and go to state 493
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    CONTINUE          shift, and go to state 494
    DEFAULT           shift, and go to state 495
    DELETE            shift, and go to state 263
    DO                shift, and go to state 496
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 264
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 186
    FALSE             shift, and go to state 265
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 497
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 498
    IF                shift, and go to state 499
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 500
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 267
    RETURN            shift, and go to state 501
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 268
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 269
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 502
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TRY               shift, and go to state 503
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 273
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 504
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280
    '{'               shift, and go to state 333

    $default  reduce using rule 468 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 505
    literal                     go to state 282
    integer_literal             go to state 283
    character_literal           go to state 284
    floating_literal            go to state 285
    string_literal              go to state 286
    boolean_literal             go to state 287
    primary_expression          go to state 288
    id_expression               go to state 289
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 290
    postfix_expression          go to state 291
    unary_expression            go to state 292
    unary_operator              go to state 293
    new_expression              go to state 294
    delete_expression           go to state 295
    cast_expression             go to state 296
    pm_expression               go to state 297
    multiplicative_expression   go to state 298
    additive_expression         go to state 299
    shift_expression            go to state 300
    relational_expression       go to state 301
    equality_expression         go to state 302
    and_expression              go to state 303
    exclusive_or_expression     go to state 304
    inclusive_or_expression     go to state 305
    logical_and_expression      go to state 306
    logical_or_expression       go to state 307
    conditional_expression      go to state 308
    assignment_expression       go to state 428
    expression                  go to state 506
    statement                   go to state 751
    labeled_statement           go to state 508
    expression_statement        go to state 509
    compound_statement          go to state 510
    selection_statement         go to state 512
    iteration_statement         go to state 513
    jump_statement              go to state 514
    declaration_statement       go to state 515
    block_declaration           go to state 516
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 517
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 518
    throw_expression            go to state 314
    expression_opt              go to state 519


state 657

  153 statement_seq: statement_seq statement .

    $default  reduce using rule 153 (statement_seq)


state 658

  150 expression_statement: expression_opt ';' .

    $default  reduce using rule 150 (expression_statement)


state 659

  151 compound_statement: '{' statement_seq_opt '}' .

    $default  reduce using rule 151 (compound_statement)


state 660

  451 exception_specification: THROW . '(' type_id_list_opt ')'

    '('  shift, and go to state 752


state 661

  267 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq . exception_specification
  268                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq .

    THROW  shift, and go to state 660

    $default  reduce using rule 268 (direct_declarator)

    exception_specification  go to state 753


state 662

  269 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' exception_specification .

    $default  reduce using rule 269 (direct_declarator)


state 663

  347 member_declarator: identifier ':' constant_expression .

    $default  reduce using rule 347 (member_declarator)


state 664

  334 member_declaration: decl_specifier_seq member_declarator_list ';' .

    $default  reduce using rule 334 (member_declaration)


state 665

  348 pure_specifier: '=' '0' .

    $default  reduce using rule 348 (pure_specifier)


state 666

  349 constant_initializer: '=' constant_expression .

    $default  reduce using rule 349 (constant_initializer)


state 667

  344 member_declarator: declarator .
  345                  | declarator . pure_specifier
  346                  | declarator . constant_initializer

    '='  shift, and go to state 528

    $default  reduce using rule 344 (member_declarator)

    pure_specifier        go to state 529
    constant_initializer  go to state 530


state 668

  343 member_declarator_list: member_declarator_list ',' member_declarator .

    $default  reduce using rule 343 (member_declarator_list)


state 669

  333 member_specification: access_specifier ':' member_specification_opt .

    $default  reduce using rule 333 (member_specification)


state 670

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON
  354 base_specifier: COLONCOLON class_name .

    COLONCOLON  shift, and go to state 177

    $default  reduce using rule 354 (base_specifier)


state 671

  353 base_specifier: COLONCOLON nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 101
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 754
    template_name  go to state 52
    template_id    go to state 94


state 672

  359 base_specifier: VIRTUAL COLONCOLON . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 456 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 456 (nested_name_specifier_opt)]

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    nested_name_specifier      go to state 229
    template_id                go to state 94
    nested_name_specifier_opt  go to state 755


state 673

  357 base_specifier: VIRTUAL access_specifier . COLONCOLON nested_name_specifier_opt class_name
  358               | VIRTUAL access_specifier . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 756

    CLASS_NAME     [reduce using rule 456 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 456 (nested_name_specifier_opt)]

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    nested_name_specifier      go to state 229
    template_id                go to state 94
    nested_name_specifier_opt  go to state 757


state 674

  360 base_specifier: VIRTUAL nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 101
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 758
    template_name  go to state 52
    template_id    go to state 94


state 675

  355 base_specifier: nested_name_specifier class_name .

    $default  reduce using rule 355 (base_specifier)


state 676

  352 base_specifier_list: base_specifier_list ',' . base_specifier

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 539
    PRIVATE         shift, and go to state 342
    PROTECTED       shift, and go to state 343
    PUBLIC          shift, and go to state 344
    VIRTUAL         shift, and go to state 540

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 541
    template_name            go to state 52
    nested_name_specifier    go to state 542
    base_specifier           go to state 759
    access_specifier         go to state 545
    template_id              go to state 94


state 677

  363 base_specifier: access_specifier COLONCOLON . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 456 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 456 (nested_name_specifier_opt)]

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    nested_name_specifier      go to state 229
    template_id                go to state 94
    nested_name_specifier_opt  go to state 760


state 678

  361 base_specifier: access_specifier VIRTUAL . COLONCOLON nested_name_specifier_opt class_name
  362               | access_specifier VIRTUAL . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 761

    CLASS_NAME     [reduce using rule 456 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 456 (nested_name_specifier_opt)]

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    nested_name_specifier      go to state 229
    template_id                go to state 94
    nested_name_specifier_opt  go to state 762


state 679

  364 base_specifier: access_specifier nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 101
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 763
    template_name  go to state 52
    template_id    go to state 94


state 680

  428 type_parameter: CLASS identifier .
  429               | CLASS identifier . '=' type_id

    '='  shift, and go to state 764

    $default  reduce using rule 428 (type_parameter)


state 681

  432 type_parameter: TEMPLATE '<' . template_parameter_list '>' CLASS identifier
  433               | TEMPLATE '<' . template_parameter_list '>' CLASS identifier '=' template_name

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 116
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 547
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 186
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 548
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 549
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 157
    decl_specifier             go to state 63
    decl_specifier_seq         go to state 210
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    parameter_declaration      go to state 550
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_parameter_list    go to state 765
    template_parameter         go to state 552
    type_parameter             go to state 553
    template_id                go to state 94


state 682

  430 type_parameter: TYPENAME identifier .
  431               | TYPENAME identifier . '=' type_id

    '='  shift, and go to state 766

    $default  reduce using rule 430 (type_parameter)


state 683

  423 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' . declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    TEMPLATE  [reduce using rule 496 (EXPORT_opt)]

    typedef_name                    go to state 47
    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 50
    enum_name                       go to state 51
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 58
    declaration                     go to state 767
    block_declaration               go to state 61
    simple_declaration              go to state 62
    decl_specifier                  go to state 63
    decl_specifier_seq              go to state 64
    storage_class_specifier         go to state 65
    function_specifier              go to state 66
    type_specifier                  go to state 67
    simple_type_specifier           go to state 68
    type_name                       go to state 69
    elaborated_type_specifier       go to state 70
    enum_specifier                  go to state 71
    namespace_definition            go to state 72
    named_namespace_definition      go to state 73
    original_namespace_definition   go to state 74
    extension_namespace_definition  go to state 75
    unnamed_namespace_definition    go to state 76
    namespace_alias_definition      go to state 77
    using_declaration               go to state 78
    using_directive                 go to state 79
    asm_definition                  go to state 80
    linkage_specification           go to state 81
    declarator                      go to state 82
    direct_declarator               go to state 83
    ptr_operator                    go to state 84
    cv_qualifier                    go to state 85
    declarator_id                   go to state 86
    function_definition             go to state 87
    class_specifier                 go to state 88
    class_head                      go to state 89
    class_key                       go to state 90
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_declaration            go to state 93
    template_id                     go to state 94
    explicit_instantiation          go to state 95
    explicit_specialization         go to state 96
    EXPORT_opt                      go to state 98


state 684

  425 template_parameter_list: template_parameter_list ',' . template_parameter

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 116
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 547
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 186
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 548
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 549
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 157
    decl_specifier             go to state 63
    decl_specifier_seq         go to state 210
    storage_class_specifier    go to state 65
    function_specifier         go to state 66
    type_specifier             go to state 67
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    parameter_declaration      go to state 550
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_parameter         go to state 768
    type_parameter             go to state 553
    template_id                go to state 94


state 685

  273 direct_declarator: CLASS_NAME COLONCOLON CLASS_NAME '(' parameter_declaration_clause ')' .

    $default  reduce using rule 273 (direct_declarator)


state 686

  272 direct_declarator: CLASS_NAME COLONCOLON declarator_id '(' parameter_declaration_clause ')' .

    $default  reduce using rule 272 (direct_declarator)


state 687

  300 direct_abstract_declarator: '(' abstract_declarator ')' .

    $default  reduce using rule 300 (direct_abstract_declarator)


state 688

  309 parameter_declaration: decl_specifier_seq declarator '=' assignment_expression .

    $default  reduce using rule 309 (parameter_declaration)


state 689

  311 parameter_declaration: decl_specifier_seq abstract_declarator_opt '=' assignment_expression .

    $default  reduce using rule 311 (parameter_declaration)


state 690

  295 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' cv_qualifier_seq exception_specification
  296                           | direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' cv_qualifier_seq
  297                           | direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' exception_specification
  298                           | direct_abstract_declarator_opt '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 769


state 691

  299 direct_abstract_declarator: direct_abstract_declarator_opt '[' constant_expression_opt . ']'

    ']'  shift, and go to state 770


state 692

  232 enumerator_list: enumerator_list ',' enumerator_definition .

    $default  reduce using rule 232 (enumerator_list)


state 693

  234 enumerator_definition: enumerator '=' constant_expression .

    $default  reduce using rule 234 (enumerator_definition)


state 694

  245 qualified_namespace_specifier: COLONCOLON nested_name_specifier namespace_name .

    $default  reduce using rule 245 (qualified_namespace_specifier)


state 695

  229 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list . '>'
  436 template_argument_list: template_argument_list . ',' template_argument

    '>'  shift, and go to state 771
    ','  shift, and go to state 477


state 696

  254 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier namespace_name ';' .

    $default  reduce using rule 254 (using_directive)


state 697

  249 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 249 (using_declaration)


state 698

   86 delete_expression: COLONCOLON DELETE '[' ']' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    literal                  go to state 282
    integer_literal          go to state 283
    character_literal        go to state 284
    floating_literal         go to state 285
    string_literal           go to state 286
    boolean_literal          go to state 287
    primary_expression       go to state 288
    id_expression            go to state 289
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    postfix_expression       go to state 291
    unary_expression         go to state 292
    unary_operator           go to state 293
    new_expression           go to state 294
    delete_expression        go to state 295
    cast_expression          go to state 772
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 699

   75 new_expression: COLONCOLON NEW new_placement_opt '(' . type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 116
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 157
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 773
    type_specifier_seq         go to state 311
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 700

   73 new_expression: COLONCOLON NEW new_placement_opt new_type_id . new_initializer_opt

    '('  shift, and go to state 706

    $default  reduce using rule 464 (new_initializer_opt)

    new_initializer      go to state 707
    new_initializer_opt  go to state 774


state 701

   53 postfix_expression: CONST_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 775


state 702

   85 delete_expression: DELETE '[' ']' cast_expression .

    $default  reduce using rule 85 (delete_expression)


state 703

   50 postfix_expression: DYNAMIC_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 776


state 704

   76 new_placement: '(' expression_list ')' .

    $default  reduce using rule 76 (new_placement)


state 705

   74 new_expression: NEW new_placement_opt '(' type_id . ')' new_initializer_opt

    ')'  shift, and go to state 777


state 706

   82 new_initializer: '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    $default  reduce using rule 458 (expression_list_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    expression_list            go to state 603
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 481
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314
    expression_list_opt        go to state 778


state 707

  465 new_initializer_opt: new_initializer .

    $default  reduce using rule 465 (new_initializer_opt)


state 708

   72 new_expression: NEW new_placement_opt new_type_id new_initializer_opt .

    $default  reduce using rule 72 (new_expression)


state 709

   80 direct_new_declarator: '[' . expression ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 428
    expression                 go to state 779
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 710

  467 new_declarator_opt: new_declarator .

    $default  reduce using rule 467 (new_declarator_opt)


state 711

   79 new_declarator: direct_new_declarator .
   81 direct_new_declarator: direct_new_declarator . '[' constant_expression ']'

    '['  shift, and go to state 780

    $default  reduce using rule 79 (new_declarator)


state 712

   78 new_declarator: ptr_operator . new_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 236
    '['             shift, and go to state 709
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '*'       [reduce using rule 466 (new_declarator_opt)]
    '&'       [reduce using rule 466 (new_declarator_opt)]
    $default  reduce using rule 466 (new_declarator_opt)

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    nested_name_specifier    go to state 237
    new_declarator           go to state 710
    direct_new_declarator    go to state 711
    ptr_operator             go to state 712
    template_id              go to state 94
    new_declarator_opt       go to state 781


state 713

   77 new_type_id: type_specifier_seq new_declarator_opt .

    $default  reduce using rule 77 (new_type_id)


state 714

   52 postfix_expression: REINTERPRET_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 782


state 715

   65 unary_expression: SIZEOF '(' type_id ')' .

    $default  reduce using rule 65 (unary_expression)


state 716

   51 postfix_expression: STATIC_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 783


state 717

   54 postfix_expression: TYPEID '(' expression ')' .

    $default  reduce using rule 54 (postfix_expression)


state 718

   55 postfix_expression: TYPEID '(' type_id ')' .

    $default  reduce using rule 55 (postfix_expression)


state 719

  137 expression: expression ',' assignment_expression .

    $default  reduce using rule 137 (expression)


state 720

   88 cast_expression: '(' type_id ')' cast_expression .

    $default  reduce using rule 88 (cast_expression)


state 721

   46 postfix_expression: postfix_expression ARROW COLONCOLON id_expression .

    $default  reduce using rule 46 (postfix_expression)


state 722

   44 postfix_expression: postfix_expression ARROW TEMPLATE COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 784
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 723

   45 postfix_expression: postfix_expression ARROW TEMPLATE id_expression .

    $default  reduce using rule 45 (postfix_expression)


state 724

   39 postfix_expression: postfix_expression '(' expression_list_opt ')' .

    $default  reduce using rule 39 (postfix_expression)


state 725

   38 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 38 (postfix_expression)


state 726

   42 postfix_expression: postfix_expression '.' COLONCOLON id_expression .

    $default  reduce using rule 42 (postfix_expression)


state 727

   40 postfix_expression: postfix_expression '.' TEMPLATE COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 44

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 785
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 207
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 728

   41 postfix_expression: postfix_expression '.' TEMPLATE id_expression .

    $default  reduce using rule 41 (postfix_expression)


state 729

  121 conditional_expression: logical_or_expression '?' expression ':' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 786
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 730

   57 expression_list: expression_list ',' assignment_expression .

    $default  reduce using rule 57 (expression_list)


state 731

  323 initializer_list: initializer_list ',' . initializer_clause
  489 COMMA_opt: ',' .

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280
    '{'               shift, and go to state 482

    $default  reduce using rule 489 (COMMA_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 483
    initializer_clause         go to state 787
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 732

  320 initializer_clause: '{' initializer_list COMMA_opt . '}'

    '}'  shift, and go to state 788


state 733

  445 handler: CATCH '(' . exception_declaration ')' compound_statement

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 789
    COLONCOLON      shift, and go to state 116
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 157
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 790
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94
    exception_declaration      go to state 791


state 734

  499 handler_seq_opt: handler_seq .

    $default  reduce using rule 499 (handler_seq_opt)


state 735

  444 handler_seq: handler handler_seq_opt .

    $default  reduce using rule 444 (handler_seq)


state 736

  374 mem_initializer: mem_initializer_id '(' expression_list_opt ')' .

    $default  reduce using rule 374 (mem_initializer)


state 737

  148 labeled_statement: CASE constant_expression ':' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 259
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 492
    CASE              shift, and go to state 493
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    CONTINUE          shift, and go to state 494
    DEFAULT           shift, and go to state 495
    DELETE            shift, and go to state 263
    DO                shift, and go to state 496
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 264
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 186
    FALSE             shift, and go to state 265
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 497
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 498
    IF                shift, and go to state 499
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 500
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 267
    RETURN            shift, and go to state 501
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 268
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 269
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 502
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TRY               shift, and go to state 503
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 273
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 504
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280
    '{'               shift, and go to state 333

    $default  reduce using rule 468 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 505
    literal                     go to state 282
    integer_literal             go to state 283
    character_literal           go to state 284
    floating_literal            go to state 285
    string_literal              go to state 286
    boolean_literal             go to state 287
    primary_expression          go to state 288
    id_expression               go to state 289
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 290
    postfix_expression          go to state 291
    unary_expression            go to state 292
    unary_operator              go to state 293
    new_expression              go to state 294
    delete_expression           go to state 295
    cast_expression             go to state 296
    pm_expression               go to state 297
    multiplicative_expression   go to state 298
    additive_expression         go to state 299
    shift_expression            go to state 300
    relational_expression       go to state 301
    equality_expression         go to state 302
    and_expression              go to state 303
    exclusive_or_expression     go to state 304
    inclusive_or_expression     go to state 305
    logical_and_expression      go to state 306
    logical_or_expression       go to state 307
    conditional_expression      go to state 308
    assignment_expression       go to state 428
    expression                  go to state 506
    statement                   go to state 792
    labeled_statement           go to state 508
    expression_statement        go to state 509
    compound_statement          go to state 510
    selection_statement         go to state 512
    iteration_statement         go to state 513
    jump_statement              go to state 514
    declaration_statement       go to state 515
    block_declaration           go to state 516
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 517
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 518
    throw_expression            go to state 314
    expression_opt              go to state 519


state 738

  149 labeled_statement: DEFAULT ':' statement .

    $default  reduce using rule 149 (labeled_statement)


state 739

  160 iteration_statement: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 793


state 740

  162 for_init_statement: expression_statement .

    $default  reduce using rule 162 (for_init_statement)


state 741

  161 iteration_statement: FOR '(' for_init_statement . condition_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 259
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    BOOL              shift, and go to state 10
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 264
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 265
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    $default  reduce using rule 472 (condition_opt)

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 290
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 428
    expression                 go to state 744
    condition                  go to state 794
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_specifier_seq         go to state 746
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314
    condition_opt              go to state 795


state 742

  163 for_init_statement: simple_declaration .

    $default  reduce using rule 163 (for_init_statement)


state 743

  167 jump_statement: GOTO identifier ';' .

    $default  reduce using rule 167 (jump_statement)


state 744

  137 expression: expression . ',' assignment_expression
  157 condition: expression .

    ','  shift, and go to state 598

    $default  reduce using rule 157 (condition)


state 745

  154 selection_statement: IF '(' condition . ')' statement
  155                    | IF '(' condition . ')' statement ELSE statement

    ')'  shift, and go to state 796


state 746

  158 condition: type_specifier_seq . declarator '=' assignment_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 170
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 43
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    namespace_name           go to state 48
    original_namespace_name  go to state 49
    class_name               go to state 108
    template_name            go to state 52
    identifier               go to state 53
    id_expression            go to state 55
    unqualified_id           go to state 56
    qualified_id             go to state 57
    nested_name_specifier    go to state 171
    declarator               go to state 797
    direct_declarator        go to state 83
    ptr_operator             go to state 84
    declarator_id            go to state 86
    conversion_function_id   go to state 91
    operator_function_id     go to state 92
    template_id              go to state 94


state 747

  166 jump_statement: RETURN expression_opt ';' .

    $default  reduce using rule 166 (jump_statement)


state 748

  156 selection_statement: SWITCH '(' condition . ')' statement

    ')'  shift, and go to state 798


state 749

  442 try_block: TRY compound_statement handler_seq .

    $default  reduce using rule 442 (try_block)


state 750

  159 iteration_statement: WHILE '(' condition . ')' statement

    ')'  shift, and go to state 799


state 751

  147 labeled_statement: identifier ':' statement .

    $default  reduce using rule 147 (labeled_statement)


state 752

  451 exception_specification: THROW '(' . type_id_list_opt ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 116
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    $default  reduce using rule 502 (type_id_list_opt)

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 157
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 800
    type_specifier_seq         go to state 311
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94
    type_id_list               go to state 801
    type_id_list_opt           go to state 802


state 753

  267 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification .

    $default  reduce using rule 267 (direct_declarator)


state 754

  353 base_specifier: COLONCOLON nested_name_specifier class_name .

    $default  reduce using rule 353 (base_specifier)


state 755

  359 base_specifier: VIRTUAL COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 101
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 803
    template_name  go to state 52
    template_id    go to state 94


state 756

  357 base_specifier: VIRTUAL access_specifier COLONCOLON . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 456 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 456 (nested_name_specifier_opt)]

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    nested_name_specifier      go to state 229
    template_id                go to state 94
    nested_name_specifier_opt  go to state 804


state 757

  358 base_specifier: VIRTUAL access_specifier nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 101
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 805
    template_name  go to state 52
    template_id    go to state 94


state 758

  360 base_specifier: VIRTUAL nested_name_specifier_opt class_name .

    $default  reduce using rule 360 (base_specifier)


state 759

  352 base_specifier_list: base_specifier_list ',' base_specifier .

    $default  reduce using rule 352 (base_specifier_list)


state 760

  363 base_specifier: access_specifier COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 101
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 806
    template_name  go to state 52
    template_id    go to state 94


state 761

  361 base_specifier: access_specifier VIRTUAL COLONCOLON . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 456 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 456 (nested_name_specifier_opt)]

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    nested_name_specifier      go to state 229
    template_id                go to state 94
    nested_name_specifier_opt  go to state 807


state 762

  362 base_specifier: access_specifier VIRTUAL nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 101
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 808
    template_name  go to state 52
    template_id    go to state 94


state 763

  364 base_specifier: access_specifier nested_name_specifier_opt class_name .

    $default  reduce using rule 364 (base_specifier)


state 764

  429 type_parameter: CLASS identifier '=' . type_id

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 116
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 157
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 809
    type_specifier_seq         go to state 311
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 765

  425 template_parameter_list: template_parameter_list . ',' template_parameter
  432 type_parameter: TEMPLATE '<' template_parameter_list . '>' CLASS identifier
  433               | TEMPLATE '<' template_parameter_list . '>' CLASS identifier '=' template_name

    '>'  shift, and go to state 810
    ','  shift, and go to state 684


state 766

  431 type_parameter: TYPENAME identifier '=' . type_id

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 116
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 157
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 811
    type_specifier_seq         go to state 311
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 767

  423 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' declaration .

    $default  reduce using rule 423 (template_declaration)


state 768

  425 template_parameter_list: template_parameter_list ',' template_parameter .

    $default  reduce using rule 425 (template_parameter_list)


state 769

  295 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . cv_qualifier_seq exception_specification
  296                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . cv_qualifier_seq
  297                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . exception_specification
  298                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' .

    CONST     shift, and go to state 13
    THROW     shift, and go to state 660
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 298 (direct_abstract_declarator)

    cv_qualifier_seq         go to state 812
    cv_qualifier             go to state 175
    exception_specification  go to state 813


state 770

  299 direct_abstract_declarator: direct_abstract_declarator_opt '[' constant_expression_opt ']' .

    $default  reduce using rule 299 (direct_abstract_declarator)


state 771

  229 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>' .

    $default  reduce using rule 229 (elaborated_type_specifier)


state 772

   86 delete_expression: COLONCOLON DELETE '[' ']' cast_expression .

    $default  reduce using rule 86 (delete_expression)


state 773

   75 new_expression: COLONCOLON NEW new_placement_opt '(' type_id . ')' new_initializer_opt

    ')'  shift, and go to state 814


state 774

   73 new_expression: COLONCOLON NEW new_placement_opt new_type_id new_initializer_opt .

    $default  reduce using rule 73 (new_expression)


state 775

   53 postfix_expression: CONST_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 428
    expression                 go to state 815
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 776

   50 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 428
    expression                 go to state 816
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 777

   74 new_expression: NEW new_placement_opt '(' type_id ')' . new_initializer_opt

    '('  shift, and go to state 706

    $default  reduce using rule 464 (new_initializer_opt)

    new_initializer      go to state 707
    new_initializer_opt  go to state 817


state 778

   82 new_initializer: '(' expression_list_opt . ')'

    ')'  shift, and go to state 818


state 779

   80 direct_new_declarator: '[' expression . ']'
  137 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 819
    ','  shift, and go to state 598


state 780

   81 direct_new_declarator: direct_new_declarator '[' . constant_expression ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 338
    conditional_expression     go to state 339
    constant_expression        go to state 820
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94


state 781

   78 new_declarator: ptr_operator new_declarator_opt .

    $default  reduce using rule 78 (new_declarator)


state 782

   52 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 428
    expression                 go to state 821
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 783

   51 postfix_expression: STATIC_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 428
    expression                 go to state 822
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 784

   44 postfix_expression: postfix_expression ARROW TEMPLATE COLONCOLON id_expression .

    $default  reduce using rule 44 (postfix_expression)


state 785

   40 postfix_expression: postfix_expression '.' TEMPLATE COLONCOLON id_expression .

    $default  reduce using rule 40 (postfix_expression)


state 786

  121 conditional_expression: logical_or_expression '?' expression ':' assignment_expression .

    $default  reduce using rule 121 (conditional_expression)


state 787

  323 initializer_list: initializer_list ',' initializer_clause .

    $default  reduce using rule 323 (initializer_list)


state 788

  320 initializer_clause: '{' initializer_list COMMA_opt '}' .

    $default  reduce using rule 320 (initializer_clause)


state 789

  449 exception_declaration: ELLIPSIS .

    $default  reduce using rule 449 (exception_declaration)


state 790

  446 exception_declaration: type_specifier_seq . declarator
  447                      | type_specifier_seq . abstract_declarator
  448                      | type_specifier_seq .

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 170
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 369
    '~'             shift, and go to state 44
    '*'             shift, and go to state 45
    '&'             shift, and go to state 46

    '('       [reduce using rule 484 (direct_abstract_declarator_opt)]
    '['       reduce using rule 484 (direct_abstract_declarator_opt)
    $default  reduce using rule 448 (exception_declaration)

    namespace_name                  go to state 48
    original_namespace_name         go to state 49
    class_name                      go to state 108
    template_name                   go to state 52
    identifier                      go to state 53
    id_expression                   go to state 55
    unqualified_id                  go to state 56
    qualified_id                    go to state 57
    nested_name_specifier           go to state 171
    declarator                      go to state 823
    direct_declarator               go to state 83
    ptr_operator                    go to state 371
    declarator_id                   go to state 86
    abstract_declarator             go to state 824
    direct_abstract_declarator      go to state 373
    conversion_function_id          go to state 91
    operator_function_id            go to state 92
    template_id                     go to state 94
    direct_abstract_declarator_opt  go to state 375


state 791

  445 handler: CATCH '(' exception_declaration . ')' compound_statement

    ')'  shift, and go to state 825


state 792

  148 labeled_statement: CASE constant_expression ':' statement .

    $default  reduce using rule 148 (labeled_statement)


state 793

  160 iteration_statement: DO statement WHILE '(' . expression ')' ';'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 428
    expression                 go to state 826
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 794

  473 condition_opt: condition .

    $default  reduce using rule 473 (condition_opt)


state 795

  161 iteration_statement: FOR '(' for_init_statement condition_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 827


state 796

  154 selection_statement: IF '(' condition ')' . statement
  155                    | IF '(' condition ')' . statement ELSE statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 259
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 492
    CASE              shift, and go to state 493
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    CONTINUE          shift, and go to state 494
    DEFAULT           shift, and go to state 495
    DELETE            shift, and go to state 263
    DO                shift, and go to state 496
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 264
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 186
    FALSE             shift, and go to state 265
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 497
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 498
    IF                shift, and go to state 499
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 500
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 267
    RETURN            shift, and go to state 501
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 268
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 269
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 502
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TRY               shift, and go to state 503
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 273
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 504
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280
    '{'               shift, and go to state 333

    $default  reduce using rule 468 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 505
    literal                     go to state 282
    integer_literal             go to state 283
    character_literal           go to state 284
    floating_literal            go to state 285
    string_literal              go to state 286
    boolean_literal             go to state 287
    primary_expression          go to state 288
    id_expression               go to state 289
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 290
    postfix_expression          go to state 291
    unary_expression            go to state 292
    unary_operator              go to state 293
    new_expression              go to state 294
    delete_expression           go to state 295
    cast_expression             go to state 296
    pm_expression               go to state 297
    multiplicative_expression   go to state 298
    additive_expression         go to state 299
    shift_expression            go to state 300
    relational_expression       go to state 301
    equality_expression         go to state 302
    and_expression              go to state 303
    exclusive_or_expression     go to state 304
    inclusive_or_expression     go to state 305
    logical_and_expression      go to state 306
    logical_or_expression       go to state 307
    conditional_expression      go to state 308
    assignment_expression       go to state 428
    expression                  go to state 506
    statement                   go to state 828
    labeled_statement           go to state 508
    expression_statement        go to state 509
    compound_statement          go to state 510
    selection_statement         go to state 512
    iteration_statement         go to state 513
    jump_statement              go to state 514
    declaration_statement       go to state 515
    block_declaration           go to state 516
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 517
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 518
    throw_expression            go to state 314
    expression_opt              go to state 519


state 797

  158 condition: type_specifier_seq declarator . '=' assignment_expression

    '='  shift, and go to state 829


state 798

  156 selection_statement: SWITCH '(' condition ')' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 259
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 492
    CASE              shift, and go to state 493
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    CONTINUE          shift, and go to state 494
    DEFAULT           shift, and go to state 495
    DELETE            shift, and go to state 263
    DO                shift, and go to state 496
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 264
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 186
    FALSE             shift, and go to state 265
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 497
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 498
    IF                shift, and go to state 499
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 500
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 267
    RETURN            shift, and go to state 501
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 268
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 269
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 502
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TRY               shift, and go to state 503
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 273
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 504
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280
    '{'               shift, and go to state 333

    $default  reduce using rule 468 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 505
    literal                     go to state 282
    integer_literal             go to state 283
    character_literal           go to state 284
    floating_literal            go to state 285
    string_literal              go to state 286
    boolean_literal             go to state 287
    primary_expression          go to state 288
    id_expression               go to state 289
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 290
    postfix_expression          go to state 291
    unary_expression            go to state 292
    unary_operator              go to state 293
    new_expression              go to state 294
    delete_expression           go to state 295
    cast_expression             go to state 296
    pm_expression               go to state 297
    multiplicative_expression   go to state 298
    additive_expression         go to state 299
    shift_expression            go to state 300
    relational_expression       go to state 301
    equality_expression         go to state 302
    and_expression              go to state 303
    exclusive_or_expression     go to state 304
    inclusive_or_expression     go to state 305
    logical_and_expression      go to state 306
    logical_or_expression       go to state 307
    conditional_expression      go to state 308
    assignment_expression       go to state 428
    expression                  go to state 506
    statement                   go to state 830
    labeled_statement           go to state 508
    expression_statement        go to state 509
    compound_statement          go to state 510
    selection_statement         go to state 512
    iteration_statement         go to state 513
    jump_statement              go to state 514
    declaration_statement       go to state 515
    block_declaration           go to state 516
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 517
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 518
    throw_expression            go to state 314
    expression_opt              go to state 519


state 799

  159 iteration_statement: WHILE '(' condition ')' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 259
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 492
    CASE              shift, and go to state 493
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    CONTINUE          shift, and go to state 494
    DEFAULT           shift, and go to state 495
    DELETE            shift, and go to state 263
    DO                shift, and go to state 496
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 264
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 186
    FALSE             shift, and go to state 265
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 497
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 498
    IF                shift, and go to state 499
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 500
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 267
    RETURN            shift, and go to state 501
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 268
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 269
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 502
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TRY               shift, and go to state 503
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 273
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 504
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280
    '{'               shift, and go to state 333

    $default  reduce using rule 468 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 505
    literal                     go to state 282
    integer_literal             go to state 283
    character_literal           go to state 284
    floating_literal            go to state 285
    string_literal              go to state 286
    boolean_literal             go to state 287
    primary_expression          go to state 288
    id_expression               go to state 289
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 290
    postfix_expression          go to state 291
    unary_expression            go to state 292
    unary_operator              go to state 293
    new_expression              go to state 294
    delete_expression           go to state 295
    cast_expression             go to state 296
    pm_expression               go to state 297
    multiplicative_expression   go to state 298
    additive_expression         go to state 299
    shift_expression            go to state 300
    relational_expression       go to state 301
    equality_expression         go to state 302
    and_expression              go to state 303
    exclusive_or_expression     go to state 304
    inclusive_or_expression     go to state 305
    logical_and_expression      go to state 306
    logical_or_expression       go to state 307
    conditional_expression      go to state 308
    assignment_expression       go to state 428
    expression                  go to state 506
    statement                   go to state 831
    labeled_statement           go to state 508
    expression_statement        go to state 509
    compound_statement          go to state 510
    selection_statement         go to state 512
    iteration_statement         go to state 513
    jump_statement              go to state 514
    declaration_statement       go to state 515
    block_declaration           go to state 516
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 517
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 518
    throw_expression            go to state 314
    expression_opt              go to state 519


state 800

  452 type_id_list: type_id .

    $default  reduce using rule 452 (type_id_list)


state 801

  453 type_id_list: type_id_list . ',' type_id
  503 type_id_list_opt: type_id_list .

    ','  shift, and go to state 832

    $default  reduce using rule 503 (type_id_list_opt)


state 802

  451 exception_specification: THROW '(' type_id_list_opt . ')'

    ')'  shift, and go to state 833


state 803

  359 base_specifier: VIRTUAL COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 359 (base_specifier)


state 804

  357 base_specifier: VIRTUAL access_specifier COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 101
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 834
    template_name  go to state 52
    template_id    go to state 94


state 805

  358 base_specifier: VIRTUAL access_specifier nested_name_specifier_opt class_name .

    $default  reduce using rule 358 (base_specifier)


state 806

  363 base_specifier: access_specifier COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 363 (base_specifier)


state 807

  361 base_specifier: access_specifier VIRTUAL COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 101
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 835
    template_name  go to state 52
    template_id    go to state 94


state 808

  362 base_specifier: access_specifier VIRTUAL nested_name_specifier_opt class_name .

    $default  reduce using rule 362 (base_specifier)


state 809

  429 type_parameter: CLASS identifier '=' type_id .

    $default  reduce using rule 429 (type_parameter)


state 810

  432 type_parameter: TEMPLATE '<' template_parameter_list '>' . CLASS identifier
  433               | TEMPLATE '<' template_parameter_list '>' . CLASS identifier '=' template_name

    CLASS  shift, and go to state 836


state 811

  431 type_parameter: TYPENAME identifier '=' type_id .

    $default  reduce using rule 431 (type_parameter)


state 812

  295 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq . exception_specification
  296                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq .

    THROW  shift, and go to state 660

    $default  reduce using rule 296 (direct_abstract_declarator)

    exception_specification  go to state 837


state 813

  297 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' exception_specification .

    $default  reduce using rule 297 (direct_abstract_declarator)


state 814

   75 new_expression: COLONCOLON NEW new_placement_opt '(' type_id ')' . new_initializer_opt

    '('  shift, and go to state 706

    $default  reduce using rule 464 (new_initializer_opt)

    new_initializer      go to state 707
    new_initializer_opt  go to state 838


state 815

   53 postfix_expression: CONST_CAST '<' type_id '>' '(' expression . ')'
  137 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 839
    ','  shift, and go to state 598


state 816

   50 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' expression . ')'
  137 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 840
    ','  shift, and go to state 598


state 817

   74 new_expression: NEW new_placement_opt '(' type_id ')' new_initializer_opt .

    $default  reduce using rule 74 (new_expression)


state 818

   82 new_initializer: '(' expression_list_opt ')' .

    $default  reduce using rule 82 (new_initializer)


state 819

   80 direct_new_declarator: '[' expression ']' .

    $default  reduce using rule 80 (direct_new_declarator)


state 820

   81 direct_new_declarator: direct_new_declarator '[' constant_expression . ']'

    ']'  shift, and go to state 841


state 821

   52 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' expression . ')'
  137 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 842
    ','  shift, and go to state 598


state 822

   51 postfix_expression: STATIC_CAST '<' type_id '>' '(' expression . ')'
  137 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 843
    ','  shift, and go to state 598


state 823

  446 exception_declaration: type_specifier_seq declarator .

    $default  reduce using rule 446 (exception_declaration)


state 824

  447 exception_declaration: type_specifier_seq abstract_declarator .

    $default  reduce using rule 447 (exception_declaration)


state 825

  445 handler: CATCH '(' exception_declaration ')' . compound_statement

    '{'  shift, and go to state 333

    compound_statement  go to state 844


state 826

  137 expression: expression . ',' assignment_expression
  160 iteration_statement: DO statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 845
    ','  shift, and go to state 598


state 827

  161 iteration_statement: FOR '(' for_init_statement condition_opt ';' . expression_opt ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    $default  reduce using rule 468 (expression_opt)

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 428
    expression                 go to state 506
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314
    expression_opt             go to state 846


state 828

  154 selection_statement: IF '(' condition ')' statement .
  155                    | IF '(' condition ')' statement . ELSE statement

    ELSE  shift, and go to state 847

    ELSE      [reduce using rule 154 (selection_statement)]
    $default  reduce using rule 154 (selection_statement)


state 829

  158 condition: type_specifier_seq declarator '=' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 337
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DYNAMIC_CAST      shift, and go to state 264
    FALSE             shift, and go to state 265
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 267
    SIZEOF            shift, and go to state 268
    STATIC_CAST       shift, and go to state 269
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TYPEID            shift, and go to state 273
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280

    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 108
    template_name              go to state 52
    identifier                 go to state 53
    literal                    go to state 282
    integer_literal            go to state 283
    character_literal          go to state 284
    floating_literal           go to state 285
    string_literal             go to state 286
    boolean_literal            go to state 287
    primary_expression         go to state 288
    id_expression              go to state 289
    unqualified_id             go to state 56
    qualified_id               go to state 57
    nested_name_specifier      go to state 207
    postfix_expression         go to state 291
    unary_expression           go to state 292
    unary_operator             go to state 293
    new_expression             go to state 294
    delete_expression          go to state 295
    cast_expression            go to state 296
    pm_expression              go to state 297
    multiplicative_expression  go to state 298
    additive_expression        go to state 299
    shift_expression           go to state 300
    relational_expression      go to state 301
    equality_expression        go to state 302
    and_expression             go to state 303
    exclusive_or_expression    go to state 304
    inclusive_or_expression    go to state 305
    logical_and_expression     go to state 306
    logical_or_expression      go to state 307
    conditional_expression     go to state 308
    assignment_expression      go to state 848
    conversion_function_id     go to state 91
    operator_function_id       go to state 92
    template_id                go to state 94
    throw_expression           go to state 314


state 830

  156 selection_statement: SWITCH '(' condition ')' statement .

    $default  reduce using rule 156 (selection_statement)


state 831

  159 iteration_statement: WHILE '(' condition ')' statement .

    $default  reduce using rule 159 (iteration_statement)


state 832

  453 type_id_list: type_id_list ',' . type_id

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 101
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 116
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    STR_TYPE        shift, and go to state 42

    typedef_name               go to state 47
    namespace_name             go to state 48
    original_namespace_name    go to state 49
    class_name                 go to state 50
    enum_name                  go to state 51
    template_name              go to state 52
    nested_name_specifier      go to state 157
    type_specifier             go to state 158
    simple_type_specifier      go to state 68
    type_name                  go to state 69
    elaborated_type_specifier  go to state 70
    enum_specifier             go to state 71
    cv_qualifier               go to state 85
    type_id                    go to state 849
    type_specifier_seq         go to state 311
    class_specifier            go to state 88
    class_head                 go to state 89
    class_key                  go to state 90
    template_id                go to state 94


state 833

  451 exception_specification: THROW '(' type_id_list_opt ')' .

    $default  reduce using rule 451 (exception_specification)


state 834

  357 base_specifier: VIRTUAL access_specifier COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 357 (base_specifier)


state 835

  361 base_specifier: access_specifier VIRTUAL COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 361 (base_specifier)


state 836

  432 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS . identifier
  433               | TEMPLATE '<' template_parameter_list '>' CLASS . identifier '=' template_name

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 850


state 837

  295 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification .

    $default  reduce using rule 295 (direct_abstract_declarator)


state 838

   75 new_expression: COLONCOLON NEW new_placement_opt '(' type_id ')' new_initializer_opt .

    $default  reduce using rule 75 (new_expression)


state 839

   53 postfix_expression: CONST_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 53 (postfix_expression)


state 840

   50 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 50 (postfix_expression)


state 841

   81 direct_new_declarator: direct_new_declarator '[' constant_expression ']' .

    $default  reduce using rule 81 (direct_new_declarator)


state 842

   52 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 52 (postfix_expression)


state 843

   51 postfix_expression: STATIC_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 51 (postfix_expression)


state 844

  445 handler: CATCH '(' exception_declaration ')' compound_statement .

    $default  reduce using rule 445 (handler)


state 845

  160 iteration_statement: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 851


state 846

  161 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 852


state 847

  155 selection_statement: IF '(' condition ')' statement ELSE . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 259
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 492
    CASE              shift, and go to state 493
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    CONTINUE          shift, and go to state 494
    DEFAULT           shift, and go to state 495
    DELETE            shift, and go to state 263
    DO                shift, and go to state 496
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 264
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 186
    FALSE             shift, and go to state 265
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 497
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 498
    IF                shift, and go to state 499
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 500
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 267
    RETURN            shift, and go to state 501
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 268
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 269
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 502
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TRY               shift, and go to state 503
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 273
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 504
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280
    '{'               shift, and go to state 333

    $default  reduce using rule 468 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 505
    literal                     go to state 282
    integer_literal             go to state 283
    character_literal           go to state 284
    floating_literal            go to state 285
    string_literal              go to state 286
    boolean_literal             go to state 287
    primary_expression          go to state 288
    id_expression               go to state 289
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 290
    postfix_expression          go to state 291
    unary_expression            go to state 292
    unary_operator              go to state 293
    new_expression              go to state 294
    delete_expression           go to state 295
    cast_expression             go to state 296
    pm_expression               go to state 297
    multiplicative_expression   go to state 298
    additive_expression         go to state 299
    shift_expression            go to state 300
    relational_expression       go to state 301
    equality_expression         go to state 302
    and_expression              go to state 303
    exclusive_or_expression     go to state 304
    inclusive_or_expression     go to state 305
    logical_and_expression      go to state 306
    logical_or_expression       go to state 307
    conditional_expression      go to state 308
    assignment_expression       go to state 428
    expression                  go to state 506
    statement                   go to state 853
    labeled_statement           go to state 508
    expression_statement        go to state 509
    compound_statement          go to state 510
    selection_statement         go to state 512
    iteration_statement         go to state 513
    jump_statement              go to state 514
    declaration_statement       go to state 515
    block_declaration           go to state 516
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 517
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 518
    throw_expression            go to state 314
    expression_opt              go to state 519


state 848

  158 condition: type_specifier_seq declarator '=' assignment_expression .

    $default  reduce using rule 158 (condition)


state 849

  453 type_id_list: type_id_list ',' type_id .

    $default  reduce using rule 453 (type_id_list)


state 850

  432 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier .
  433               | TEMPLATE '<' template_parameter_list '>' CLASS identifier . '=' template_name

    '='  shift, and go to state 854

    $default  reduce using rule 432 (type_parameter)


state 851

  160 iteration_statement: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 160 (iteration_statement)


state 852

  161 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt ')' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 256
    FLOATING          shift, and go to state 257
    CHARACTER         shift, and go to state 258
    STRING            shift, and go to state 111
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 101
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 259
    PLUSPLUS          shift, and go to state 260
    MINUSMINUS        shift, and go to state 261
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 10
    BREAK             shift, and go to state 492
    CASE              shift, and go to state 493
    CHAR              shift, and go to state 11
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    CONTINUE          shift, and go to state 494
    DEFAULT           shift, and go to state 495
    DELETE            shift, and go to state 263
    DO                shift, and go to state 496
    DOUBLE            shift, and go to state 14
    DYNAMIC_CAST      shift, and go to state 264
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 186
    FALSE             shift, and go to state 265
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 497
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 498
    IF                shift, and go to state 499
    INLINE            shift, and go to state 21
    INT               shift, and go to state 22
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 500
    NEW               shift, and go to state 266
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 267
    RETURN            shift, and go to state 501
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 268
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 269
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 502
    THIS              shift, and go to state 270
    THROW             shift, and go to state 271
    TRUE              shift, and go to state 272
    TRY               shift, and go to state 503
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 273
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 504
    STR_TYPE          shift, and go to state 42
    '('               shift, and go to state 274
    '~'               shift, and go to state 275
    '*'               shift, and go to state 276
    '&'               shift, and go to state 277
    '+'               shift, and go to state 278
    '-'               shift, and go to state 279
    '!'               shift, and go to state 280
    '{'               shift, and go to state 333

    $default  reduce using rule 468 (expression_opt)

    typedef_name                go to state 47
    namespace_name              go to state 48
    original_namespace_name     go to state 49
    class_name                  go to state 50
    enum_name                   go to state 51
    template_name               go to state 52
    identifier                  go to state 505
    literal                     go to state 282
    integer_literal             go to state 283
    character_literal           go to state 284
    floating_literal            go to state 285
    string_literal              go to state 286
    boolean_literal             go to state 287
    primary_expression          go to state 288
    id_expression               go to state 289
    unqualified_id              go to state 56
    qualified_id                go to state 57
    nested_name_specifier       go to state 290
    postfix_expression          go to state 291
    unary_expression            go to state 292
    unary_operator              go to state 293
    new_expression              go to state 294
    delete_expression           go to state 295
    cast_expression             go to state 296
    pm_expression               go to state 297
    multiplicative_expression   go to state 298
    additive_expression         go to state 299
    shift_expression            go to state 300
    relational_expression       go to state 301
    equality_expression         go to state 302
    and_expression              go to state 303
    exclusive_or_expression     go to state 304
    inclusive_or_expression     go to state 305
    logical_and_expression      go to state 306
    logical_or_expression       go to state 307
    conditional_expression      go to state 308
    assignment_expression       go to state 428
    expression                  go to state 506
    statement                   go to state 855
    labeled_statement           go to state 508
    expression_statement        go to state 509
    compound_statement          go to state 510
    selection_statement         go to state 512
    iteration_statement         go to state 513
    jump_statement              go to state 514
    declaration_statement       go to state 515
    block_declaration           go to state 516
    simple_declaration          go to state 62
    decl_specifier              go to state 63
    decl_specifier_seq          go to state 517
    storage_class_specifier     go to state 65
    function_specifier          go to state 66
    type_specifier              go to state 67
    simple_type_specifier       go to state 68
    type_name                   go to state 69
    elaborated_type_specifier   go to state 70
    enum_specifier              go to state 71
    namespace_alias_definition  go to state 77
    using_declaration           go to state 78
    using_directive             go to state 79
    asm_definition              go to state 80
    cv_qualifier                go to state 85
    class_specifier             go to state 88
    class_head                  go to state 89
    class_key                   go to state 90
    conversion_function_id      go to state 91
    operator_function_id        go to state 92
    template_id                 go to state 94
    try_block                   go to state 518
    throw_expression            go to state 314
    expression_opt              go to state 519


state 853

  155 selection_statement: IF '(' condition ')' statement ELSE statement .

    $default  reduce using rule 155 (selection_statement)


state 854

  433 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier '=' . template_name

    TEMPLATE_NAME  shift, and go to state 6

    template_name  go to state 856


state 855

  161 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt ')' statement .

    $default  reduce using rule 161 (iteration_statement)


state 856

  433 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier '=' template_name .

    $default  reduce using rule 433 (type_parameter)
